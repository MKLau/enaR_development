library(enaR) <- 
library(enaR)
citation('enaR')
Rscript ../checks/enaR_checks.R 
data(troModels)
ssCheck(troModels[[21]])
ssCheck(troModels[[19]])
balance(troModels[[19]])
file.name='../debugging/data/Namibia output for Stuart.dat'
ssCheck(m)
warnings()
m
data(troModels)
troModels[[19]]
balance(troModels[[19]])
balance(m)
m
m%v%'input'
m%v%'export'
m%v%'respiration'
balance
m%v%'input'
m%v%'input'
m%v%'input'
force
bal(as.extended(m))
bal(as.extended(m))[nrow(as.extended(m)),]
bal(as.extended(m))[nrow(as.extended(m)),]
T.star=as.extended(m)
method='input
'
T.star.bal[nrow(T.star.bal),]
T.star[nrow(T.star),]-T.star.bal[nrow(T.star.bal),]
T.star=as.extended(m)
T.star <- round(T.star,0)
bal(T.star)
bal(T.star)[nrow(T.star),]
data(troModels)
balance(troModels[[19]])%v%'input'
troModels[[19]]%v%'input'
balance(m)
balance(m)%v%'input'
m%v%'input'
F.star
F.star
T.star-F.star
(T.star-F.star)[(T.star-F.star)!=0]
F.star[nrow(F.star),]
R
R
R
R[!=0]
R[R!=0]
round(R[R!=0],2)
T.star-T.star.bal
round(T.star-T.star.bal,2)
T.star
T.star.bal
T.star.bal[nrow(T.star.bal),]
T.star.bal[,ncol(T.star.bal)]
T.star.bal[,ncol(T.star.bal)-1]
T.star.bal[,ncol(T.star.bal)-2]
T.star.bal
cbind(T.star.bal[nrow(T.star.bal),],T.star.bal[,ncol(T.star.bal)-1],T.star.bal[,ncol(T.star.bal)-2])
round(cbind(T.star.bal[nrow(T.star.bal),],T.star.bal[,ncol(T.star.bal)-1],T.star.bal[,ncol(T.star.bal)-2]),2)
test=round(cbind(T.star.bal[nrow(T.star.bal),],T.star.bal[,ncol(T.star.bal)-1],T.star.bal[,ncol(T.star.bal)-2]),2)
apply(test,2,sum)
ssCheck(m)
ssCheck
x=m
tol=5
more=FALSE
zero.na=TRUE
Tin
Tout
Tin-Tout
d
pe
round(pe,2)
Tout
Tin
Tout
tot=Tin+Tout
tot
d/tot
round(d/tot,2)
ssCheck(m)
balance(m)
force.balance(m)
ssCheck
d/tot
(d/tot)*100
round((d/tot)*100,0)
All$C
x=m
I
G
GP
zero.na=TRUE
GP
T
x
Tin
Tout
d
Tin
Tout
m
x=m
pe
x=balance(m)
d
pe
ssCheck(m)
m.=balance(m)
ssCheck(m. <- 
ssCheck(m.)
balance
ssCheck(x)
ssCheck(m)
balance(m)
x
check
ssChek
x
x=m
balance(m)
m
m
ssCheck(m)
q()
y
scor.model <- readLines('http://people.uncw.edu/borretts/data/oyster.dat')
scor.model
q()
n
