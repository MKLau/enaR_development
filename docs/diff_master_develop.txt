diff --git a/.DS_Store b/.DS_Store
index bd812b2..afe789c 100644
Binary files a/.DS_Store and b/.DS_Store differ
diff --git a/DESCRIPTION b/DESCRIPTION
index 7e2a278..7c01b8a 100644
--- a/DESCRIPTION
+++ b/DESCRIPTION
@@ -1,12 +1,13 @@
 Package: enaR
 Type: Package
 Title: Tools for Ecological Network Analysis
-Version: 2.9.1
-Date: 2015-08-06
+Version: 2.10.0
+Date: 2017-01-26
 Author: M.K. Lau, S.R. Borrett, D.E. Hines, P. Singh
 Maintainer: Matthew K. Lau <enaR.maintainer@gmail.com>
-Description: Provides algorithms for the analysis of ecological networks. 
+Description: Provides algorithms for the analysis of ecological networks.
 Depends:
+    R (>= 2.10),
     MASS,
     stringr,
     sna,
@@ -14,7 +15,8 @@ Depends:
     gdata,
     stats,
     utils,
-    graphics
+    graphics,
+    limSolve
 Suggests:
     codetools,
     igraph,
@@ -22,3 +24,4 @@ Suggests:
 VignetteBuilder: R.rsp
 License: GPL-3
 URL: https://github.com/SEELab/enaR
+RoxygenNote: 5.0.1
diff --git a/NAMESPACE b/NAMESPACE
index e6e3eae..8478c3d 100644
--- a/NAMESPACE
+++ b/NAMESPACE
@@ -1,14 +1,40 @@
-exportPattern("^[[:alpha:]]+")
-importFrom(gdata, read.xls)
-importFrom(stats, sd)
-importFrom(utils, write.table)
-importFrom(utils, read.table)
-importFrom(graphics, plot)
-importFrom(graphics, par)
-importFrom(graphics, box)
-importFrom(graphics, axis)
-importFrom(graphics, points)
-importFrom(sna, as.sociomatrix.sna)
-importFrom(sna, geodist)
-importFrom(sna, component.dist)
-import(MASS,network,stringr)
+# Generated by roxygen2: do not edit by hand
+
+export(EcoNetWeb)
+export(ShannonDiversity)
+export(TES)
+export(TET)
+export(as.bipartite)
+export(as.extended)
+export(balance)
+export(eigenCentrality)
+export(enaAll)
+export(enaAscendency)
+export(enaControl)
+export(enaCycle)
+export(enaEnviron)
+export(enaFlow)
+export(enaMTI)
+export(enaStorage)
+export(enaStructure)
+export(enaTroAgg)
+export(enaUtility)
+export(environCentrality)
+export(findPathLength)
+export(force.balance)
+export(get.ns)
+export(get.orient)
+export(mExp)
+export(netOrder)
+export(pack)
+export(read.EcoNet)
+export(read.enam)
+export(read.nea)
+export(read.scor)
+export(read.wand)
+export(scc)
+export(set.orient)
+export(ssCheck)
+export(unpack)
+export(write.EcoNet)
+export(write.nea)
diff --git a/R/.Rhistory b/R/.Rhistory
deleted file mode 100644
index e935199..0000000
--- a/R/.Rhistory
+++ /dev/null
@@ -1,215 +0,0 @@
-library(enaR)
-write.nos
-data(oyster)
-write.nea(oyster,file.name='~/Desktop/test.csv',sep=',')
-?write.table
-write.nea(oyster,file.name='~/Desktop/test.csv',sep=',',row.names=TRUE)
-exists('~/Desktop/test.csv')
-exists('~/Desktop/test.csv')
-?exists
-exists(file.name)
-file.name='blah'
-exists(file.name)
-file.name='~/Desktop/test.csv'
-exists(file.name)
-exists('ls')
-exists('ls',2)
-exists('ls',3)
-exists('ls',1)
-exists('ls',1,inherits=FALSE)
-x=Inf
-is.infinite(x)
-x=-Inf
-is.infinite(x)
-opar <- par()
-par() <- opar
-par(opar)
-balance(oyster)
-balance
-enaEnviron(oyster)
-enaControl(oyster)
-pack
-library(igraph)
-pack
-library(devtools)
-?install_github
-install_github(username='MKLau',repo='SEELab/enaR',ref='beta')
-install_github(username='MKLau',repo='SEELab/enaR',ref='beta')
-ls
-example(enaR)
-example('enaR')
-data(oyster)
-enaAll(oyster)
-library(enaR)
-m <- read.scor("~/research/models_cpy/oyster.dat")
-m%e%"flow"
-as.matrix(m,attrname="flow")
-m
-?network.edgelist
-?network
-?set.network.attribute
-delete.network.attribute(m,"flow")
-m
-cycliv.R
-m
-as.matrix(m,attrname="flow")
-cycliv(m)
-m
-source("cycliv.R")
-source("cycliv.R")
-cycliv(m)
-source(TET.R)
-source("TET.R")
-TET(m)
-source(dir())
-dir()
-mode(dir())
-source("./*")
-sapply(dir(),source)
-ls
-ls()
-TET(m)
-m
-source("enaCycle.R")
-m
-as.matrix(m, attrname = 'flow')
-data()
-?data
-data(oyster)
-oyster
-a=cm(oyster)
-a
-oyster=cm(oyster)
-oyster
-oyster
-u <- unpack(oyster0
-)
-u <- unpack(oyster)
-u
-attributes(u)
-oyster
-data(oyster)
-rm(oyster)
-ls()
-rm(list=ls())
-data(oyster0
-)
-data(oyster)
-oyster
-m <- cm(oyster)
-m
-source('pack.R')
-m <- cm(oyster)
-source('unpack.R')
-m <- cm(oyster)
-oyster
-u <- unpack(oyster)
-u
-pack(u$F,u$z,u$r,u$e,u$y,u$X,u$Living)
-pack('flow'=u$F,u$z,u$r,u$e,u$y,u$X,u$Living)
-u$F
-data(oyster)
-oyster
-get.vertex.attribute(x,'Living')
-get.vertex.attribute(oyster,'Living')
-get.vertex.attribute(oyster,'living')
-a
-a <- cm(oyster)
- oyster
-get.vertex.attribute(oyster,'export')
-get.vertex.attribute(oyster,"export")
-get.vertex.attribute(oyster,"input")
-get.vertex.attribute(oyster,"living")
-get.vertex.attribute(oyster,"respiration")
-ssCheck(oyster)
-oyster%n%'flow'
-pack('flow'=oyster%n%'flow')
-flow <- oyster%n%'flow'
-x <- oyster
-'input'
-input
-respiration
-get.vertex.attribute(x,'input')
-attributes(x)
-x[[1]]
-y
-flow
-y
-ssCheck(y)
-as.extended(y)
-source("as.extended.R")
-ssCheck(y)
-flow <- as.matrix(y,attrname = 'flow')
-flow
-nrow(flow)
-source(ssCheck)
-source('ssCheck.R')
-source('as.extended.R')
-cm(oyster)
-a <- cm(oyster)
-a
-oyster <- cm(oyster)
-?save
-save(oyster,file="../data/oyster.rda")
-length(a)
-a[[1]]
-a[[58]]
-a[[4]]
-a[[1]]
-oyster
-cm
-cm(oyster)
-sourc('pack.R')
-source('pack.R')
-cm(oyster)
-pack
-pack
-oyster
-oyster%n%'flow'
-f <- oyster%n%'flow'
-y <- network(f,directed=TRUE,loops=TRUE)
-y
-y%v%'vertex.names'
-q()
-library(enaR)
-data(enaModels)
-enaModels[[1]]
-names(enaModels)[[6]]
-enaModels[[6]]
-balance(enaModels[[6]])
-i
-i
-i
-i
-i=11
-x <- enaModels[[i]]
-method='AVG2'
-tol=5
-n
-network.size(x)
-enaModels[[1]]
-y
-warnings()
-y
-warnings()
-q()
-n
-warnings()
-ssCheck(enaModels)
-x
-is.network(enaModels)
-warnings()
-test <- lapply(enaModels,ssCheck)
-test
-test <- unlist(test)
-test
-test[test!=TRUE]
-force.balance
-q()
-n
-force.balance
-warnings()
-q()
-n
-q()
-n
diff --git a/R/EcoNetWeb.R b/R/EcoNetWeb.R
new file mode 100644
index 0000000..5b27eeb
--- /dev/null
+++ b/R/EcoNetWeb.R
@@ -0,0 +1,47 @@
+### Reading models from the econet website
+### MKLau 31 Mar 2016
+
+
+
+
+
+
+
+#' Access example EcoNet models from the EcoNet website.
+#' 
+#' This function allows the user to access models that are presented on the
+#' website for EcoNet, the web-based interface for conducting ENA
+#' (http://eco.engr.uga.edu/), by Caner Kazanci at the University of Georgia.
+#' 
+#' 
+#' @param x The URL for the EcoNet examples.
+#' @param model.name The model to be accessed. If 'prompt' the user will be
+#' asked for the model they wish to use. Can also be a number for the model or
+#' the name of the model.
+#' @return Returns the model formatted as a network object.
+#' @author Matthew K. Lau
+#' @seealso \code{\link{read.EcoNet}}
+#' @references Kazanci, C., 2007. EcoNet: A new software for ecological
+#' modeling, simulation and network analysis, Ecol. Model., Vol 208/1 pp 3-8.
+#' @export EcoNetWeb
+EcoNetWeb <- function(x='http://eco.engr.uga.edu/Examples/examples.html',model.name='prompt'){
+    x <- readLines(x)
+    x <- x[1:(grep('<!-- Copy paste for new model',x)-1)]
+    mod.names <- x[grep('<h2>',x)]
+    mod.names <- sub('<h2>','',mod.names);mod.names <- sub('</h2>','',mod.names)
+    mod.names <- strsplit(mod.names,split=' ')
+    mod.names <- lapply(mod.names,function(x) x[x != ''])
+    mod.names <- unlist(lapply(mod.names,paste,collapse=' '))
+    mod.loc <- cbind(grep('<hr class=\"duz\">',x),grep('</pre></div></td></tr></table>',x))
+    mods <- apply(mod.loc,1,function(loc,x) x[loc[1]:loc[2]],x=x)
+    if (model.name == 'prompt'){
+        print(mod.names)
+        model.name <- as.numeric(readline('Enter model number:'))
+        out <- read.EcoNet(mods[[model.name]])
+    }else if (is.numeric(model.name[1])){
+        out <- read.EcoNet(mods[[model.name[1]]])
+    }else{
+        out <- read.EcoNet(mods[[agrep(model.name[1],mod.names,ignore.case=T)]])
+    }
+    return(out)
+}
diff --git a/R/ShannonDiversity.R b/R/ShannonDiversity.R
new file mode 100644
index 0000000..bdc7a24
--- /dev/null
+++ b/R/ShannonDiversity.R
@@ -0,0 +1,83 @@
+#' Shannon Diversity Metrics
+#' These are based on entropy and build Shannon and Weaver 1949
+#'
+#' Borrett | November 29, 2016
+#'
+#' INPUT = Vector
+#' Output = set of network statistics to charcterize the diversity in the vector
+#' ================================================================================
+
+
+
+
+
+
+
+#' Shannon Diversity Metrics These are based on entropy and build Shannon and
+#' Weaver 1949
+#' 
+#' Borrett | November 29, 2016
+#' 
+#' INPUT = Vector Output = set of network statistics to charcterize the
+#' diversity in the vector
+#' ================================================================================
+#' Shannon Diversity Metrics These are based on entropy and build Shannon and
+#' Weaver 1949
+#' 
+#' Borrett | November 29, 2016
+#' 
+#' INPUT = Vector Output = set of network statistics to charcterize the
+#' diversity in the vector
+#' ================================================================================
+#' Shannon information entropy
+#' 
+#' Calculates a number of metrics based on the Shannon information entropy
+#' measure of diversity in a vector, x.
+#' 
+#' @param x a 1 x n vector.
+#' @return \item{H}{Shannon entropy-based metric of diversity.  This captures
+#' the effects of both richnes (the length of the vector, n) and the evenennes
+#' of the distribution.} \item{Hmax}{The maximum possible value of H given a
+#' vector of the length n provided.} \item{Hr}{Relative evenness Hr = H/Hmax}
+#' \item{Hcentral}{The centralization or concentration of the values among the
+#' n elements} \item{n}{Number of elements in the vector.}
+#' \item{effective.n}{effective number of elements in the vector, given the
+#' distribution of the relative weights.}
+#' @note The formulation for Shannon Diversity uses a natural logarithm.  As
+#' the natural logarithm of zero is undefined, the input vector cannot contain
+#' zeros.  Analytically, there are two approaches to dealing with this issue if
+#' your vector contains zeros.  First, you can apply the analysis to only the
+#' non-zero elements.  Second, you can add a tiny amount to all of the elements
+#' such that the zero elements are now very small numbers, relative the
+#' original vector values.
+#' @author Stuart R. Borrett
+#' @export ShannonDiversity
+#' @examples
+#' 
+#' 
+#' 
+#' data(oyster)
+#' 
+#' #' throughflow diversity
+#' T <- enaFlow(oyster)$T
+#' ShannonDiversity(T)
+#' 
+#' #' storage (biomass) biodiversity
+#' X <- oyster %v% "storage"
+#' ShannonDiversity(X)
+#' 
+#' 
+#' 
+ShannonDiversity <-  function(x){
+    p <- x/sum(x)  # relative proportion
+    H <- -1 * sum(p * log(p) )  # results in nats (using natural log)  # Shannon Diversity
+    Hmax <- log(length(x)) # maximum possible Shannon Diversity
+    Hr <- H/Hmax
+    Hcentral <- 1-Hr
+    effective.n <- exp(H)  # effecive number of elements
+    n <- length(x)  # number of elements
+
+    return(c("H"=H, "Hmax" = Hmax, "Hr" = Hr, "Hcentral" = Hcentral,
+            "n" = n,
+            "effective.n" = effective.n))
+}
diff --git a/R/TES.R b/R/TES.R
index 2e2421a..ab88f91 100644
--- a/R/TES.R
+++ b/R/TES.R
@@ -5,6 +5,50 @@
 #' Borrett | July 7, 2012
 #' ---------------------------------------------------
 
+
+
+
+
+
+
+#' TES.R --- TOTAL ENVIRON STORAGE INPUT = network model OUTPUT = total environ
+#' throughput - unit and scaled
+#' 
+#' Borrett | July 7, 2012 ---------------------------------------------------
+#' TES.R --- TOTAL ENVIRON STORAGE INPUT = network model OUTPUT = total environ
+#' throughput - unit and scaled
+#' 
+#' Borrett | July 7, 2012 ---------------------------------------------------
+#' Calculate the Total Environ Storage
+#' 
+#' Calculates the total storage in each n input and output environs.  This
+#' function calculates the storage for both the unit input (output) and the
+#' realized input (output) environs.  Realized uses the observed inputs
+#' (outputs) rather than an assumed unit input (output) to each node.
+#' 
+#' @param x A network object.
+#' @param balance.override LOGICAL: should balancing being ignored.
+#' @return \item{realized.input}{input oriented, realized storage in each
+#' environ.} \item{realized.output}{output oriented, realized storage in each
+#' environ.} \item{unit.input }{input oriented, unit storage in each environ.}
+#' \item{unit.output}{input oriented, unit storage in each environ.}
+#' @author Matthew K. Lau Stuart R. Borrett David E. Hines
+#' @seealso %% ~~objects to See Also as \code{\link{help}}, ~~~
+#' \code{\link{enaStorage},\link{enaEnviron}}
+#' @references Matis, J.H. and Patten, B.C. 1981.  Environ analysis of linear
+#' compartmenal systems: the static, time invariant case.  Bulletin of the
+#' International Statistical Institute. 48, 527--565.
+#' @examples
+#' 
+#' 
+#' 
+#' data(troModels)
+#' tes <- TES(troModels[[6]])
+#' tes
+#' 
+#' 
+#' 
+#' @export TES
 TES <- function(x,balance.override=FALSE){
 
                                         #Check for network class
diff --git a/R/TET.R b/R/TET.R
index c1b484b..54c0ddb 100644
--- a/R/TET.R
+++ b/R/TET.R
@@ -5,6 +5,61 @@
 #' Borrett | July 7, 2012
 #' ---------------------------------------------------
 
+
+
+
+
+
+
+#' TET.R --- TOTAL ENVIRON THROUGHFLOW INPUT = network model OUTPUT = total
+#' environ throughput - unit and scaled
+#' 
+#' Borrett | July 7, 2012 ---------------------------------------------------
+#' TET.R --- TOTAL ENVIRON THROUGHFLOW INPUT = network model OUTPUT = total
+#' environ throughput - unit and scaled
+#' 
+#' Borrett | July 7, 2012 ---------------------------------------------------
+#' Calculates the Total Environ Throughflow for a Ecosystem Network Model
+#' 
+#' Determines the total environ throughflow (TET) for each of the 2 x n
+#' environs of the selected network model. It returns both the TET calculated
+#' from a unit input (output) vector and from the observed or realized input
+#' (output) vector.
+#' 
+#' @param x A network object.
+#' @param balance.override Logical: should the function work if the model is
+#' not at steady-state?
+#' @return \item{realized.input}{vector of the n realized total environ
+#' throughflows for the n input oriented environs.}
+#' \item{realzied.output}{vector of the n realized total environ throughflows
+#' for the n ouptut oriented environs.} \item{unit.input}{vector of the n unit
+#' total environ throughflows for the n input oriented environs.}
+#' \item{unit.output}{vector of the n unit total environ throughflows for the n
+#' output oriented environs.}
+#' @author Matthew K. Lau Stuart R. Borrett
+#' @seealso \code{\link{enaEnviron}}
+#' @references Gattie, D.K., Schramski, J.R., Borrett, S.R., Patten, B.C.,
+#' Bata, S.A., and Whipple, S.J. 2006. Indirect effects and distributed control
+#' in ecosystems: Network environ analysis of a seven-compartment model of
+#' nitrogen flow in the Neuse River Estuary, USA---Steady-state analysis. Ecol.
+#' Model. 194:162--177.
+#' 
+#' Whipple, S.J., Borrett, S.R., Patten, B.C., Gattie, D.K., Schramski, J.R.,
+#' and Bata, S.A. 2007.  Indirect effects and distributed control in
+#' ecosystems: Comparative network environ analysis of a seven-compartment
+#' model of nitrogen flow in the Neuse River Estuary, USA---Time series
+#' analysis. Ecol. Model. 206: 1--17.
+#' @examples
+#' 
+#' 
+#' 
+#' data(troModels)
+#' tet <- TET(troModels[[6]])
+#' tet
+#' 
+#' 
+#' 
+#' @export TET
 TET <- function(x,balance.override=FALSE){
 
                                         #Check for network class
diff --git a/R/as.bipartite.R b/R/as.bipartite.R
index 1ede555..4b00df8 100644
--- a/R/as.bipartite.R
+++ b/R/as.bipartite.R
@@ -5,6 +5,45 @@
 #' M. Lau July 2015
 #' ---------------------------------------------------
 
+
+
+
+
+
+
+#' as.bipartite --- convert a network object to a matrix for analysis with the
+#' bipartite package INPUT = network model OUTPUT = matrix representation M.
+#' Lau July 2015 ---------------------------------------------------
+#' as.bipartite --- convert a network object to a matrix for analysis with the
+#' bipartite package INPUT = network model OUTPUT = matrix representation M.
+#' Lau July 2015 --------------------------------------------------- Create a
+#' bipartite network.
+#' 
+#' Converts a network object (unipartite) to a two-mode (bipartite) network
+#' representation.
+#' 
+#' Bipartite network approaches are often used for analyzing the structure of
+#' interactions among species in communities.  Although typically ecosystem
+#' networks are handled using a unipartite representation, anlayzing them from
+#' a bipartite perspective may be informative. This function provides an easy
+#' means for converting to a bipartite representation as long as there is a
+#' natural division to categorize species into distinct modes.
+#' 
+#' @param x A network object.
+#' @param y A vector of membership values.
+#' @return Returns a matrix with the species of one mode arrayed in rows and
+#' the other in columns.
+#' @author Matthew K. Lau
+#' @examples
+#' 
+#' 
+#' 
+#' data(oyster)
+#' as.bipartite(oyster, gl(2, 3))
+#' 
+#' 
+#' 
+#' @export as.bipartite
 as.bipartite <- function(x,y){
     y <- factor(y)
     unpack(x)$F[y == levels(y)[1],y == levels(y)[2]]
diff --git a/R/as.extended.R b/R/as.extended.R
index f3807d9..8112b39 100644
--- a/R/as.extended.R
+++ b/R/as.extended.R
@@ -10,6 +10,50 @@
 #' M. Lau July 2011
 #' ---------------------------------------------------
 
+
+
+
+
+
+
+#' as.extended --- convert a network object to extended format in Allesina and
+#' Bondavalli 2003 INPUT = network model OUTPUT = the same model in extended
+#' format with inputs and exports/respiration in the same matrix REFERENCE:
+#' Allesina, S., Bondavalli, C., 2003. Steady state of ecosystem flow networks:
+#' a comparison between balancing procedures. Ecological Modelling 165(2-3):
+#' 231-239. M. Lau July 2011
+#' --------------------------------------------------- as.extended --- convert
+#' a network object to extended format in Allesina and Bondavalli 2003 INPUT =
+#' network model OUTPUT = the same model in extended format with inputs and
+#' exports/respiration in the same matrix REFERENCE: Allesina, S., Bondavalli,
+#' C., 2003. Steady state of ecosystem flow networks: a comparison between
+#' balancing procedures. Ecological Modelling 165(2-3): 231-239. M. Lau July
+#' 2011 --------------------------------------------------- Create an Extended
+#' Format Matrix
+#' 
+#' Converts a network object to the extended format of Allesina and Bondavalli
+#' (2003).
+#' 
+#' Used in the balance function.
+#' 
+#' @param x A network object.
+#' @param zero.na Logical: should NA's be replaced with zeros?
+#' @return Returns an extended format matrix.
+#' @author Matthew K. Lau Stuart R. Borrett
+#' @seealso \code{\link{balance}}
+#' @references Allesina, S., Bondavalli, C., 2003. Steady state of ecosystem
+#' flow networks: a comparison between balancing procedures.Ecological
+#' Modelling 165(2-3):231-239.
+#' @examples
+#' 
+#' 
+#' 
+#' data(troModels)
+#' as.extended(troModels[[6]])
+#' 
+#' 
+#' 
+#' @export as.extended
 as.extended <- function(x,zero.na=TRUE){
                                         #Check for network class object
   if (class(x) != "network"){warning('x is not a network class object')}
diff --git a/R/bal.R b/R/bal.R
index 0f23bb3..66d61e2 100644
--- a/R/bal.R
+++ b/R/bal.R
@@ -6,6 +6,32 @@
 #' Re-written: M. Lau | 17Oct2013 
 #' ---------------------------------------------------
 
+
+
+
+
+
+
+#' bal --- balances a flow model INPUT = network model in extended format
+#' OUTPUT = balanced model in extended format NOTE: this is the work horse for
+#' balance.R Original: M. Lau | July 2011 Re-written: M. Lau | 17Oct2013
+#' --------------------------------------------------- bal --- balances a flow
+#' model INPUT = network model in extended format OUTPUT = balanced model in
+#' extended format NOTE: this is the work horse for balance.R Original: M. Lau
+#' | July 2011 Re-written: M. Lau | 17Oct2013
+#' --------------------------------------------------- Subfunction for
+#' Balancing by Either Inputs or Outputs
+#' 
+#' Dependency for the \code{balance} function.
+#' 
+#' 
+#' @param T.star Extended, unbalanced matrix.
+#' @param method Balance by inputs or outputs.
+#' @return Returns an extended matrix for balancing by inputs or outputs.
+#' @author Matthew K. Lau Stuart R. Borrett
+#' @seealso \code{\link{balance}}
+#' @references Fath, B.D. and S.R. Borrett. 2006. A MATLAB function for network
+#' environ analysis. Environmental Modelling & Software 21:375-405.
 bal <- function(T.star='matrix',method=c('input','output')){
   
   if (length(method > 1)){method <- method[1]}
diff --git a/R/balance.R b/R/balance.R
index 46aab56..084e56f 100644
--- a/R/balance.R
+++ b/R/balance.R
@@ -1,9 +1,30 @@
-#' balance --- balances a flow model using several methods
-#' INPUT = network model
-#' OUTPUT = balanced model
-#'
-#' M. Lau | July 2011
-#' ---------------------------------------------------
+#' Balance Flow Network Models
+#' 
+#' Applies the methods of Allesina and Bondavalli (2003) for balancing flow
+#' network models.
+#' 
+#' 
+#' @param x A network object.
+#' @param method Methods for model balancing, see Allesina and Bondavalli
+#' (2003).
+#' @param tol Percent error tolerance used in the steady state check prior to
+#' balancing.
+#' @return Returns a network object with a balanced flow network model.
+#' @author Matthew K. Lau Stuart R. Borrett
+#' @seealso \code{\link{bal}}
+#' @references Allesina, S., Bondavalli, C., 2003. Steady state of ecosystem
+#' flow networks: a comparison between balancing procedures. Ecological
+#' Modelling 165(2-3):231-239.
+#' @examples
+#' 
+#' 
+#' 
+#' data(troModels)
+#' balance(troModels[[6]])
+#' 
+#' 
+#' 
+#' @export balance
 balance <-
   function(x,method=c('AVG2','AVG','IO','OI','I','O'),tol=5){
                                         #Check for network class
diff --git a/R/bcratio.R b/R/bcratio.R
index 0edba2e..6b0392b 100644
--- a/R/bcratio.R
+++ b/R/bcratio.R
@@ -1,11 +1,15 @@
-#' bcratio --- calculates the ratio of positive to 
-#' negative elements in a flow model
-#' INPUT = flow matrix
-#' OUTPUT = ratio of positive to negetive elements
+#' Calculates the Ratio of Positive to Negative Elements in a Network
 #' 
-#' S. Borrett | July 2011
-#' Singh, Hines, Borrett | Update June 2014
-#' ---------------------------------------------------
+#' Dependent function for the enaUtility function.
+#' 
+#' 
+#' @param x A matrix of flow values.
+#' @return Returns the ratio of positive to negative elements in the flow
+#' matrix.
+#' @author Stuart R. Borrett
+#' @seealso \code{\link{enaUtility}}
+#' @references Fath, B.D. and S.R. Borrett. 2006. A MATLAB function for network
+#' environ analysis. Environmental Modelling & Software 21:375-405.
 bcratio <- function(x='matrix'){
 	r=sum(x[x>0])/sum(abs(x[x<0]))  # creates the ratio of positive elements to negative elements.
   return(r)
diff --git a/R/cycliv.R b/R/cycliv.R
index e6be821..e5d259b 100644
--- a/R/cycliv.R
+++ b/R/cycliv.R
@@ -4,6 +4,83 @@
 #'## ---------------------------------------------
 
 
+
+
+
+
+
+
+#' ## Cycle Analysis for Feeding Cycles ## Singh P.  | July 2014 ## Algorithm
+#' Source : Ulanowicz 1991: A package for the Analysis of Ecosystem Flow
+#' Networks ## --------------------------------------------- ## Cycle Analysis
+#' for Feeding Cycles ## Singh P.  | July 2014 ## Algorithm Source : Ulanowicz
+#' 1991: A package for the Analysis of Ecosystem Flow Networks ##
+#' --------------------------------------------- Analysis of Feeding Cycles in
+#' a Network
+#' 
+#' Performs the full cycle analysis on the living subset of the network based
+#' on the algorithm described in Ulanowicz (1983) and implemented in NETWRK
+#' 4.2b. It returns data.frames with details of the simple cycles and nexus,
+#' vectors of Cycle distributions and Normalized distribution and matrices of
+#' Residual Flows and Aggregated Cycles.
+#' 
+#' 
+#' @param x a network object.  This includes all weighted flows into and out of
+#' each node. It must also include the "Living" vector that identifies the
+#' living (TRUE/FALSE) status of each node. Also, non-living nodes must be
+#' placed at the end of the node vector. The function netOrder can be used to
+#' reorder the network for this.
+#' @return \item{Table.cycle}{data.frame that presents the details of the
+#' simple cycles in the network. It contains "CYCLE" the cycle number, "NEXUS"
+#' the nexus number corresponding to the cycle, "NODES" the nodes constituting
+#' the cycle} \item{Table.nexus}{data.frame that presents the different nexuses
+#' characterized by their corresponding weak arcs. It contains "NEXUS" the
+#' nexus number, "CYCLES" the number of simple cycles present in that Nexus,
+#' "W.arc.From" the starting node of the corresponding weak arc, "W.arc.To" the
+#' ending node of the corresponding weak arc and "W.arc.Flow" the flow through
+#' that weak arc} \item{CycleDist}{vector of the Cycle Distribution that gives
+#' the flow which is cycling in loops of different sizes}
+#' \item{NormDist}{vector of the Normalized Distribution i.e. the Cycle
+#' Distribution normalized by the Total System Throughput for the network}
+#' \item{ResidualFlows}{matrix of the straight-through (acyclic) flows in the
+#' network} \item{AggregatedCycles}{matrix of the Aggregated Biogeochemical
+#' Cycles in the network} \item{ns}{vector of the full cycle analysis based
+#' network statistics. These include "NCYCS" the number of simple cycles
+#' identified in the network, "NNEX" the number of the disjoint cycles or
+#' number of Nexuses detected in the network and "CI" the cycling index of the
+#' network.}
+#' @note This function uses the same mechanism for analysis as used in the
+#' enaCycle function but is restricted to the living nodes only.
+#' 
+#' Also, similar to the enaCycle function, if the number of cycles in a nexus
+#' is more than 50, the "Table.cycle" has a blank line after 50 cycles followed
+#' by the cycles for the next nexus.
+#' 
+#' The analysis requires all the non-living nodes to be placed at the end in
+#' the network object.
+#' @author Pawandeep Singh
+#' @seealso \code{\link{enaTroAgg}, \link{enaCycle}, \link{netOrder}}
+#' @references %% ~put references to the literature/web site here ~ Johnson,
+#' D.B. 1975. Finding all the elementary circuits of a directed graph. SIAM J.
+#' Comput. 4:77--84
+#' 
+#' Ulanowicz, R.E. 1983. Identifying the structure of cycling in ecosystems.
+#' Methematical Biosciences 65:219--237
+#' 
+#' Ulanowicz, R.E. and Kay, J.J. 1991. A package for the analysis of ecosystem
+#' flow networks. Environmental Software 6:131 -- 142.
+#' @examples
+#' 
+#' 
+#' 
+#' data(troModels)
+#' liv.cyc <- cycliv(troModels[[6]])
+#' attributes(liv.cyc)
+#' ##-----------------------------------------------------------------
+#' ##-----------------------------------------------------------------
+#' ## 2 Repeats start. rep3,4
+#' ## Backtrack to prev. level
+#' 
 cycliv <- function(x){
 
 		 #Initials
diff --git a/R/eigenCentrality.R b/R/eigenCentrality.R
index 1162638..be91194 100644
--- a/R/eigenCentrality.R
+++ b/R/eigenCentrality.R
@@ -1,10 +1,14 @@
-#' eigenCentrality --- calculates the centrality of a network
-#' using an eigen vector approach
-#' INPUT = network matrix
-#' OUTPUT = list of centrality values (in-going, out-going
-#' and average)
-#' S. Borrett | July 2011
-#' ---------------------------------------------------
+#' Calculates the Eigen Centrality of a Network
+#' 
+#' Calculates the eigen centrality of a network.
+#' 
+#' 
+#' @param x A matrix defining a network graph.
+#' @return Returns the eigen based centrality of the network.
+#' @author Stuart R. Borrett Matthew K. Lau
+#' @references Bonacich, P., 1987. Power and centrality: a family of measures.
+#' American Journal of Sociology 92: 1170-1182.
+#' @export eigenCentrality
 eigenCentrality <- function(x='matrix'){
   if (class(x) != 'matrix'){warning('x is not a matrix class object')}
                                         # find dominant eigenvector of x
diff --git a/R/enaAll.R b/R/enaAll.R
index ea83bb7..e999ac8 100644
--- a/R/enaAll.R
+++ b/R/enaAll.R
@@ -5,6 +5,44 @@
 #' M. Lau | May 2013
 #' ---------------------------------------------------
 
+
+
+
+
+
+
+#' enaAll --- Conduct all ecological network analyses INPUT = network object
+#' OUTPUT = list of analytical output
+#' 
+#' M. Lau | May 2013 --------------------------------------------------- enaAll
+#' --- Conduct all ecological network analyses INPUT = network object OUTPUT =
+#' list of analytical output
+#' 
+#' M. Lau | May 2013 ---------------------------------------------------
+#' Conduct All Major ENA
+#' 
+#' Conducts all major ENA with default settings and returns the output as a
+#' named list.
+#' 
+#' @param x A network object.
+#' @return \item{ascendency}{enaAscendency} \item{control}{enaControl}
+#' \item{environ}{enaEnviron} \item{flow}{enaFlow} \item{mti}{enaMTI}
+#' \item{storage}{enaStorage} \item{structure}{enaStructure}
+#' \item{utility}{enaUtility with eigen.check=FALSE}
+#' @author Matthew K. Lau Stuart R. Borrett
+#' @seealso
+#' \code{\link{enaAscendency},\link{enaControl},\link{enaEnviron},\link{enaFlow},\link{enaMTI},\link{enaStorage},\link{enaUtility}}
+#' @examples
+#' 
+#' 
+#' 
+#' data(troModels)
+#' output = enaAll(troModels[[6]])
+#' names(output)
+#' 
+#' 
+#' 
+#' @export enaAll
 enaAll <- function(x = 'network object'){
   out <- list(ascendency = enaAscendency(x),
               control = enaControl(x),
diff --git a/R/enaAscendency.R b/R/enaAscendency.R
index 502b0cd..42a1b8d 100644
--- a/R/enaAscendency.R
+++ b/R/enaAscendency.R
@@ -2,15 +2,120 @@
 #' of Ulanowicz
 #' INPUT = network object
 #' OUTPUT = matrix of ascendency statistics
-#' 
+#'
 #' D. Hines | December 2011
+#' S.R. Borrett | May 2016 - updates
 #' ---------------------------------------------------
 
+
+
+
+
+
+
+#' enaAscendency --- calculates the ascendency statistics of Ulanowicz INPUT =
+#' network object OUTPUT = matrix of ascendency statistics
+#' 
+#' D. Hines | December 2011 S.R. Borrett | May 2016 - updates
+#' --------------------------------------------------- enaAscendency ---
+#' calculates the ascendency statistics of Ulanowicz INPUT = network object
+#' OUTPUT = matrix of ascendency statistics
+#' 
+#' D. Hines | December 2011 S.R. Borrett | May 2016 - updates
+#' --------------------------------------------------- Calculates the
+#' Ascendency of an Ecological Network
+#' 
+#' Calculates the average mutual information (AMI), ascendency, overhead, and
+#' capacity of input-output networks.  It also returns the ratios of ascendency
+#' and overhead to capacity. These metrics describe the organization of flow in
+#' an ecological network (Ulanowicz 1997).
+#' 
+#' @param x A network object.
+#' @return \item{H}{Total flow diversity (MacArthur 1955).  Uses the Shannon
+#' Information measure (aka Boltzmann entropy) applied to the individual flows.
+#' } \item{AMI}{Returns the Average Mutual Information (AMI) in a network. AMI
+#' provides a measure of the constraints placed on a given peice of energy
+#' matter moving through a network (Patricio et al. 2006) } \item{Hr}{Residual
+#' uncertainty that remains about the flow distribution once the ecosystem
+#' structure is specified (Hr = H - AMI). } \item{ASC}{Returns the ascendnecy
+#' of a network.  Ascendency is a scaled form of AMI relative to the total
+#' system throughput (Ulanowicz 1997; 2004).  Total system throughput is the
+#' sum of all activity in a network (Kay et al. 1989).} \item{OH}{Returns the
+#' overhead of a network.  Overhead is the proportion of the capacity in a
+#' network that is not used as ascendency (Ulanowicz 2004).} \item{CAP}{Returns
+#' the capacity of a network.  Capacity is defined as the sum of ascendency and
+#' overhead (Ulanowicz 2004).} \item{ACS.CAP}{Returns the proportion of
+#' capacity used by ascendency.} \item{OH.CAP}{Returns the proportion of
+#' capacity used by overhead.} \item{robustness}{Returns the robustness of the
+#' network.} \item{ELD}{Returns the Effective Link Density of the network(c)
+#' (Ulanowicz et al. 2014).} \item{TD}{Returns the Trophic Depth of the
+#' network(r) (Ulanowicz et al. 2014).} \item{A.input}{Returns the input
+#' ascendnecy of a network.} \item{A.internal}{Returns the internal ascendnecy
+#' of a network.} \item{A.export}{Returns the export ascendnecy of a network.}
+#' \item{A.respiration}{Returns the respiration ascendnecy of a network.}
+#' \item{OH.input}{Returns the input overhead of a network.}
+#' \item{OH.internal}{Returns the internal overhead of a network.}
+#' \item{OH.export}{Returns the export overhead of a network.}
+#' \item{OH.respiration}{Returns the respiration overhead of a network.}
+#' \item{CAP.input}{Returns the input capacity of a network.}
+#' \item{CAP.internal}{Returns the internal capacity of a network.}
+#' \item{CAP.export}{Returns the export capacity of a network.}
+#' \item{CAP.respiration}{Returns the respiration capacity of a network.}
+#' @note This and other Ulanowicz school functions require that export and
+#' respiration components of output be separately quantified.
+#' @author David E. Hines Matthew K. Lau Stuart R. Borrett
+#' @seealso
+#' \code{\link{read.scor},\link{read.wand},\link{enaStorage},\link{enaUtility}}
+#' @references Kay, J.J., Graham, L.A., Ulanowicz, R.E., 1989. A detailed guide
+#' to network analysis. p. 15-61 In: Wulff, F., Field, J.G., Man, K.H. (eds.)
+#' Network analysis in marine ecology. Coastal Estuarine Study Serries.
+#' Springer-Verlag, Berlin.
+#' 
+#' Patrico, J., Ulanowicz, R.E., Pardal, M.A., Marques J.C., 2004. Ascendency
+#' as an ecological indicator: a case study of estuarine pulse eutrophication.
+#' Estuar. Coast Shelf S. 60, 23-35.
+#' 
+#' Ulanowicz, R.E. and Norden, J.S., 1990. Symmetrical overhead in flow
+#' networks. International Journal of Systems Science, 21(2), pp.429-437.
+#' 
+#' Ulanowicz, R.E., 1997. Ecology, The Ascendent Perspective. Columbia
+#' University Press, New York.
+#' 
+#' Ulanowicz, R.E., 2004. Quantitative methods for ecological network analysis.
+#' Comput. Biol. Chem. 28, 321-33
+#' 
+#' Ulanowicz, R.E., Holt, R.D., Barfield, M., 2014. Limits on ecosystem trophic
+#' complexity: insights from ecological network analysis. Ecology Letters
+#' 17:127-136
+#' @export enaAscendency
+#' @examples
+#' 
+#' 
+#' 
+#' data(troModels)
+#' enaAscendency(troModels[[6]])
+#' ####### set initial conditions for calculations #########
+#' ## calculate H & CAPACITY  #######################################
+#' H = Total Flow Diversity
+#' ################### calculate AMI  #######################
+#' AMI = Average Mutual Informaiton
+#' ################ calculate ascendency ###################
+#' ################ calculate residual diversity  ####################
+#' ################ calculate overhead  ####################
+#' ################### calculate ratios ####################
+#' #####################################################################
+#' #####################################################################
+#' 
 enaAscendency <- function(x='network object'){
+    if (class(x) != 'network'){warning('x is not a network class object')}
 
-  if (any(is.na(x%v%'export'))|any(is.na(x%v%'respiration'))){
-    warning('Model is missing either export or respiration. Calculations may not be correct.')
-  }
+
+    if (any(is.na(x%v%'export'))){
+        warning('Export data is absent from the model.')
+    }
+    if(any(is.na(x%v%'respiration'))){
+           warning('Respiration data is absent from the model.')
+   }
 
 #'####### set initial conditions for calculations #########
   T.ulan <- as.extended(x)
@@ -20,9 +125,20 @@ enaAscendency <- function(x='network object'){
   cap <- mat.or.vec(N,N) # initialize capacity matrix
                                         #calculate total system throughPUT
   TSTp <- sum(T.ulan)
-  
-#'################### calculate AMI #######################
-  
+
+#'## calculate H & CAPACITY  #######################################
+  #' H = Total Flow Diversity
+
+  h <- T.ulan/sum(T.ulan)
+  h2 <- log2(h)
+  h2[!is.finite(h2)] <- 0
+  H = - sum(h * h2)   # Total Flow Diversity
+
+  CAP <- H * TSTp     # Capactity
+
+#'################### calculate AMI  #######################
+  #' AMI = Average Mutual Informaiton
+
                                         # loop through T.ulan to calculate AMI
   for (i in 1:N){
     for (j in 1:N){
@@ -33,15 +149,19 @@ enaAscendency <- function(x='network object'){
       }
     }
   }
-  
+
   AMI <- sum(ami)
-  
+
 #'################ calculate ascendency ###################
-  
-  ASC <- TSTp*AMI
-  
+
+  ASC <- TSTp * AMI
+
+#'################ calculate residual diversity  ####################
+
+  Hr <- H - AMI
+
 #'################ calculate overhead  ####################
-  
+
                                         # loop through T.ulan to calculate overhead
   for (i in 1:N){
     for (j in 1:N){
@@ -52,45 +172,28 @@ enaAscendency <- function(x='network object'){
       }
     }
   }
-  
+
   OH <- -sum(oh)
-  
-#'############## calculate capacity (long) ###############
-  
-                                        # loop through T.ulan to calculate capacity
-  for (i in 1:N){
-    for (j in 1:N){
-      if (T.ulan[i,j] == 0){
-        cap[i,j] <- 0
-      }else{
-        cap[i,j] <- T.ulan[i,j] * log2((T.ulan[i,j])/(TSTp))
-      }
-    }
-  }
-  
-  CAP <- -sum(cap)
-  
-#'############# calculate capacity (short) ################
-  
-  CAP2 <- ASC+OH
-  
-  
+
+
 #'################### calculate ratios ####################
-  
+
                                         # ratio for ascendency/capacity
   ASC.CAP <- ASC/CAP
-  
+
                                         #ratio for overhead/capacity
   OH.CAP <- OH/CAP
-  
+
                                         #confirm ratios sum to 1
   ASC.OH.RSUM <- ASC.CAP + OH.CAP
 
   robustness = -1 * ASC.CAP * log(ASC.CAP)  # robustness from Ulanowicz 2009; Fath 2014
-  
+
+
+
   ################# Calculating Effective Link Density and Trophic Depth ########
   ## Calculate t.ulan 't'
-  
+
   for (i in 1:N) {
         for (j in 1:N) {
             if (T.ulan[i, j] == 0) {
@@ -101,7 +204,7 @@ enaAscendency <- function(x='network object'){
             }
         }
     }
-    
+
     ## Effective Link Density (c)
     for (i in 1:N) {
         for (j in 1:N) {
@@ -114,7 +217,7 @@ enaAscendency <- function(x='network object'){
         }
     }
     C.LD <- prod(c.ld)
-    
+
     ## Trophic Depth (r)
     for (i in 1:N) {
         for (j in 1:N) {
@@ -127,13 +230,92 @@ enaAscendency <- function(x='network object'){
         }
     }
     R.TD <- prod(r.td)
-    
+
     ELD <- C.LD
     TD <- R.TD
     ##############################################################################
-    
-    ns <- cbind(AMI,ASC,OH,CAP,ASC.CAP,OH.CAP, robustness, ELD, TD)
+
+
+  #'#####################################################################
+  # tetrad partition of A, C, O -> input, internal, export, respiration
+  #'#####################################################################
+  n <- N - 3
+
+  # -- ASCENDENCY --
+  # input
+  tmp = 0
+  for(j in 1:n){
+      tmp[j] <-  T.ulan[(n+3),j]  * log2(  (T.ulan[(n+3),j] * TSTp)/( sum(T.ulan[(n+3),]) * sum(T.ulan[,j]) ) )
+  }
+  A.input <- sum(tmp[!is.nan(tmp)])   # have to remove NaN values
+
+  # internal
+  tmp=mat.or.vec(n,n)
+  for(i in 1:n){
+      for(j in 1:n){
+          tmp[i,j]= T.ulan[i,j] * log2(  (T.ulan[i,j] * TSTp) /( sum(T.ulan[i,]) * sum( T.ulan[,j]) ))
+      }
+  }
+  A.internal <- sum(tmp[!is.nan(tmp)])
+
+  # Exports
+  tmp <- 0
+  for(i in 1:n){
+      tmp[i] = T.ulan[i,(n+1)] * log2( (T.ulan[i,(n+1)] * TSTp) / ( sum(T.ulan[,(n+1)]) * sum(T.ulan[i,]) ) )
+  }
+  A.export <- sum(tmp[!is.nan(tmp)])
+
+  # Respiration
+  tmp <- 0
+  for(i in 1:n){
+      tmp[i] = T.ulan[i,(n+2)] * log2( (T.ulan[i,(n+2)] * TSTp) / ( sum(T.ulan[,(n+2)]) * sum(T.ulan[i,]) ) )
+  }
+  A.respiration <- sum(tmp[!is.nan(tmp)])
+
+  # -- OVERHEAD --
+  # input
+  tmp = 0
+  for(j in 1:n){
+      tmp[j] <-  -1 * T.ulan[(n+3),j]  * log2(  (T.ulan[(n+3),j]^2 )/( sum(T.ulan[(n+3),]) * sum(T.ulan[,j]) ) )
+  }
+  OH.input <- sum(tmp[!is.nan(tmp)])   # have to remove NaN values
+
+  # internal
+  tmp=mat.or.vec(n,n)
+  for(i in 1:n){
+      for(j in 1:n){
+          tmp[i,j]= -1 * T.ulan[i,j] * log2(  (T.ulan[i,j]^2) /( sum(T.ulan[i,]) * sum( T.ulan[,j]) ))
+      }
+  }
+  OH.internal <- sum(tmp[!is.nan(tmp)])
+
+  # export
+  tmp <- 0
+  for(i in 1:n){
+      tmp[i] = -1 * T.ulan[i,(n+1)] * log2( (T.ulan[i,(n+1)]^2) / ( sum(T.ulan[,(n+1)]) * sum(T.ulan[i,]) ) )
+  }
+  OH.export <- sum(tmp[!is.nan(tmp)])
+
+  # respriation
+  tmp <- 0
+  for(i in 1:n){
+      tmp[i] = -1 *  T.ulan[i,(n+2)] * log2( (T.ulan[i,(n+2)]^2) / ( sum(T.ulan[,(n+2)]) * sum(T.ulan[i,]) ) )
+  }
+  OH.respiration <- sum(tmp[!is.nan(tmp)])
+
+  # -- CAPACITY --
+  CAP.input = A.input + OH.input
+  CAP.internal = A.internal + OH.internal
+  CAP.export = A.export + OH.export
+  CAP.respiration = A.respiration + OH.respiration
+
+
+  ns <- cbind(H, AMI, Hr, CAP, ASC, OH, ASC.CAP, OH.CAP,
+              robustness, ELD, TD,
+              A.input, A.internal, A.export, A.respiration,
+              OH.input, OH.internal, OH.export, OH.respiration,
+              CAP.input, CAP.internal, CAP.export, CAP.respiration)
                                         #
   return(ns)
-  
+
 }
diff --git a/R/enaControl.R b/R/enaControl.R
index d95c1cc..ee29a91 100644
--- a/R/enaControl.R
+++ b/R/enaControl.R
@@ -2,85 +2,145 @@
 #' INPUT = network object
 #' OUTPUT = list of control statistics
 #' M. Lau | July 2011
+#' P. Singh | Update Summer 2013
+#' S.R. Borrett | Update March 2016
 
 #' ---------------------------------------------------
 
+
+
+
+
+
+
+#' enaControl --- control analyses INPUT = network object OUTPUT = list of
+#' control statistics M. Lau | July 2011 P. Singh | Update Summer 2013 S.R.
+#' Borrett | Update March 2016
+#' --------------------------------------------------- enaControl --- control
+#' analyses INPUT = network object OUTPUT = list of control statistics M. Lau |
+#' July 2011 P. Singh | Update Summer 2013 S.R. Borrett | Update March 2016
+#' --------------------------------------------------- Control Analyses of
+#' Ecological Networks
+#' 
+#' Analyses for analyzing the control amongst the nodes in ecological networks.
+#' 
+#' 
+#' @param x A network object.
+#' @param zero.na Makes undefined (NA) values zero.
+#' @param balance.override Turns off balancing and checks of network balance.
+#' @return \item{CN}{Control matrix using flow values.} \item{CQ}{Control
+#' matrix using storage values.} \item{CR}{Schramski Control Ratio Matrix}
+#' \item{CD}{Schramski Control Difference Matrix} \item{CA}{Control Allocation
+#' Matrix} \item{CDep}{Control Dependency Matrix} \item{sc}{Schramski System
+#' Control vector} \item{scp}{Schramski system control vector as percent of
+#' total control} \item{ns}{vector of network-level summary statistics}
+#' @author Matthew K. Lau Stuart R. Borrett Pawandeep Singh
+#' @seealso \code{\link{enaStorage}}
+#' @references Fath, B. D., Borrett, S. R. 2006. A MATLAB function for Network
+#' Environ Analysis.  Environmental Modelling & Software 21:375-405
+#' 
+#' Schramski, J.R., Gattie, D.K., Patten, B.C., Borrett S.R., Fath, B.D.,
+#' Thomas, C.R., and Whipple, S.J. 2006. Indirect effects and distributed
+#' control in ecosystems: Distributed control in the environ networks of a
+#' seven compartment model of nitrogen flow in the Neuse River Estuary, USA
+#' Steady-state analysis. Ecological Modelling 194:189-201
+#' 
+#' Schramski, J.R., Gattie, D.K., Patten, B.C., Borrett S.R., Fath, B.D., and
+#' Whipple, S.J. 2007. Indirect effects and distributed control in ecosystems:
+#' Distributed control in the environ networks of a seven compartment model of
+#' nitrogen flow in the Neuse River Estuary, USA Time series analysis.
+#' Ecological Modelling 206:18-30
+#' 
+#' Chen, S., Fath, B.D., Chen, B. 2011. Information-based network environ
+#' analysis: a system perspective for ecologcial risk assessment.  Ecol. Ind.
+#' 11:1664-1672.
+#' 
+#' Chen, S. and Chen, B. 2015. Urban energy consumption: Different insights
+#' from energy flow analysis, input-output analysis and ecological network
+#' analysis.  Applied Energy 138:99-107.
+#' @examples
+#' 
+#' 
+#' 
+#' data(troModels)
+#' enaControl(troModels[[6]])
+#' 
+#' 
+#' 
+#' @export enaControl
 enaControl <- function(x, zero.na=TRUE,balance.override=FALSE){
-                                        #Missing Data Check
-  if (any(is.na(x%v%'storage'))){
-    warning('This function requires quantified storage values.')
-  }else{
                                         #Check for network class
     if (class(x) != 'network'){warning('x is not a network class object')}
                                         #Check for balancing
     if (balance.override){}else{
-      if (any(list.network.attributes(x) == 'balanced') == FALSE){x%n%'balanced' <- ssCheck(x)}
-      if (x%n%'balanced' == FALSE){warning('Model is not balanced'); stop}
+        if (any(list.network.attributes(x) == 'balanced') == FALSE){x%n%'balanced' <- ssCheck(x)}
+        if (x%n%'balanced' == FALSE){warning('Model is not balanced'); stop}
     }
-                                        #Unpack data
-    Ti <- x%v%'input'
-    exp <- x%v%'export';exp[is.na(exp)] <- 0
-    res <- x%v%'respiration';res[is.na(res)] <- 0
-    Tj <- exp + res
-    flow <- t(as.matrix(x,attrname="flow"))
-    Q <- enaStorage(x)$Q
-    QP <- enaStorage(x)$QP
-
-                                        #Input perspective
-    T. <- Ti + apply(flow,1,sum)
-    GP <- flow / T.
-    if (zero.na){GP[is.na(GP)] <- 0}else{}
-    I <- GP * 0; diag(I) <- 1
-    NP <- ginv((I - GP))
-
-                                        #Output perspective
-    T. <- apply(flow,2,sum) + Tj
-    G <- t(t(flow) / T.)
-    if (zero.na){G[is.na(G)] <- 0}else{}
-    I <- G * 0; diag(I) <- 1
-    N <- ginv((I - G))
-
-                                        #Calculate the control matrix
-    CN <- N / NP
-    if (zero.na){CN[is.na(CN)] <- 0}
-    for (i in (1:nrow(CN))){
-      for (j in (1:ncol(CN))){
-        if (CN[i,j] < 1){CN[i,j] <- 1 - CN[i,j]}else{CN[i,j] <- 0}
-      }
+
+    u <- unpack(x)  # unpack the model
+    F <- enaFlow(x, balance.override=balance.override) # perform flow analysis
+
+    # Calculate the control matrix - FLOW
+    CN <- F$N / t(F$NP)
+    i <- which(CN<1,arr.ind=TRUE)
+    j <- which(!(CN<1),arr.ind=TRUE)
+    CN[i] <- 1 - CN[i]
+    CN[j] <- 0
+    if (zero.na){
+        CN[!is.finite(CN)] <- 0
     }
 
-                                        #Storage version
-    CQ <- ginv(QP) %*% Q
-                                     #SCHRAMSKY'S ALGORITHM
-    #Algorithm Source: Schramsky et al Eco. Mod. I94(2006) 189-201########
-    T_out <- N %*% Ti                               # Component Output Throughflow T_out
-    T_in <- Tj %*% NP                               # Component Input Throughflow T_in given the Output y(=Tj)
-    T_in_mat <- matrix(T_in,nrow=length(T_in), ncol=length(T_in),byrow='TRUE')# T_in_mat repeats T_in vector in rows
-    T_out_mat <- matrix(T_out,nrow=length(T_out),ncol=length(T_out),byrow='FALSE') # T_out_mat repeats T_out in cols
-    eta_1<-N/T_out_mat                              # eta matrix. Can be done by 2 different ways. Way1
-    eta_2<-NP/T_in_mat                              # Way2 ::: Theoretically eta_1==eta_2 but Numerical error
-    eta<-eta_1                                      # eta:=eta_1. Can be defined as eta_2 to observe variation
-    eta2<-t(eta)                                    # Taking the transpose of eta
-    CD = eta - eta2                                 # Calculating the Control Difference Matrix
-    CR = CD/pmax(eta,eta2)                          # Control Ratio Matrix. Dividing terms by Max eta value
-    sc = apply(CD,2,sum)                            # Calculating the System Control Vector
-    names(sc) <- rownames(flow)                     # Assigning Names
-    rownames(CR) <- colnames(CR) <- rownames(flow)
-    rownames(CD) <- colnames(CD) <- rownames(flow)
-                                        #Name nodes
-    rownames(CN) <- colnames(CN) <- rownames(flow)
-    rownames(CQ) <- colnames(CQ) <- rownames(flow)
-                                        #Re-orient output
+    # Calculate the control matrix - STORAGE
+    # H:  Storage and Flow provide the same answer
+    if(!any(is.na(x%v%'storage'))){
+        S <- enaStorage(x,balance.override=balance.override)
+        CQ <- S$Q / t(S$QP)
+        i <- which(CQ<1,arr.ind=TRUE)
+        j <- which(!(CQ<1),arr.ind=TRUE)
+        CQ[i] <- 1 - CQ[i]
+        CQ[j] <- 0
+        if (zero.na){
+            CQ[!is.finite(CQ)] <- 0
+        }
+    } else {
+        CQ <- NA
+    }
+
+        # Schramski Control Measures (2006, 2007)
+
+    eta <- t(t(F$N) / F$T)  # row-to-column
+    CD <- eta - t(eta)      # control difference
+    CR <- CD/pmax(eta,t(eta))  # control ratio
+    sc <- apply(CD,1,sum)  # system control vector
+    psc <- sc/(sum(abs(sc)/2)) * 100 # percent system control vector
+
+    TSC <- sum(abs(sc)/2)
+    ns <- c("TSC"=TSC)
+
+    # Control Allocation and Control Dependence
+    # Chen et al. 2011; Chen and Chen 2015
+
+    d <- F$N - t(F$NP)  # difference
+    d[d<0] = 0  # remove negative values
+    cd.r <- apply(d,1,sum)
+    cd.c <- apply(d,2,sum)
+
+    CA <- ginv(diag(cd.r)) %*% d   # control allocation matrix
+    CDep <- ginv(diag(cd.c)) %*% d   # control depedency matrix
+
+
     orient <- get.orient()
-    if (orient == 'rc'){
-      CN <- t(CN)
-      CQ <- t(CQ)
-      CR <- t(CR)
-      CD <- t(CD)
-    }else{}
-                                        #Package up output
-    out <- list('CN'=CN,'CQ'=CQ,'CR'=CR,'CD'=CD,'sc'=sc)
-
-    return(out)
-  }
+    if (orient == 'school'){
+        CN <- t(CN)
+        CQ <- t(CQ)
+        CR <- t(CR)
+        CD <- t(CD)
+        CA <- t(CA)
+        CDep <- t(CDep)
+
+    }
+
+    return(list("CN"=CN,"CQ"=CQ,"CD"=CD,"CR"=CR, "CA"=CA, "CDep"=CDep,
+                "sc"=sc,"psc"=psc, "ns"=ns))
 }
+
diff --git a/R/enaCycle.R b/R/enaCycle.R
index fc62ab0..5e03f33 100644
--- a/R/enaCycle.R
+++ b/R/enaCycle.R
@@ -4,6 +4,87 @@
 #'## -----------------------------------------------
 
 
+
+
+
+
+
+
+#' ## NETWRK's Full Cycle Analysis ## Singh P. | July 2014 ## Algorithm Source
+#' : Ulanowicz 1991: A package for the Analysis of Ecosystem Flow Networks ##
+#' ----------------------------------------------- ## NETWRK's Full Cycle
+#' Analysis ## Singh P. | July 2014 ## Algorithm Source : Ulanowicz 1991: A
+#' package for the Analysis of Ecosystem Flow Networks ##
+#' ----------------------------------------------- Full Cycle Analysis of
+#' Ecological Networks
+#' 
+#' It performs the full cycle analysis on the network based on the algorithm
+#' described in Ulanowicz (1983) and implemented in NETWRK 4.2b. It returns
+#' data.frames with details of the simple cycles and nexus, vectors of Cycle
+#' distributions and Normalized distribution and matrices of Residual Flows and
+#' Aggregated Cycles.
+#' 
+#' 
+#' @param x a network object.  This includes all weighted flows into and out of
+#' each node.
+#' @return \item{Table.cycle}{data.frame that presents the details of the
+#' simple cycles in the network. It contains "CYCLE" the cycle number, "NEXUS"
+#' the nexus number corresponding to the cycle, "NODES" the nodes constituting
+#' the cycle} \item{Table.nexus}{data.frame that presents the different nexuses
+#' characterized by their corresponding weak arcs. It contains "NEXUS" the
+#' nexus number, "CYCLES" the number of simple cycles present in that Nexus,
+#' "W.arc.From" the starting node of the corresponding weak arc, "W.arc.To" the
+#' ending node of the corresponding weak arc and "W.arc.Flow" the flow through
+#' that weak arc} \item{CycleDist}{vector of the Cycle Distribution that gives
+#' the flow cycling in loops of different sizes} \item{NormDist}{vector of the
+#' Normalized Distribution i.e. the Cycle Distribution normalized by the Total
+#' System Throughput of the system} \item{ResidualFlows}{matrix of the
+#' straight-through (acyclic) flows in the network}
+#' \item{AggregatedCycles}{matrix of the Aggregated Biogeochemical Cycles in
+#' the network} \item{ns}{vector of the full cycle analysis based network
+#' statistics. These include "NCYCS" the number of simple cycles identified in
+#' the network, "NNEX" the number of the disjoint cycles or number of Nexuses
+#' detected in the network and "CI" the cycling index of the network.}
+#' @note The "NODES" in "Table.cycle" are arranged such that the weak arc for
+#' the nexus is the arc between the first two nodes of the cycle.
+#' 
+#' This function uses the backtracking procedure for the identification of
+#' simple cycles, which are cycles that cross a node only once except the
+#' starting node. The backtracking process is a depth-first search algorithm.
+#' 
+#' In the data.frame "Table.cycle", if the number of cycles in a nexus is more
+#' than 50, then a blank line is displayed after 50 cycles of the nexus,
+#' followed by the cycles of the next nexus.
+#' 
+#' The results of the analysis of Feeding Cycles can be obtained as a byproduct
+#' of the enaTroAgg function that analyzes the trophic dynamics of a network.
+#' 
+#' At every multiple of 5000 cycles in a nexus, the program prints an
+#' indication for the user to know that it is still running.
+#' @author Pawandeep Singh
+#' @seealso \code{\link{enaTroAgg}}
+#' @references %% ~put references to the literature/web site here ~ Johnson,
+#' D.B. 1975. Finding all the elementary circuits of a directed graph. SIAM J.
+#' Comput. 4:77--84
+#' 
+#' Ulanowicz, R.E. 1983. Identifying the structure of cycling in ecosystems.
+#' Methematical Biosciences 65:219--237
+#' 
+#' Ulanowicz, R.E. and Kay, J.J. 1991. A package for the analysis of ecosystem
+#' flow networks. Environmental Software 6:131 -- 142.
+#' @export enaCycle
+#' @examples
+#' 
+#' 
+#' 
+#' data(troModels)
+#' cyc6 <- enaCycle(troModels[[6]])
+#' attributes(cyc6)
+#' ##-----------------------------------------------------------------
+#' ##-----------------------------------------------------------------
+#' ## 2 Repeats start. rep3,4
+#' ## Backtrack to prev. level
+#' 
 enaCycle <- function (x) {
 
                                         #Initials
diff --git a/R/enaEnviron.R b/R/enaEnviron.R
index 477945a..8906474 100644
--- a/R/enaEnviron.R
+++ b/R/enaEnviron.R
@@ -5,6 +5,51 @@
 #' M. Lau July 2011 | DEH edited Feb 2013
 #' ---------------------------------------------------
 
+
+
+
+
+
+
+#' environ --- conducts environ analysis INPUT = network object OUTPUT = input
+#' and/or output environs
+#' 
+#' M. Lau July 2011 | DEH edited Feb 2013
+#' --------------------------------------------------- environ --- conducts
+#' environ analysis INPUT = network object OUTPUT = input and/or output
+#' environs
+#' 
+#' M. Lau July 2011 | DEH edited Feb 2013
+#' --------------------------------------------------- Ecological Network
+#' Environs
+#' 
+#' Calculates the environs for an ecological network.
+#' 
+#' @param x A network object.
+#' @param input Should the input environ be calculated?
+#' @param output Should the output environ be calculated?
+#' @param type Specifies the type of environs ("unit" or "realized") to be
+#' calculated.
+#' @param err.tol Error threshold for numerical error fluctuations in flows.
+#' Values below err.tol will be set to zero.
+#' @param balance.override Logical specifying whether (TRUE) or not (FALSE) the
+#' model needs to be balanced prior to calculations. If TRUE and the model is
+#' not balanced, environs will not be calculated.
+#' @return The function returns the input, output or both environs depending
+#' upon which were requested.
+#' @author Stuart R. Borrett Matthew K. Lau
+#' @references Fath, B.D. and S.R. Borrett. 2006. A MATLAB function for network
+#' environ analysis. Environmental Modelling & Software 21:375-405.
+#' @examples
+#' 
+#' 
+#' 
+#' data(troModels)
+#' enaEnviron(troModels[[6]])
+#' 
+#' 
+#' 
+#' @export enaEnviron
 enaEnviron <- function(x,input=TRUE,output=TRUE,type='unit',err.tol=1e-10,balance.override=FALSE){
                                         #check for network class
   if (class(x) != 'network'){warning('x is not a network class object')}
diff --git a/R/enaFlow.R b/R/enaFlow.R
index 3a3ccf7..349aace 100644
--- a/R/enaFlow.R
+++ b/R/enaFlow.R
@@ -5,6 +5,116 @@
 #' M. Lau | July 2011
 #' ---------------------------------------------------
 
+
+
+
+
+
+
+#' enaFlow --- flow analysis INPUT = network object OUTPUT = list of flow
+#' statistics
+#' 
+#' M. Lau | July 2011 ---------------------------------------------------
+#' enaFlow --- flow analysis INPUT = network object OUTPUT = list of flow
+#' statistics
+#' 
+#' M. Lau | July 2011 --------------------------------------------------- Flow
+#' Analyses of Ecological Networks
+#' 
+#' Performs the primary throughflow analysis developed for input-output
+#' systems.  It returns a vector of throughflows, the input and output oriented
+#' matrices for "direct flow intensities" and "integral flow intensities", and
+#' a set of flow based network statistics.  Included in the network statistics
+#' are a set of measures that describe the diversity of flows in the ecosystem
+#' (Ulanowicz's Ascendendy measures).
+#' 
+#' @param x a network object.  This includes all weighted flows into and out of
+#' each node.
+#' @param zero.na LOGICAL: should NA values be converted to zeros.
+#' @param balance.override Flow analysis assumes the network model is at
+#' steady-state (inputs = outputs).  Setting balance.override = TRUE allows the
+#' function to be run on unbalanced models.
+#' @return \item{T}{vector of node throughflows - total amount of energy-matter
+#' flowing into or out of each node} \item{G}{matrix of the output oriented
+#' direct flow intensities} \item{GP}{matrix of the input oriented direct flow
+#' intensities} \item{N}{matrix of the ouput oriented integral
+#' (boundary+direct+indirect) flow intensities} \item{NP}{matrix of the input
+#' oriented integral flow intensities} \item{ns}{vector of flow based network
+#' statistics.  These include "Boundary" the total input into or output from
+#' the system, "TST" the total system throughflow, "TSTp" total system
+#' throughPUT,"APL" is the network aggradation TST/Boundary which is also
+#' called average path length, "FCI" (Finn Cycling Index) is a metric of the
+#' amount of cycling in a system, "BFI" is the boundary flow intensity
+#' Boundary/TST, "DFI" is the direct flow intensity Direct/TST, "IFI" is the
+#' indirect flow intensity Indirect/TST, "ID.F" is the realized indirect to
+#' direct flow intensity, "ID.F.I" is the input idealized indirect flow
+#' intensity, "id.F.O"is the output idealized indirect flow intensity, "HMG.I"
+#' is the input network homogenization, "HMG.O" is the output network
+#' homogenization, "AMP.I" is the strong measure of input network amplifiation,
+#' "AMP.O" is the strong measure of output network amplification, "mode0.F" is
+#' the boundary flow - flow that reaches a compartment from across the system
+#' boundary, "mode1.F" is internal first passage flow, "mode2.F" is cycled
+#' flow, "mode3.F" is the dissipative eqivalent to mode2, and "mode4.F" is the
+#' dissipative equivalent ot mode0. "H" is the total flow diversity (MacArthur
+#' 1955).  Uses the Shannon Information measure (aka Boltzmann entropy) applied
+#' to the individual flows, "AMI", is the Average Mutual Information (AMI) in a
+#' network. "Hr", is the residual uncertainty that remains about the flow
+#' distribution once the ecosystem structure is specified (Hr = H - AMI),
+#' "ASC", Returns the ascendnecy of a network, "OH", is the overhead of a
+#' network (Ulanowicz 2004), "CAP", is the capacity of a network, "ACS.CAP", is
+#' the proportion of capacity used by ascendency, "OH.CAP", Returns the
+#' proportion of capacity used by overhead, "robustness", is the robustness of
+#' the network, "ELD" Returns the Effective Link Density of the network(c)
+#' (Ulanowicz et al. 2014), "TD", Returns the Trophic Depth of the network(r)
+#' (Ulanowicz et al. 2014), "A.input", Returns the input ascendnecy of a
+#' network, "A.internal", Returns the internal ascendnecy of a network,
+#' "A.export", Returns the export ascendnecy of a network, "A.respiration",
+#' Returns the respiration ascendnecy of a network, "OH.input", Returns the
+#' input overhead of a network, "OH.internal", Returns the internal overhead of
+#' a network, "OH.export", Returns the export overhead of a network,
+#' "OH.respiration", Returns the respiration overhead of a network,
+#' "CAP.input", Returns the input capacity of a network, "CAP.internal",
+#' Returns the internal capacity of a network, "CAP.export", Returns the export
+#' capacity of a network, "CAP.respiration", Returns the respiration capacity
+#' of a network}
+#' @author Matthew K. Lau Stuart R. Borrett
+#' @seealso
+#' \code{\link{read.scor},\link{read.wand},\link{enaStorage},\link{enaUtility}}
+#' @references Borrett, S. R., Freeze, M. A., 2011. Reconnecting environs to
+#' their environment. Ecol. Model. 222, 2393-2403.
+#' 
+#' Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network Environ
+#' Analysis.  Environ. Model. Softw. 21, 375-405.
+#' 
+#' Fath, B. D., Patten, B. C., 1999. Review of the foundations of network
+#' environ analysis. Ecosystems 2, 167-179.
+#' 
+#' Finn, J. T., 1976. Measures of ecosystem structure and function derived from
+#' analysis of flows. J. Theor. Biol. 56, 363-380.
+#' 
+#' Patten, B.C. Higashi, M., Burns, T. P. 1990. Trophic dynamics in ecosystem
+#' networks: significance of cycles and storage.  Ecol. Model. 51, 1-28.
+#' 
+#' Schramski, J. R., Kazanci, C., Tollner, E. W., 2011. Network environ theory,
+#' simulation and EcoNet 2.0. Environ. Model. Softw. 26, 419-428.
+#' 
+#' Ulanowicz, R.E., 2004. Quantitative methods for ecological network analysis.
+#' Comput. Biol. Chem. 28, 321-33
+#' 
+#' Ulanowicz, R.E., Holt, R.D., Barfield, M., 2014. Limits on ecosystem trophic
+#' complexity: insights from ecological network analysis.  Ecology Letters
+#' 17:127-136.
+#' @examples
+#' 
+#' 
+#' 
+#' data(troModels)
+#' F = enaFlow(troModels[[6]])  # completes the full analysis
+#' F$ns  # returns just the network statisics
+#' 
+#' 
+#' 
+#' @export enaFlow
 enaFlow <- function(x,zero.na=TRUE,balance.override=FALSE){
                                         #Check for network class
   if (class(x) != 'network'){warning('x is not a network class object')}
@@ -88,20 +198,24 @@ enaFlow <- function(x,zero.na=TRUE,balance.override=FALSE){
                                         #re-orientation
   orient <- get.orient()
   if (orient == 'rc'){
-    G <- t(G)
-    GP <- t(GP)
-    N <- t(N)
-    NP <- t(NP)
-  }else{}
+      G <- t(G)
+      GP <- t(GP)
+      N <- t(N)
+      NP <- t(NP)
+  }
+
+
+  asc <- enaAscendency(x)
                                         #network statistics
   ns <- cbind(Boundary,TST,TSTp,APL,FCI,
               BFI,DFI,IFI,
               ID.F,ID.F.I,ID.F.O,
               HMG.I,HMG.O,
               AMP.I,AMP.O,
-              mode0.F,mode1.F,mode2.F,mode3.F,mode4.F)
+              mode0.F,mode1.F,mode2.F,mode3.F,mode4.F, asc)
 
                                         #output
   return(list('T'=T.,'G'=G,'GP'=GP,'N'=N,'NP'=NP,'ns'=ns))
 }
 
+
diff --git a/R/enaMTI.R b/R/enaMTI.R
index 76ec755..14fb358 100644
--- a/R/enaMTI.R
+++ b/R/enaMTI.R
@@ -5,6 +5,74 @@
 #' Borrett | June 2012, MKL | July 2013
 #' ------------------------------------
 
+
+
+
+
+
+
+#' enaMTI --- Mixed Trophic Impacts Analysis follows Ulanowicz and Puccia,
+#' 1990. INPUT = network object OUTPUT = list of trophic impact statistics
+#' Borrett | June 2012, MKL | July 2013 ------------------------------------
+#' enaMTI --- Mixed Trophic Impacts Analysis follows Ulanowicz and Puccia,
+#' 1990. INPUT = network object OUTPUT = list of trophic impact statistics
+#' Borrett | June 2012, MKL | July 2013 ------------------------------------
+#' Mixed Trophic Impacts (MTI) Analysis
+#' 
+#' Calculates the Mixed Trophic Impacts of one species on another in the given
+#' ecosystem model following the algorithm of Ulanowicz and Puccia (1990). This
+#' considers both the direct and indirect trophic impacts.
+#' 
+#' 
+#' @param x a network object.  This includes all weighte dflows into and out of
+#' each node.  It must also include the "Living" vector that identifies the
+#' living (TRUE/FALSE) status of each node.
+#' @param eigen.check LOGICAL: should the dominant eigen value be checked?  By
+#' default, the function will not return utility values if the eigenvalue is
+#' larger than one; however, if eigen.check is set to FALSE, then the function
+#' will be applied regardless of the mathematic concern.
+#' @param zero.na A logical parameter that specifies if NAs generated in the
+#' analysis should be reset to zero.  The default is TRUE.
+#' @param balance.override Mixed Trophic Impacts analysis builds on flow
+#' analysis and thus assumes the network model is at steady-state (inputs =
+#' outputs).  Setting balance.override = TRUE allows the function to be run on
+#' unbalanced models, though this is unadvised.
+#' @return \item{G}{output-oriented direct flow intensity matrix as in enaFlow,
+#' except oriented from row to column.} \item{FP}{input-oriented direct flow
+#' intensity matrix similar to enaFlow; however, the calculation exclude
+#' respiration losses from the throughflow in the denominator to focus on NET
+#' production.  Also, if the receiver compartment is not living, the flux
+#' intensity is set to zero.} \item{Q}{direct net trophic impacts (G-t(FP)).}
+#' \item{M}{Total (direct and indirect) tropic impacts of compartment i on j.}
+#' @note This and other Ulanowicz school functions require that export and
+#' respiration components of output be separately quantified.
+#' 
+#' This analysis is similar in concept to the ENA Utility analysis.
+#' 
+#' With regard to the eigen.check argument, like enaFlow, enaStorage and
+#' enaUtility, this analysis considers the trophic impact propigated over path
+#' lengths ranging for zero to infinity.  For the analysis to work properly,
+#' the path sequence must converge.  This function checks to see if the path
+#' sequence is convergent by finding the dominant eigenvalue of the direct
+#' matrix.  If this eigenvalue is less than 1, the sequence is convergent and
+#' the analysis can be applied; if the dominant eigenvalue is greater than one,
+#' then the anlysis cannot be applied.
+#' @author Stuart R. Borrett Matthew K. Lau
+#' @seealso \code{\link{enaFlow},\link{enaUtility}}
+#' @references %% ~put references to the literature/web site here ~ Ulanowicz,
+#' R.E. and C.J. Puccia.  1990. Mixed trophic impacts in ecosystems.  Coenoses
+#' 5, 7--16.
+#' @examples
+#' 
+#' 
+#' 
+#' data(troModels)
+#' mti <- enaMTI(troModels[[6]])
+#' attributes(mti)
+#' 
+#' 
+#' 
+#' @export enaMTI
 enaMTI <- function(x,eigen.check=TRUE,zero.na=TRUE, balance.override=FALSE){
                                         #Check for network class
   if (class(x) != 'network'){warning('x is not a network class object')}
@@ -30,20 +98,22 @@ enaMTI <- function(x,eigen.check=TRUE,zero.na=TRUE, balance.override=FALSE){
     diag(I) <- 1 #create the identity matrix
     T. <- input + apply(Flow,2,sum)
                                         #
-    G <- t(t(Flow)/T.)        # this is now oriented as in ulanowicz and puccia row to column
-    FP <- Flow / (T.-resp)    # Authors exclude respiration to divide only by the NET production of the compartment.
+    G <- t(t(Flow)/T.)        # input oriented direct flow intensity matrix
+    FP <- Flow / (T.-resp)    # modified output oriented direct flow intensity matrix.  Authors exclude respiration to divide only by the NET production of the compartment.
 
                                         # check and replace NA values with 0 if zero.na
     if (zero.na){
       G[is.na(G)] <- 0
       FP[is.na(FP)] <- 0
     }
-                                        #Make infinity values equal to zero
-  G[is.infinite(G)] <- 0
-  FP[is.infinite(FP)] <- 0
-                                        # Set FP to zero when receiver compartment (j) is non-living
+
+    # Make infinity values equal to zero
+    G[is.infinite(G)] <- 0
+    FP[is.infinite(FP)] <- 0
+
+    # Set FP to zero when receiver compartment (j) is non-living
     FP[,which(x%v%'living'==FALSE)] <- 0
-    Q <- G- t(FP)
+    Q <- G - t(FP)
     dom1Q <- abs(eigen(Q)$values[1])
     if(dom1Q <= 1 ){
       M <- ginv(I-Q)-I              # Total Impacts of i on j.
@@ -51,8 +121,22 @@ enaMTI <- function(x,eigen.check=TRUE,zero.na=TRUE, balance.override=FALSE){
       if(eigen.check==FALSE){
         M <- ginv(I-Q)-I              # Total Impacts of i on j.
       } else { M <- NA}
+  }
+
+    if(!any(is.na(M))){
+        r <- relationalChange(Q,M)
+        IR <- r$Integral.Relations
+        r.table <- r$Relations.Table
+        names(r.table) <- c("From","To","Net (direct)","Mixed (integral)","changed")
+        rownames(r.table) <- c(1:dim(r.table)[1])
+    } else {
+        IR <- NA
+        r.table <- NA
     }
-    out <- list('G'=G,'FP'=FP,'Q'=Q,'M'=M)
+
+    out <- list('G'=G,'FP'=FP,'Q'=Q,'M'=M,
+                "Integral.Relations" = IR,
+                "Relational.Table"=r.table)
   }
     return(out)
 }
diff --git a/R/enaR-package.R b/R/enaR-package.R
new file mode 100644
index 0000000..b6af3c8
--- /dev/null
+++ b/R/enaR-package.R
@@ -0,0 +1,130 @@
+
+
+#' Bigeochemical Cycling Models
+#' 
+#' A set of 43 biogeochemical cycling models compiled by the SEE Lab at UNCW.
+#' 
+#' 
+#' @name bgcModels
+#' @docType data
+#' @references Borrett, S. R., and M. K. Lau. In Prep. enaR: An R package for
+#' Ecological Network Analysis. Ecological Modeling and Software.
+#' @keywords datasets
+NULL
+
+
+
+
+
+#' Ecosystem Model Information
+#' 
+#' Model information for the set of ecosystem models compiled by the SEE Lab at
+#' UNCW.
+#' 
+#' 
+#' @name enaModelInfo
+#' @docType data
+#' @references Borrett, S. R., and M. K. Lau. In Prep. enaR: An R package for
+#' Ecological Network Analysis. Ecological Modeling and Software.
+#' @keywords datasets
+NULL
+
+
+
+
+
+#' Ecosystem Models
+#' 
+#' A set of ecosystem models compiled by the SEE Lab at UNCW.
+#' 
+#' 
+#' @name enaModels
+#' @docType data
+#' @references Borrett, S. R., and M. K. Lau. In Prep. enaR: An R package for
+#' Ecological Network Analysis. Ecological Modeling and Software.
+#' @keywords datasets
+NULL
+
+
+
+
+
+#' Tools for Ecological Network Analysis (ena)
+#' 
+#' This package compiles functions for the analysis of ecological networks,
+#' building on tools previously developed in the MatLab language Borrett 2006)
+#' with multiple additions of functionality.
+#' 
+#' \tabular{ll}{ Package: \tab enaR \cr Type: \tab Package\cr Version: \tab
+#' 2.9.3\cr Date: \tab 2015-12-09\cr License: \tab GPL-3\cr }
+#' 
+#' @name enaR-package
+#' @aliases enaR enaR-package
+#' @docType package
+#' @author Authors: Stuart R. Borrett, Matthew K. Lau, Pawandeep Singh, David
+#' E. Hines Maintainer: Matthew K. Lau <enaR.maintainer@@gmail.com>
+#' @seealso % ~~ Optional links to other man pages, e.g. ~~ % ~~
+#' \code{\link[<pkg>:<pkg>-package]{<pkg>}} ~~ %
+#' \code{\link[network:statnet-package]{statnet}}
+#' %\code{\link[igraph:igraph-package]{igraph}}
+#' \code{\link[network:network-package]{network}}
+#' @references Borrett SR and Lau MK 2014. enaR: An r package for Ecosystem
+#' Network Analysis. Methods in Ecology and Evolution 5:1206-1213.
+#' @keywords package
+NULL
+
+
+
+
+
+#' Sub-set of the Larger Ecosystem Models
+#' 
+#' A set of ecosystem models compiled by the SEE Lab at UNCW.
+#' 
+#' 
+#' @name m.list
+#' @docType data
+#' @references Borrett, S. R., and M. K. Lau. In Prep. enaR: An R package for
+#' Ecological Network Analysis. Ecological Modeling and Software.
+#' @keywords datasets
+NULL
+
+
+
+
+
+#' Intertidal Oyster Reef Ecosystem Model
+#' 
+#' Intertidal oyster reef ecosystem model created by Dame and Patten (1981).
+#' Data were taken from Patten (1985).  Model flows are in kcal m^-2 day^-1;
+#' storage data is kcal m^-2.
+#' 
+#' 
+#' @name oyster
+#' @docType data
+#' @references Dame, R. F., and B. C. Patten. 1981. Analysis of energy flows in
+#' an intertidal oyster reef. Marine Ecology Progress Series 5:115-124.
+#' 
+#' Patten, B. C. 1985. Energy cycling, length of food chains, and direct versus
+#' indirect effects in ecosystems. Can. Bull. Fish. Aqu. Sci. 213:119-138.
+#' @keywords datasets
+NULL
+
+
+
+
+
+#' Trophic Models
+#' 
+#' A set of 58 trophic models compiled by the SEE Lab at UNCW.
+#' 
+#' 
+#' @name troModels
+#' @docType data
+#' @references Borrett, S. R., and M. K. Lau. In Prep. enaR: An R package for
+#' Ecological Network Analysis. Ecological Modeling and Software.
+#' @keywords datasets
+NULL
+
+
+
diff --git a/R/enaStorage.R b/R/enaStorage.R
index fe72b4f..a7da5f4 100644
--- a/R/enaStorage.R
+++ b/R/enaStorage.R
@@ -5,6 +5,74 @@
 #' M. Lau | July 2011
 #' ---------------------------------------------------
 
+
+
+
+
+
+
+#' enaStorage --- storage analysis INPUT = network object OUTPUT = list of
+#' storage statistics
+#' 
+#' M. Lau | July 2011 ---------------------------------------------------
+#' enaStorage --- storage analysis INPUT = network object OUTPUT = list of
+#' storage statistics
+#' 
+#' M. Lau | July 2011 ---------------------------------------------------
+#' Storage Analyses of Ecological Networks
+#' 
+#' Calculates storage-based Ecological Network Analyses.
+#' 
+#' @param x A network object.  This This includes all weighted flows into and
+#' out of each vertex as well as the amount of energy--matter stored at each
+#' vertex.
+#' @param balance.override LOGICAL: should an imbalanced model be analyzed?  If
+#' FALSE, the functions checks to make sure the network model provided is at
+#' steady-state.  If TRUE, then the function will run without ensuring that the
+#' model meets the steady-state assumption.
+#' @return \item{X}{The storage values themselves.} \item{C}{output or
+#' donor-storage normalized output-oriented direct flow intensity matrix
+#' (Jacobian community matrix)} \item{S}{dimensionalized integral output
+#' community matrix} \item{Q}{integral output storage matrix - non-dimensional}
+#' \item{CP}{input or recipient-storage normalized oriented flow intensity
+#' matrix (Jacobian community matrix)} \item{SP}{dimensionalized integral input
+#' community matrix} \item{QP}{integral input storage matrix - non-dimensional}
+#' \item{dt}{selected time step to create P, PP, Q and QP - smallest whole
+#' number to make diag(C) nonnegative} \item{ns}{vector of the storage based
+#' whole system network statistics.  These statistics include total system
+#' storage (TSS), storage cycling index (CIS), Boundary storage intensity
+#' (BSI), Direct storage intensity (DSI), Indirect storage intensity (ISI),
+#' realized ratio of indirect-to-direct storage (ID.S), unit input-oriented
+#' ratio of indirect-to-direct storage intensities (IDS.I), unit output ratio
+#' of indirect-to-direct storage intensities (IDS.O), input-oriented
+#' storage-based network homogenization (HMG.S.I), output-oriented
+#' storage-based network homogenization (HMG.S.O), input-oriented storage-based
+#' network amplification (AMP.S.I), output-oriented storage-based network
+#' amplification (AMP.S.O), Storage from Boundary flow (mode0.S), storage from
+#' internal first passage flow (mode1.S), storage from cycled flow (mode2.S),
+#' dissipative equivalent to mode1.S (mode3.S), dissipative equivalent to
+#' mode0.S (mode4.S).}
+#' @author Matthew K. Lau Stuart R. Borrett
+#' @seealso
+#' \code{\link{read.scor},\link{read.wand},\link{enaFlow},\link{enaUtility}}
+#' @references Matis, J. H., Patten, B. C. 1981. Environ analysis of linear
+#' compartmental systems: the static, time invariant case.  Bulletin of the
+#' International Statistical Institute, 48: 527-565.
+#' 
+#' Fath, B. D., Patten, B. C. 1999.  Review of the foundations of network
+#' enviorn analysis.  Ecosystems 2:167-179.
+#' 
+#' Fath, B. D. Patten, B. C., Choi, J. 2001.  Compementarity of ecological goal
+#' functions.  Journal of Theoretical Biology 208: 493-506.
+#' 
+#' Fath, B. D., Borrett, S. R. 2006. A MATLAB function for Network Environ
+#' Analysis.  Environmental Modelling & Software 21:375-405
+#' @keywords enaFlow read.scor
+#' @export enaStorage
+#' @examples
+#' data(oyster)
+#' S <- enaStorage(oyster)
+#' attributes(S)
 enaStorage <- function(x,balance.override=FALSE){
                                         #Missing Data Check
   if (any(is.na(x%v%'storage'))){
@@ -37,13 +105,29 @@ enaStorage <- function(x,balance.override=FALSE){
                                         #calculating the storage-specific, output-oriented, intercompartmental flows (P)
     P <- I + C*dt
     PP <- I + CP*dt
-                                        #calculating the dimensionalized integral output and input matrices
+                                        #calculating the dimensionalized integral output and input matrices -- expected residence times (Barber 1979)
     S <- -ginv(C) #output
     SP <- -ginv(CP) #input
 
+    tol <- 10
+    S <- round(S,10)
+    SP <- round(SP,10)
+
+    #' calculate variance of expected residence times (Barber 1979)
+    VS <- 2 * ( t(S) %*% diag(diag(S))) - t(S)^2
+    VSP <- 2 * (t(SP) %*% diag(diag(SP))) - t(SP)^2
+
+
                                         #calculating the integral storage intensity matrix (Q)
     Q <- ginv(I - P) #output
     QP <- ginv(I - PP) #input
+
+  ## the ginv function creates noticible numeric error.  I am removing some of it here by rounding
+    tol <- 10
+    Q <- round(Q,tol)
+    QP <- round(QP,tol)
+
+
     dQ <- diag(Q) #diagonal of integral output storage matrix which is the same for input (i.e. diag(QP))
 
                                         #naming row and columns
@@ -51,10 +135,12 @@ enaStorage <- function(x,balance.override=FALSE){
     rownames(CP) <- colnames(CP) <- rownames(Flow)
     rownames(P) <- colnames(P) <- rownames(Flow)
     rownames(S) <- colnames(S) <- rownames(Flow)
+    rownames(VS) <- colnames(VS) <- rownames(Flow)
     rownames(Q) <- colnames(Q) <- rownames(Flow)
     rownames(CP) <- colnames(CP) <- rownames(Flow)
     rownames(PP) <- colnames(PP) <- rownames(Flow)
     rownames(SP) <- colnames(SP) <- rownames(Flow)
+    rownames(VSP) <- colnames(VSP) <- rownames(Flow)
     rownames(QP) <- colnames(QP) <- rownames(Flow)
 
     ##Storage Environ Properties
@@ -71,22 +157,23 @@ enaStorage <- function(x,balance.override=FALSE){
     TSScs <- sum(((dQ-1)/dQ)%*%stor) #cycled (mode 2) storage
     CIS <- TSScs / TSS #cucling index (storage)
 
-                                        #Amplification parameter
+    #' Amplification parameter
     NAS <- length((Q-diag(diag(Q)))[(Q-diag(diag(Q))) > 1])
     NASP <- length((QP-diag(diag(QP)))[(QP-diag(diag(QP))) > 1])
 
-                                        #Indirect effects parameter (srb fix 8.3.2011)
+    #' Indirect effects parameter (srb fix 8.3.2011)
     ID.S.O <- sum(Q-I-P) /sum(P)
     ID.S.I <- sum(QP-I-PP) / sum(PP) #indirect to direct ratio (input matrix)
 
-                                        #Indirect effects parameter (realized)  (srb fix 8.3.2011)
+    #' Indirect effects parameter (realized)  (srb fix 8.3.2011)
     ID.S <- sum(dt*(as.matrix((Q-I-P)) %*% input)) / sum(dt*as.matrix(P)%*% input ) #indirect to direct ratio (output matrix)
 
+    #' Tripartite walk-length division of storage
     BSI = sum( I %*% input *dt) / TSS
     DSI = sum( P %*% input *dt) / TSS
     ISI = sum( (Q-I-P) %*% input *dt) / TSS
 
-                                        #Homogenization parameter
+    #' Homogenization parameter
     CVP <- sd(as.numeric(P)) / mean(P) #Coefficient of variation for G
     CVQ <- sd(as.numeric(Q)) / mean(Q)  #Coefficient of variation for N
     HMG.S.O <- CVP / CVQ #homogenization parameter (output storage)
@@ -95,10 +182,10 @@ enaStorage <- function(x,balance.override=FALSE){
     CVQP <- sd(as.numeric(QP)) / mean(QP) #Coefficient of variation for NP
     HMG.S.I <- CVPP / CVQP #homogenization paraemeter (input storage)
 
-                                        # Network Aggradation
+    #' Network Aggradation
     AGG.S <- TSS / sum(input) #network aggradation -- average amount of storage per system input
 
-                                        # MODE Partition (Fath et al. 2001)
+    #' MODE Partition (Fath et al. 2001)
     z <- unpack(x)$z
     mode0.S = sum(z*dt)  # storage from boundary input flow
     mode1.S = sum( (ginv(diag(diag(Q))) %*% Q - I) %*% diag(z) * dt ) # storage from first-passage flow
@@ -106,7 +193,7 @@ enaStorage <- function(x,balance.override=FALSE){
     mode3.S = mode1.S  # storage from first-passage flow (equal to mode 1 at Steady state)
     mode4.S = sum(unpack(x)$y * dt)  # storage from boundary output flow
 
-    ##packing up network statistics for output
+    #' packing up network statistics for output
     ns <- cbind('TSS'=TSS,
                 'CIS'=CIS,
                 'BSI'= BSI,'DSI'= DSI,'ISI'= ISI,
@@ -123,14 +210,18 @@ enaStorage <- function(x,balance.override=FALSE){
       C <- t(C)
       P <- t(P)
       S <- t(S)
+      VS <- t(VS)
       Q <- t(Q)
       CP <- t(CP)
       PP <- t(PP)
       SP <- t(SP)
+      VSP <- t(VSP)
       QP <- t(QP)
     }else{}
 
-    out <- list('X'=stor,'C'=C,'P'=P,'S'=S,'Q'=Q,'CP'=CP,'PP'=PP,'SP'=SP,'QP'=QP,'dt'=dt,'ns'=ns)
+    out <- list('X'=stor,'C'=C,'P'=P,'S'=S, 'VS'=VS,
+                'Q'=Q,'CP'=CP,'PP'=PP,'SP'=SP, 'VSP'=VSP,
+                'QP'=QP,'dt'=dt,'ns'=ns)
 
     return(out)
   }
diff --git a/R/enaStructure.R b/R/enaStructure.R
index 929fb2e..1e79a4a 100644
--- a/R/enaStructure.R
+++ b/R/enaStructure.R
@@ -6,6 +6,52 @@
 #' S. Borrett and M. Lau | March 2011
 #' ---------------------------------------------------
 
+
+
+
+
+
+
+#' enaStructure --- performes strucutral analysis of the network graph (see
+#' Borrett et al. 2007) INPUT = network object OUTPUT = list of structure
+#' statistics
+#' 
+#' S. Borrett and M. Lau | March 2011
+#' --------------------------------------------------- enaStructure ---
+#' performes strucutral analysis of the network graph (see Borrett et al. 2007)
+#' INPUT = network object OUTPUT = list of structure statistics
+#' 
+#' S. Borrett and M. Lau | March 2011
+#' --------------------------------------------------- Structure Analyses of
+#' Ecological Network
+#' 
+#' Analysis of the structure of an ecological flow network.
+#' 
+#' @param x A network object.
+#' @return \item{A}{
+#' 
+#' } \item{ns}{A vector of structure based network statistics. These include n
+#' = number of nodes, L = number of edges, C = connectivity, LD = link density,
+#' ppr = pathway proliferation rate, lam1A = dominant eigenvalue, mlam1A =
+#' multiplicity of dominant eigenvalue, rho = damping ratio, R = distance of
+#' the dominant eigen value from the eigen spectra, d = difference between
+#' dominant eigen value and link density, no.scc = number of strongly connected
+#' components, no.scc.big = number of strongly connected components with more
+#' than one node, pscc = percent of nodes in strongly connected components.  }
+#' @author Matthew K. Lau Stuart R. Borrett
+#' @seealso \code{\link{structure.statistics}}
+#' @references Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network
+#' Environ Analysis.  Environ. Model. Softw. 21, 375-405.
+#' @examples
+#' 
+#' 
+#' 
+#' data(troModels)
+#' enaStructure(troModels[[6]])
+#' 
+#' 
+#' 
+#' @export enaStructure
 enaStructure <- function(x = 'network object'){
                                         #Check for network class
   if (class(x) != 'network'){warning('x is not a network class object')}
diff --git a/R/enaTroAgg.R b/R/enaTroAgg.R
index eedff98..0d02cac 100644
--- a/R/enaTroAgg.R
+++ b/R/enaTroAgg.R
@@ -1,7 +1,78 @@
-#'## Lindeman Trophic Aggregations
-#'## Singh P. July 2014.
-#'## Source Ulanowicz and Kay 1991. Environmental Software 6:131-142.
-#'## ----------------------------------------------------------------------
+#' Trophic Aggregations (TroAgg) Analysis
+#' 
+#' It returns the data quantifying the underlying trophic structure of a given
+#' model based on the interaction of the living and non-living nodes. It is
+#' based on the Trophic Aggregations suggested by Lindeman (1942) and follows
+#' the algorithm by Ulanowicz and Kemp (1979) implemented in NETWRK 4.2b. It
+#' removes the Feeding cycles in the network beforehand to provide accurate
+#' results.
+#' 
+#' 
+#' @param x a network object.  This includes all weighted flows into and out of
+#' each node. It should include separate respiration and export values for the
+#' Canonical Exports and Canonical Respirations results respectively. It must
+#' also include the "Living" vector that identifies the living (TRUE/FALSE)
+#' status of each node. It must contain the non-living nodes at the end of the
+#' node vector, the function \code{\link{netOrder}} can be used for the same.
+#' @return \item{Feeding_Cycles}{List that gives the details of the Feeding
+#' Cycles in the network. The output being according to the enaCycle function
+#' applied to the Living components in the network} \item{A}{matrix that
+#' distributes the species in integer Trophic Levels (Lindeman Transformation
+#' Matrix). The dimension of A is (NL X NL) where NL is the number of Living
+#' nodes.} \item{ETL}{vector of the Effective Trophic Level of each species.}
+#' \item{M.flow}{vector of the Migratory flows, if present, in the network.}
+#' \item{CI}{vector of Canonical Inputs to the integer trophic levels.
+#' Displayed if the Migratory flows are present.} \item{CE}{vector of Canonical
+#' exports or the exports from the integer trophic levels} \item{CR}{vector of
+#' the Canonical Respirations or the respiration values for integer trophic
+#' levels. } \item{GC}{vector of the input flow to a trophic level from the
+#' preceeding trophic level. It represents the Grazing Chain for the network.}
+#' \item{RDP}{vector of the Returns to Detrital Pool from each trophic level. }
+#' \item{LS}{vector of the Lindeman trophic spine. It combines the Detrital
+#' pool with the autotrophs and forms a monotonically decreasing sequence of
+#' flows from one trophic level to the next, starting with the said
+#' combination.} \item{TE}{vector of the trophic efficiencies i.e. the ratio of
+#' input to a trophic level to the amount of flow that is passed on the next
+#' level from it. } \item{ns}{vector of trophic aggregations based network
+#' statistics. These include "Detritivory" the flow from the detrital pool to
+#' the second trophic level, "DetritalInput" the exogenous inputs to the
+#' detrital pool, "DetritalCirc" the circulation within the detrital pool,
+#' "NCYCS" the number of feeding cycles removed, "NNEX" the number of feeding
+#' cycle Nexuses removed and "CI" the Cycling Index for the Feeding Cycles.  }
+#' @note This and other Ulanowicz school functions require that export and
+#' respiration components of output be separately quantified.
+#' 
+#' This analysis involves the ENA Cycle analysis for removal of the Feeding
+#' Cycles in the network. These are cycles amongst only the living nodes and
+#' cause error in the trophic aggregations.
+#' 
+#' The analysis requires all the non-living nodes to be placed at the end in
+#' the network object.
+#' @author Pawandeep Singh
+#' @seealso \code{\link{enaCycle}, \link{netOrder}}
+#' @references %% ~put references to the literature/web site here ~ Lindeman,
+#' R.L. 1942. The trophic-dynamic aspect of ecology. Ecology 23:399--418.
+#' 
+#' Ulanowicz, R.E. and Kemp, W.M.  1979. Towards canonical trophic
+#' aggregations. The American Naturalist. 114:871--883.
+#' 
+#' Ulanowicz, R.E. 1995. Ecosystem trophic foundations: Lindeman exonerata. pp.
+#' 549--560. B.C. Patten and S.E. Jorgensen (eds.) Complex Ecology: The
+#' part-whole relation in ecosystems. Prentice Hall, New Jersey.
+#' 
+#' Ulanowicz, R.E. and Kay, J.J. 1991. A package for the analysis of ecosystem
+#' flow networks. Environmental Software 6:131 -- 142.
+#' @examples
+#' 
+#' 
+#' 
+#' data(troModels)
+#' tro6 <- enaTroAgg(troModels[[6]])
+#' attributes(tro6)
+#' 
+#' 
+#' 
+#' @export enaTroAgg
 enaTroAgg <- function (x){
   if (class(x) != "network") {
     stop("x is not a network class object")
diff --git a/R/enaUtility.R b/R/enaUtility.R
index 9a09bad..77e8b8b 100644
--- a/R/enaUtility.R
+++ b/R/enaUtility.R
@@ -5,98 +5,226 @@
 #' M. Lau | July 2011
 #' ---------------------------------------------------
 
+
+
+
+
+
+
+#' enautility --- utility analysis of a flow network INPUT = network object
+#' OUTPUT = list of utility statistics
+#' 
+#' M. Lau | July 2011 ---------------------------------------------------
+#' enautility --- utility analysis of a flow network INPUT = network object
+#' OUTPUT = list of utility statistics
+#' 
+#' M. Lau | July 2011 ---------------------------------------------------
+#' Utility Analysis of Ecological Networks
+#' 
+#' Performs the flow and storage based utility analysis developed for
+#' input-output network models of ecosystems.  It returns a set of matrices for
+#' the direct and integral utilities as well as a set of utility based network
+#' statistics.
+#' 
+#' @param x a network object.  This includes all weighted flows into and out of
+#' each node.  For the storage utility analysis this must also include the
+#' amount of energy--matter stored at each node (biomass).
+#' @param type Determines whether the flow or storage utility analysis is
+#' returned.
+#' @param eigen.check LOGICAL: should the dominant eigenvalue be checked.  Like
+#' enaFlow and enaStorage analyses, enaUtility analysis considers the utility
+#' propigated over path lengths ranging for zero to infinity.  For utility
+#' analysis to work properly, the path sequence must converge.  enaUtility
+#' checks to see if the utility path sequence is convergent by finding the
+#' dominant eigenvalue of the direct utility matrix.  If this eigenvalue is
+#' less than 1, the sequence is convergent and the analysis can be applied; if
+#' the dominant eigenvalue is greater than one, then the anlysis cannot be
+#' applied.  By default, the function will not return utility values if the
+#' eigenvalue is larger than one; however, if eigen.check is set to FALSE, then
+#' the function will be applied regardless of the mathematic validity.
+#' @param balance.override LOGICAL: should model balancing be ignored.
+#' enaUtility assumes that the network model is at steady-state.  The default
+#' setting will not allow the function to be applied to models not at
+#' steady-state.  However, when balance.override is set to TRUE, then the
+#' function will work regardless.
+#' @param tol The integral utility matrix is rounded to the number of digits
+#' specified in tol.  This approximation eleminates very small numbers
+#' introduced due to numerical error in the ginv function.  It does not
+#' eliminate the small numerical error introduced in larger values, but does
+#' truncate the numbers.
+#' @return \item{D}{Direct flow utility intensity matrix.  (fij-fji)/Ti for
+#' i,j=1:n} \item{U}{Nondimensional integral flow utility} \item{Y}{Dimensional
+#' integral flow utility} \item{ns}{If type is set to 'flow', this is a list of
+#' flow utility network statistics including: the dominant eigenvalue of D
+#' (lambda\_1D), flow based network synergism (synergism.F), and flow based
+#' network mutualism (mutualism.F).} \item{DS}{Direct storage utility intensity
+#' matrix.  (fij-fji)/xi for i,j=1:n} \item{US}{Nondimensional integral storage
+#' utility} \item{YS}{Dimensional integral storage utility} \item{ns}{If type
+#' is set to 'storage', this is a list of storage utility network statistics
+#' including: the dominant eigenvalue of DS (lambda_1DS), storage based network
+#' synergism (synergism.S), and storage based network mutualism (mutualism.S).}
+#' @author Matthew K. Lau Stuart R. Borrett
+#' @seealso \code{\link{enaFlow},\link{enaStorage},\link{enaMTI}}
+#' @references Fath, B.D. and Patten, B.C. 1998. Network synergism: emergence
+#' of positive relations in ecological systems.  Ecol. Model. 107:127--143.
+#' 
+#' Fath, B.D. and Borrett, S.R. 2006. A Matlab function for Network Environ
+#' Analysis. Environ. Model. Soft. 21: 375--405.
+#' 
+#' Patten, B.C. 1991.  Network ecology: Indirect determination of the
+#' life-environment relationship in ecosystems.  In: Higashi, M. and Burns, T.
+#' (eds). Theoretical Studies of Ecosystems: The Network Perspective. Cambridge
+#' University Press.  New York.
+#' @examples
+#' 
+#' 
+#' 
+#' data(troModels)
+#' U <- enaUtility(troModels[[6]], type = "flow", eigen.check = FALSE)
+#' attributes(U)
+#' US <- enaUtility(troModels[[6]], type = "storage", eigen.check = FALSE)
+#' 
+#' 
+#' 
+#' @export enaUtility
 enaUtility <- function(x, type=c('flow','storage'),
-                       eigen.check=TRUE,balance.override=FALSE,tol=10){
+                       eigen.check=TRUE,
+                       balance.override=FALSE,tol=10){
                                         #Missing Data Check
-  if (any(is.na(x%v%'storage'))){
-    warning('This function requires quantified storage values.')
-  }else{
-    orient <- get.orient()
+    if (type == 'storage' && any(is.na(x%v%'storage'))){
+        warning('This function requires quantified storage values.')
+    }else{
+        orient <- get.orient()
                                         #Check for network class
-    if (class(x) != 'network'){warning('x is not a network class object')}
+        if (class(x) != 'network'){warning('x is not a network class object')}
 
                                         #set default for type == 'flow'
-    if (length(type) > 1){type <- 'flow'}
+        if (length(type) > 1){type <- 'flow'}
 
                                         #Check for balancing
-    if (balance.override){}else{
-      if (any(list.network.attributes(x) == 'balanced') == FALSE){x%n%'balanced' <- ssCheck(x)}
-      if (x%n%'balanced' == FALSE){warning('Model is not balanced'); stop}
-    }
+        if (balance.override){}else{
+            if (any(list.network.attributes(x) == 'balanced') == FALSE){x%n%'balanced' <- ssCheck(x)}
+            if (x%n%'balanced' == FALSE){warning('Model is not balanced'); stop}
+        }
                                         #unpack data from x
-    Flow <- t(as.matrix(x, attrname = 'flow')) #flows
-    input <- x%v%'input' #inputs
-    stor <- x%v%'storage' #storage values
-    I <- Flow*0;diag(I) <- 1 #create the identity matrix
-    T. <- input + apply(Flow,1,sum)
-    FD <- Flow;
-    diag(FD) <- -T.
+        Flow <- t(as.matrix(x, attrname = 'flow')) #flows
+        input <- x%v%'input' #inputs
+        stor <- x%v%'storage' #storage values
+        I <- Flow*0; diag(I) <- 1 #create the identity matrix
+        T. <- input + apply(Flow,1,sum)
+        FD <- Flow;
+        diag(FD) <- -T.
                                         #
-    if (type == 'flow'){
+        if (type == 'flow'){
                                         #flow utilities
-      D <- ginv(diag(T.)) %*% (FD - t(FD))
-      rownames(D) <- colnames(D) <- colnames(Flow)
+            D <- ginv(diag(T.)) %*% (FD - t(FD))
+            rownames(D) <- colnames(D) <- colnames(Flow)
 
-      if (eigen.check & abs(eigen(D)$values[1]) > 1){
-        print(paste('Largest eigen value of D > 1:',eigen(D)$values[1]),quote=FALSE)
-        out <- NA
-      }else{
-        U <- ginv(I-D) #non-dimensional integral flow utility
-        U <- round(U,tol)
-        Y <- diag(T.) %*% U #dimensional integral flow utility
-                                        #indices
-        synergism.F <- bcratio(Y) #flow benefit cost ratio (calls other function) (Synergism)
-        mutualism.F <- bcratio(sign(Y)) # flow ratio of positive to negative signs )
+            if (eigen.check & abs(eigen(D)$values[1]) > 1){
+                print(paste('Largest eigen value of D > 1:',eigen(D)$values[1]),quote=FALSE)
+                out <- NA
+            }else{
+                U <- ginv(I-D) #non-dimensional integral flow utility
+                U <- round(U,tol)
+                Y <- diag(T.) %*% U #dimensional integral flow utility
+                rownames(U) <- colnames(U) <- colnames(Flow)
+                rownames(Y) <- colnames(Y) <- colnames(Flow)
 
+                                        #indices
+                synergism.F <- bcratio(Y) #flow benefit cost ratio (calls other function) (Synergism)
+                mutualism.F <- bcratio(sign(Y)) # flow ratio of positive to negative signs )
 
-        ns <- cbind('lam1D'=abs(eigen(D)$values[1]),'synergism.F' = synergism.F,'mutualism.F'=mutualism.F)
+                # get relational data
+                R <- relationalChange(D,Y)
+                SD <- R$Direct.Signs
+                SY <- R$Integral.Signs
+                R.table <- R$Relations.Table
+                names(R.table) <- c("From","To","Direct","Integral","changed")
+                rownames(R.table) <- c(1:dim(R.table)[1])
                                         #re-orient
-        if (orient == 'rc'){
-          D <- t(D)
-          U <- t(U)
-          Y <- t(Y)
-        }else{}
-        out <- list('D'=D,'U'=U,'Y'=Y,'ns'=ns) #pack output
+                if (orient == 'rc'){
+                    D <- t(D)
+                    U <- t(U)
+                    Y <- t(Y)
+                    SD <- t(SD)
+                    SY <- t(SY)
+                }else{}
 
-      }
+                ns <- cbind('lam1D' = abs(eigen(D)$values[1]),
+                            'relation.change.F' = R$ns[1],
+                            'synergism.F' = synergism.F,
+                            'mutualism.F' = mutualism.F)
 
-    }else if (type == 'storage'){
+                out <- list('D'=D, 'SD' = SD,
+                            'U'=U,
+                            'Y'=Y, 'SY' = SY,
+                            'Relations.Table' = R.table,
+                            'ns'=ns) #pack output
+
+            }
+
+            # ------------------------------------------------------------------------
+        }else if (type == 'storage'){
                                         #storage utilities
-      x <- stor
-      DS <- ginv(diag(x)) %*% (FD - t(FD))
-      rownames(DS) <- colnames(DS) <- colnames(Flow)
+            x <- stor
+            DS <- ginv(diag(x)) %*% (FD - t(FD))
+            rownames(DS) <- colnames(DS) <- colnames(Flow)
 
-      if (eigen.check & abs(eigen(DS)$values[1]) > 1){
-        print(paste('Largest eigen value of DS > 1:',eigen(DS)$values[1]),quote=FALSE)
-        out <- NA
+            if (eigen.check & abs(eigen(DS)$values[1]) > 1){
+                print(paste('Largest eigen value of DS > 1:',eigen(DS)$values[1]),quote=FALSE)
+                out <- NA
       }else{
 
-        US <- ginv(I - DS)
-        US <- round(US,tol)
-        YS <- diag(T.) %*% US
+          US <- ginv(I - DS)
+          US <- round(US,tol)
+          YS <- diag(T.) %*% US
+          rownames(US) <- colnames(US) <- colnames(Flow)
+          rownames(YS) <- colnames(YS) <- colnames(Flow)
+
+
                                         #indices
-        synergism.S <- bcratio(YS) #storage benefit cost ratio (calls other function) (Synergism)
-        mutualism.S <- bcratio(sign(YS)) #storage ratio of positive to negative signs (Y/abs(Y) == sign of Y)
+          synergism.S <- bcratio(YS) #storage benefit cost ratio (calls other function) (Synergism)
+          mutualism.S <- bcratio(sign(YS)) #storage ratio of positive to negative signs (Y/abs(Y) == sign of Y)
+
+                          # get relational data
+          R <- relationalChange(DS,YS)
+          SD <- R$Direct.Signs
+          SY <- R$Integral.Signs
+          R.table <- R$Relations.Table
+          names(R.table) <- c("From","To","Direct","Integral","changed")
+          rownames(R.table) <- c(1:dim(R.table)[1])
 
-        ns <- cbind('lam1DS'=abs(eigen(DS)$values[1]),'synergism.S' = synergism.S,'mutualism.S'=mutualism.S)
                                         #re-orient
-        if (orient == 'rc'){
-          DS <- t(DS)
-          US <- t(US)
-          YS <- t(YS)
-        }else{}
-        out <- list('DS'=DS,'US'=US,'YS'=YS,'ns'=ns) #package output
+          if (orient == 'rc'){
+              DS <- t(DS)
+              US <- t(US)
+              YS <- t(YS)
+              SD <- t(DS)
+              SY <- t(SY)
+
+          }else{}
+
+          ns <- cbind('lam1DS'=abs(eigen(DS)$values[1]),
+                      'relation.change.S' = R$ns[1],
+                      'synergism.S' = synergism.S,
+                      'mutualism.S'=mutualism.S)
+
+          out <- list('DS'=DS,'SD'=SD,
+                      'US'=US,
+                      'YS'=YS,'SY'=SY,
+                      'Relations.Table' = R.table,
+                      'ns'=ns) #package output
       }
-    }
+        }
                                         #labeling
-    if (length(out)>1){
-      for (i in 1:(length(out)-1)){
-        if (class(out[[i]])=='matrix'){
-          rownames(out[[i]]) <- colnames(out[[i]]) <- colnames(Flow)
+        if (length(out)>1){
+            for (i in 1:(length(out)-1)){
+                if (class(out[[i]])=='matrix'){
+                    rownames(out[[i]]) <- colnames(out[[i]]) <- colnames(Flow)
+                }
+            }
         }
-      }
-    }
                                         #output
-    return(out)
-  }
+        return(out)
+    }
 }
diff --git a/R/environCentrality.R b/R/environCentrality.R
index 9a52592..0ffde4d 100644
--- a/R/environCentrality.R
+++ b/R/environCentrality.R
@@ -6,6 +6,51 @@
 #' M. Lau | July 2011
 #' ---------------------------------------------------
 
+
+
+
+
+
+
+#' environCentrality --- calculates the centrality of flow network environs
+#' INPUT = environ matrix OUTPUT = in-going, out-going and average centralities
+#' 
+#' M. Lau | July 2011 ---------------------------------------------------
+#' environCentrality --- calculates the centrality of flow network environs
+#' INPUT = environ matrix OUTPUT = in-going, out-going and average centralities
+#' 
+#' M. Lau | July 2011 ---------------------------------------------------
+#' Environ Centrality an Ecological Network
+#' 
+#' This function calculates the input, output, and average environ centrality
+#' of the nodes in the network (Fath and Borret, 2012).  This is a type of
+#' weighted degree centrality that indicates the relative importance of the
+#' nodes in the flow activity in the network.
+#' 
+#' @param x A square matrix.  Usually the integral flow marix from enaFlow. The
+#' assumption is that the flows are oriented column to row.
+#' @return \item{ECin}{input oriented environ centrality} \item{ECout}{output
+#' oriented environ centraility} \item{AEC}{average environ centrality (average
+#' of input and output)}
+#' @author Matthew K. Lau Stuart R. Borrett
+#' @seealso \code{\link{enaFlow}}
+#' @references Fann, S.L. and Borrett, S.R. 2012. Environ centrality reveals
+#' the tendency of indirect effects to homogenize the functional importance of
+#' species in ecosystems.  Journal of Theoretical Biology 294: 74-86.
+#' @examples
+#' 
+#' 
+#' 
+#' data(troModels)
+#' F <- enaFlow(troModels[[6]])
+#' ec <- environCentrality(F$N)
+#' attributes(ec)
+#' barplot(sort(ec$AEC, decreasing = TRUE), col = 4, ylab = "Average Environ Centrality", 
+#'     ylim = c(0, 0.4))
+#' 
+#' 
+#' 
+#' @export environCentrality
 environCentrality <- function(x='matrix'){
   if (class(x) != 'matrix'){warning('x is not a matrix class object')}
   ECin <- rowSums(x)/sum(rowSums(x))
diff --git a/R/findPathLength.R b/R/findPathLength.R
index b95f5a6..682cfc1 100644
--- a/R/findPathLength.R
+++ b/R/findPathLength.R
@@ -6,6 +6,53 @@
 #' S. Borrett and M. Lau | July 2011
 #' ---------------------------------------------------
 
+
+
+
+
+
+
+#' findPathLength --- calculates the flows over a sequence up to a maximum path
+#' length INPUT = network object OUTPUT = a list of flow statistics over paths
+#' 
+#' S. Borrett and M. Lau | July 2011
+#' --------------------------------------------------- findPathLength ---
+#' calculates the flows over a sequence up to a maximum path length INPUT =
+#' network object OUTPUT = a list of flow statistics over paths
+#' 
+#' S. Borrett and M. Lau | July 2011
+#' --------------------------------------------------- Cumulative Flow over a
+#' Range of Path Lengths
+#' 
+#' Calculates the flow throughout the entire network over a given path length.
+#' 
+#' @param x Network model object.
+#' @param maxPath The maximum path length to calculate total flow.
+#' @param plot.sw LOGICAL: should a plot be generated showing flow
+#' accumulation?
+#' @return \item{thresholds}{thresholds indicating the development of
+#' throughflow as path length increases: the path length at which indirect flow
+#' exceeds direct flow (mID), path length at which 50\%, 90\%, and 95\% of
+#' total system throughflow is achieved (m50, m90, and m95, respectively)}
+#' \item{tf}{total flow across paths from length 0 (Boundary inputs) to
+#' maxPath} \item{ctf}{cumulative total flow from path length 0 to maxPath}
+#' @author Matthew K. Lau Stuart R. Borrett
+#' @seealso \code{\link{enaFlow}}
+#' @references Borrett, S.R, Patten, B.C., Whipple, S.J. 2010.  Rapid
+#' development of indirect effects in ecological networks.  Oikos
+#' 119:1136--1148.
+#' @examples
+#' 
+#' 
+#' 
+#' data(troModels)
+#' pl10 <- findPathLength(troModels[[6]], plot.sw = TRUE, maxPath = 10)
+#' names(pl10)
+#' pl10$thresholds
+#' 
+#' 
+#' 
+#' @export findPathLength
 findPathLength <- function(x,maxPath=100,plot.sw=FALSE){
   ##
   if(ssCheck(x)=="FALSE"){x = balance(x)}  # ensure the models is balanced
diff --git a/R/force.balance.R b/R/force.balance.R
index 9171047..2b1e02c 100644
--- a/R/force.balance.R
+++ b/R/force.balance.R
@@ -5,6 +5,47 @@
 #' M. Lau 1 Oct 2012
 #' ---------------------------------------------------
 
+
+
+
+
+
+
+#' force.balance --- repeatedly applies balance until sub-tolerance is reached
+#' INPUT = network model OUTPUT = balanced model M. Lau 1 Oct 2012
+#' --------------------------------------------------- force.balance ---
+#' repeatedly applies balance until sub-tolerance is reached INPUT = network
+#' model OUTPUT = balanced model M. Lau 1 Oct 2012
+#' --------------------------------------------------- Repeated Application the
+#' Balance Function
+#' 
+#' This function repeatedly balances a model, sequentially with the output
+#' being passed back to the balance function, until it is within tolerance or
+#' the maximum number of iterations is reached.
+#' 
+#' 
+#' @param x A network object.
+#' @param tol Percent error tolerance for difference between inputs and
+#' outputs.
+#' @param max.itr Maximum number iterations.
+#' @param method The balancing method to use, see balance. DEFAULT = AVG2.
+#' @return Returns a balanced network model.
+#' @author Matthew K. Lau Stuart R. Borrett
+#' @seealso \code{\link{balance}}
+#' @references Allesina, S., Bondavalli, C., 2003.Steady state of ecosystem
+#' flow networks: a comparison between balancing procedures.Ecological
+#' Modelling 165(2-3):231-239.
+#' @examples
+#' 
+#' 
+#' 
+#' data(troModels)
+#' ssCheck(troModels[[1]])
+#' fb.model = force.balance(troModels[[2]])  #produces a balanced model
+#' 
+#' 
+#' 
+#' @export force.balance
 force.balance <- function(x,tol=5,max.itr=10,method='AVG2'){
   n.itr <- 1 # initiate counter
   while(ssCheck(x)==FALSE & n.itr<max.itr){
diff --git a/R/get.ns.R b/R/get.ns.R
index 001197e..d128d32 100644
--- a/R/get.ns.R
+++ b/R/get.ns.R
@@ -5,6 +5,44 @@
 #' Borrett | July 4, 2012
 #' -----------------------------------
 
+
+
+
+
+
+
+#' get.ns.R Input = network model Output = a vector of global network
+#' statistics from ena
+#' 
+#' Borrett | July 4, 2012 ----------------------------------- get.ns.R Input =
+#' network model Output = a vector of global network statistics from ena
+#' 
+#' Borrett | July 4, 2012 ----------------------------------- Quick Calculation
+#' of a Range of Network Statistics.
+#' 
+#' This is a high level function for calculated the main network analyses
+#' (Ascendancy, Flow, Structure, Storage and Utility) on an ecological network.
+#' 
+#' @param x A network object.
+#' @param balance.override Turns off balancing and balance checking.
+#' @return Returns the network statistics (ns) of all of the major ENA
+#' functions: enaStructure, enaFlow, enaAscendency, enaStorage and enaUtility
+#' (both flow and storage).
+#' @author Matthew K. Lau Stuart R. Borrett David E. Hines
+#' @seealso
+#' \code{\link{enaStructure}},\code{\link{enaFlow}},\code{\link{enaAscendency}},\code{\link{enaUtility}}
+#' @references Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network
+#' Environ Analysis.  Environ. Model. Softw. 21, 375-405.
+#' @examples
+#' 
+#' 
+#' 
+#' data(troModels)
+#' get.ns(troModels[[6]])
+#' 
+#' 
+#' 
+#' @export get.ns
 get.ns <- function(x,balance.override=FALSE){
                                         #Check for network class
   if (class(x) != 'network'){warning('x is not a network class object')}
@@ -18,13 +56,14 @@ get.ns <- function(x,balance.override=FALSE){
   # runs selected ena analyses that return global network statistics
   st <- enaStructure(x)$ns
   Flow <- enaFlow(x)$ns
-  asc <- enaAscendency(x)
+#  asc <- enaAscendency(x)  # enaFlow now includes the ascendency measures
   s <- enaStorage(x)$ns
   u.f <- enaUtility(x,type='flow',eigen.check=FALSE)$ns
   u.s <- enaUtility(x,type='storage',eigen.check=FALSE)$ns
 
-  ns <- data.frame(st,Flow,asc,s,u.f,u.s)
+  ns <- data.frame(st,Flow,s,u.f,u.s)
+  rownames(ns) <- ""
 
   return(ns)
 }
-  
+
diff --git a/R/get.orient.R b/R/get.orient.R
index 71ec299..77aac94 100644
--- a/R/get.orient.R
+++ b/R/get.orient.R
@@ -5,6 +5,31 @@
 #' M. Lau | 16 Jun 2013
 #' ---------------------------------------------------
 
+
+
+
+
+
+
+#' get.orient --- returns the global orientation INPUT = none OUTPUT = returns
+#' the current orientation of matrices
+#' 
+#' M. Lau | 16 Jun 2013 ---------------------------------------------------
+#' get.orient --- returns the global orientation INPUT = none OUTPUT = returns
+#' the current orientation of matrices
+#' 
+#' M. Lau | 16 Jun 2013 --------------------------------------------------- Get
+#' the Current Global Matrix Orientation Setting
+#' 
+#' Returns the current setting for the expected orientation of all matrices,
+#' which is either 'rc' (DEFAULT) or 'school' (output orientation as expected
+#' for the school of analysis for a given function).
+#' 
+#' This function is intended to provide increase flexibility for users of both
+#' the Patten and Ulanowicz schools of ENA.
+#' 
+#' @author %% ~~who you are~~ Matthew K. Lau Stuart R. Borrett
+#' @export get.orient
 get.orient <- function(){
   current.orientation <- get('orientation',envir=environment(set.orient))
   return(current.orientation)
diff --git a/R/mExp.R b/R/mExp.R
index dc38393..048269f 100644
--- a/R/mExp.R
+++ b/R/mExp.R
@@ -6,6 +6,37 @@
 #'# r-help/2007-May/131330.html)
 #'# ___________________________________________________
 
+
+
+
+
+
+
+#' # mExp --- calculate the exponent of a given matrix # INPUT = a matrix (x)
+#' and the exponent (n) # OUTPUT = the resulting exponentiated matrix # #
+#' Alberto Monteiro (https://stat.ethz.ch/pipermail/ #
+#' r-help/2007-May/131330.html) #
+#' ___________________________________________________ # mExp --- calculate the
+#' exponent of a given matrix # INPUT = a matrix (x) and the exponent (n) #
+#' OUTPUT = the resulting exponentiated matrix # # Alberto Monteiro
+#' (https://stat.ethz.ch/pipermail/ # r-help/2007-May/131330.html) #
+#' ___________________________________________________ Calculates the Exponent
+#' of a Matrix
+#' 
+#' Function for calculating the pathway proliferation of flows in a network
+#' model through matrix exponentiation.
+#' 
+#' 
+#' @param x A matrix.
+#' @param n Desired exponent (i.e. the path length).
+#' @return Returns an exponentiated flow matrix.
+#' @author Alberto Monteiro
+#' (https://stat.ethz.ch/pipermail/r-help/2007-May/131330.html) Matthew K. Lau
+#' @seealso \code{\link{findPathLength}}
+#' @references This function was originally designed by Alberto Monteiro in the
+#' following R help thread:
+#' https://stat.ethz.ch/pipermail/r-help/2007-May/131330.html.
+#' @export mExp
 mExp <- function(x='matrix', n=2){
   if (n == 1) return(x)
   result <- diag(1, ncol(x))
diff --git a/R/netOrder.R b/R/netOrder.R
index 4b8b0f7..2a1ba2a 100644
--- a/R/netOrder.R
+++ b/R/netOrder.R
@@ -2,6 +2,51 @@
 #'## Singh P. | July 2014
 #'## -----------------------------------------
 
+
+
+
+
+
+
+#' ## Function to order the nodes in a Network in enaR ## Singh P. | July 2014
+#' ## ----------------------------------------- ## Function to order the nodes
+#' in a Network in enaR ## Singh P. | July 2014 ##
+#' ----------------------------------------- Reorder Nodes in a Network in enaR
+#' 
+#' Reorders nodes in a network either through a user defined node order vector
+#' or by default places the non-living nodes to the end of the node vector,
+#' minimizing the order change for other nodes.
+#' 
+#' 
+#' @param x A network object. This includes all weighted flows into and out of
+#' each node.
+#' @param order An integer vector of length N, where N is number of nodes in x,
+#' specifying the new order of the nodes (by default order = 0, which indicates
+#' moving non-living nodes to the end)
+#' @return Returns a network object with nodes ordered as per the node order
+#' vector or without the node order vector, by default moves the non-living
+#' nodes to the end of the node vector, minimizing the order change for other
+#' nodes.
+#' @note The node order vector "order" must be of length equal to the number of
+#' nodes in x (i.e. N) and must contain all integers from 1 to N.
+#' 
+#' This function can be used with default conditions (i.e. without "order"
+#' vector) to reorder the nodes of a network which does not have non-living
+#' nodes placed at the end so that the Trophic Aggregations analysis
+#' (enaTroAgg) can be run on the reordered model.
+#' @author Pawandeep Singh
+#' @seealso \code{\link{enaTroAgg}}
+#' @examples
+#' 
+#' 
+#' 
+#' data(troModels)
+#' new.network <- netOrder(troModels[[6]], c(1, 3, 2, 5, 4))
+#' # new.network is the required rearranged network with nodes in the desired order.
+#' 
+#' 
+#' 
+#' @export netOrder
 netOrder <- function(x,order=0) {
     if (class(x) != "network") {
         stop("x is not a network class object")
diff --git a/R/pack.R b/R/pack.R
index 0cbc349..a91db8a 100644
--- a/R/pack.R
+++ b/R/pack.R
@@ -5,6 +5,30 @@
 # M.Lau & S.R. Borrett | July 2014
 # ------------------------------------
 
+
+
+
+
+
+
+#' Compile Network Information into a Network Class
+#' 
+#' This function provides a flexible framework for importing flow network
+#' information into a network class object for analyses.
+#' 
+#' 
+#' @param flow The flow matrix.
+#' @param input The inputs into the system.
+#' @param respiration The quantities respired from the system.
+#' @param export The exports from the system.
+#' @param output The output (i.e. exports + respiration) from the system.
+#' @param storage The quantities stored in compartments within the system.
+#' @param living A logical vector indicating whether a node is either 'living'
+#' (= TRUE) or 'dead' (=FALSE).
+#' @return Returns a network object for the supplied model.
+#' @author Matthew K. Lau Stuart R. Borrett
+#' @seealso \code{\link{unpack}}
+#' @export pack
 pack <- function(flow,input=NA,respiration=NA,export=NA,output=NA,storage=NA,living=NA){
                                         #Warn if missing both
   if (all(is.na(respiration)) & all(is.na(export))){
diff --git a/R/read.EcoNet.R b/R/read.EcoNet.R
new file mode 100644
index 0000000..7d164f9
--- /dev/null
+++ b/R/read.EcoNet.R
@@ -0,0 +1,86 @@
+### Reading econet models
+### 1 Mar 2016
+### mklau
+
+
+
+
+
+
+
+#' Read an EcoNet model.
+#' 
+#' This function allows the user to access models that are formatted for
+#' EcoNet, the web-based interface for conducting ENA
+#' (http://eco.engr.uga.edu/), by Caner Kazanci at the University of Georgia.
+#' 
+#' 
+#' @param x An object with the EcoNet formatted file, which can be read into R
+#' using readLines.
+#' @param verbose LOGICAL: should warnings be suppressed?
+#' @return Returns the model formatted as a network object.
+#' @author Matthew K. Lau
+#' @seealso \code{\link{EcoNetWeb}}
+#' @references Kazanci, C., 2007. EcoNet: A new software for ecological
+#' modeling, simulation and network analysis, Ecol. Model., Vol 208/1 pp 3-8.
+#' @export read.EcoNet
+read.EcoNet <- function(x,verbose=FALSE){
+    if (!(verbose)){options(warn=-1)}
+    x <- x[!(grepl('<',x)) & grepl('=',x)]
+    x <- x[!(grepl('\\#',x))]
+    if (any(!(grepl('c=',x)) & grepl('=',x))){
+        stor <- x[grepl('=',x) & !(grepl('c=',x))]
+    }else{stor <- NA}
+    x <- x[grepl('=',x) & grepl('c=',x)]
+    x <- paste(x,collapse=';')
+    x <- strsplit(x,' ')[[1]]
+    x <- x[x != '']
+    x <- paste(x,collapse='')
+    x <- strsplit(x,';')[[1]]
+    flo <- x[!(grepl('\\*',x))]
+    inp <- x[(grepl('\\*->',x))]
+    out <- x[(grepl('->\\*',x))]
+    flo <- sub('->',';',flo)
+    flo <- sub('c=',';',flo)
+    flo <- do.call(rbind,strsplit(flo,split=';'))
+    flow <- matrix(0,nrow=length(unique(c(flo[,1],flo[,2]))),
+                   ncol=length(unique(c(flo[,1],flo[,2]))))
+    rownames(flow) <- colnames(flow) <- unique(c(flo[,1],flo[,2]))
+    for (i in 1:nrow(flo)){
+        flow[rownames(flow) == flo[i,1],colnames(flow) == flo[i,2]] <- as.numeric(flo[i,3])
+    }
+    inp <- do.call(rbind,strsplit(sub('\\*->','',inp),'c='))
+    input <- as.numeric(inp[,2])
+    names(input) <- inp[,1]
+    out <- do.call(rbind,strsplit(sub('->\\*','',out),'c='))
+    output <- as.numeric(out[,2])
+    names(output) <- out[,1]
+    if (is.na(stor[[1]])){
+        storage <- rep(0,nrow(flow))
+    }else{
+        stor <- paste(stor,collapse='')
+        stor <- strsplit(stor,split='')[[1]]
+        stor[!(stor %in% c(LETTERS,letters,0:9,'=','.','_',' '))] <- ','
+        stor <- paste(stor,collapse='')
+        stor <- paste(strsplit(stor,' ')[[1]],collapse='')
+        stor <- strsplit(stor,',')[[1]]
+        stor <- strsplit(stor,'=')
+        stor <- do.call(rbind,stor)
+        storage <- as.numeric(stor[,2])
+        names(storage) <- stor[,1]
+    }
+    if (length(input) != nrow(flow)){
+        inp <- rep(0,(nrow(flow) - length(input)))
+        names(inp) <- rownames(flow)[!(rownames(flow) %in% names(input))]
+        input <- c(input,inp)
+    }
+    if (length(output) != nrow(flow)){
+        outp <- rep(0,(nrow(flow) - length(output)))
+        names(outp) <- rownames(flow)[!(rownames(flow) %in% names(output))]
+        output <- c(output,outp)
+    }
+    input <- input[match(names(input),rownames(flow))]
+    output <- output[match(names(output),rownames(flow))]
+    storage <- storage[match(names(storage),rownames(flow))]
+    return(pack(flow=flow,input=input,output=output,storage=storage))
+}
diff --git a/R/read.enam.R b/R/read.enam.R
index 92ae8a1..bd23eb4 100644
--- a/R/read.enam.R
+++ b/R/read.enam.R
@@ -1,7 +1,40 @@
 #' R function to read in a matrix formatted as Mdloti (Ursula Sharler)
 #' Borrett | Sept. 12, 2012, MKL July 2013
+#' Updated - Borrett, May 2016 - to use pack() to create the network data object.
 #' ------------------------
 
+
+
+
+
+
+
+#' R function to read in a matrix formatted as Mdloti (Ursula Sharler) Borrett
+#' | Sept. 12, 2012, MKL July 2013 Updated - Borrett, May 2016 - to use pack()
+#' to create the network data object. ------------------------ R function to
+#' read in a matrix formatted as Mdloti (Ursula Sharler) Borrett | Sept. 12,
+#' 2012, MKL July 2013 Updated - Borrett, May 2016 - to use pack() to create
+#' the network data object. ------------------------ Read ENA Model from an
+#' Mdloti Formatted Excel File
+#' 
+#' This function reads network data from an excel file commonly used by Ursula
+#' Sharler.  The file has three header lines (name/source, number of
+#' compartments, number of living nodes) and then a n+2 x n+2 matrix of flows.
+#' This is the flow matrix with an additional row for imports and biomass each
+#' and additional columns for exports and respirations.
+#' 
+#' 
+#' @param file The name and path for the data file.  This function assumes the
+#' data are stored on the first sheet of an Microsoft Excel formatted. NOTE:
+#' this function depends on the read.xlsx function from the xlsx package, which
+#' requires that the entire path be specified from the root directory (i.e. the
+#' absolute path).
+#' @return Returns the network object.
+#' @author Stuart R. Borrett
+#' @seealso \code{\link{read.scor}}
+#' @references Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network
+#' Environ Analysis.  Environ. Model. Softw. 21, 375-405.
+#' @export read.enam
 read.enam<- function(file="file path and name"){
                                         #I have assumed the file is formatted as an excel speadsheet.
                                         #The data must be on the first sheet in the workbook.
@@ -20,15 +53,8 @@ read.enam<- function(file="file path and name"){
   biomass <- as.numeric(unlist(m[(n+2),1:n]))
   exports <- as.numeric(unlist(m[1:n,(n+1)]))
   respiration <- as.numeric(unlist(m[1:n,(n+2)]))
-  y <- network(Flow,directed=TRUE)
-                                        # packing up the attributes into the network object (y)
-  set.vertex.attribute(y,'input',imports)
-  set.vertex.attribute(y,'export',exports)
-  set.vertex.attribute(y,'respiration',respiration)
-  set.vertex.attribute(y,'storage',biomass)
-  set.vertex.attribute(y,'output',exports+respiration)
-  y%v%'vertex.names' <- rownames(Flow)
-  y%v%'living'=c(rep(TRUE,liv),rep(FALSE,n-liv))
-  set.network.attribute(y, 'flow', Flow[Flow>0])
+  LIV <-  c(rep(TRUE,liv),rep(FALSE,n-liv))
+                                       # packing up the attributes into the network object (y)
+  y <- pack(flow = Flow, input = imports, respiration = respiration, export = exports, storage = biomass, living = LIV)
   return(y)
 }
diff --git a/R/read.nea.R b/R/read.nea.R
index b1f7a1e..0ffb8f3 100644
--- a/R/read.nea.R
+++ b/R/read.nea.R
@@ -7,6 +7,36 @@
 #' Borrett | July 15, 2013
 #' --------------------------------------------------
 
+
+
+
+
+
+
+#' read.nea.RData INPUT = Model Data (flows, inputs, outputs, storage)
+#' formatted as for NEA.m, saved as CSV file S= |[F][z][X]| |[y][0][0]| OUPUT =
+#' R Network data object for use with enaR
+#' 
+#' Borrett | July 15, 2013 --------------------------------------------------
+#' read.nea.RData INPUT = Model Data (flows, inputs, outputs, storage)
+#' formatted as for NEA.m, saved as CSV file S= |[F][z][X]| |[y][0][0]| OUPUT =
+#' R Network data object for use with enaR
+#' 
+#' Borrett | July 15, 2013 --------------------------------------------------
+#' Read NEA Formatted Network Model
+#' 
+#' This function reads in and creates a network object from a NEA formatted
+#' data file (Fath and Borrett 2006).
+#' 
+#' @param file The name and path for the data file.
+#' @param sep The separation character used to delimit data values.
+#' @param warn LOGICAL: should pack warnings be reported?
+#' @return Returns the network object.
+#' @author Stuart R. Borrett
+#' @seealso \code{\link{write.nea}}
+#' @references Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network
+#' Environ Analysis.  Environ. Model. Softw. 21, 375-405.
+#' @export read.nea
 read.nea <- function(file="file name",sep=',',warn=TRUE){
   dat <- read.table(file,header=FALSE,sep=sep)  # assumes 
   n <- max(dim(dat)) - 2
diff --git a/R/read.scor.R b/R/read.scor.R
index 92debf4..e404925 100644
--- a/R/read.scor.R
+++ b/R/read.scor.R
@@ -5,6 +5,46 @@
 #' S. Borrett and M. Lau | July 2011
 #' ------------------------------------
 
+
+
+
+
+
+
+#' read.scor --- SCOR formatted file into R in multiple formats INPUT = file
+#' path OUTPUT = network model in chosen format S. Borrett and M. Lau | July
+#' 2011 ------------------------------------ read.scor --- SCOR formatted file
+#' into R in multiple formats INPUT = file path OUTPUT = network model in
+#' chosen format S. Borrett and M. Lau | July 2011
+#' ------------------------------------ Read SCOR Formatted Model
+#' 
+#' Read in network model data files that are in the SCOR format (REFERENCE).
+#' 
+#' The SCOR file must be formatted properly. In particular, the number of nodes
+#' on the second line must have the first three characters dedicated to the
+#' total number of nodes and the next three characters should contain the
+#' number of living nodes. That is, the second line of the file should be
+#' formatted as 'xxxyyy' where x and y are the characters for the total number
+#' of nodes and the number of living nodes, respectively. Thus, if the total
+#' number of nodes is 10 and the number of living nodes is 1, then the second
+#' line should read, " 10 1."
+#' 
+#' @param file File path or plain text.
+#' @param from.file States whether the file argument input should be treated as
+#' a file path (TRUE) or plain text (FALSE).
+#' @param warn Turn on (TRUE) or off (FALSE) warnings.
+#' @return Returns the network model in one of several formats. The default
+#' format is a network object used by the statnet package (type="network").
+#' Three other options are the network environ analysis format (type="nea") as
+#' defined by (Fath and Borrett 2006), a list format (type="list") and an edge
+#' list (type="edge.list").
+#' @author Matthew K. Lau Stuart R. Borrett
+#' @references Ulanowicz, R.E. and J.J. Kay. 1991. A package for the analysis
+#' of ecosystem flow networks. Environmental Software 6:131-142.
+#' 
+#' Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network Environ
+#' Analysis.  Environ. Model. Softw. 21, 375-405.
+#' @export read.scor
 read.scor <- function(file,from.file=TRUE,warn=FALSE){
   if (from.file){text <- readLines(file,warn=warn)}else{text <- file} # read in file
                                         #Partition the meta-data
diff --git a/R/read.wand.R b/R/read.wand.R
index 3ae9317..e8f121d 100644
--- a/R/read.wand.R
+++ b/R/read.wand.R
@@ -4,6 +4,31 @@
 #' S. Borrett | May 2012
 #' ------------------------------------
 
+
+
+
+
+
+
+#' read.wand --- WAND formatted file into R INPUT = file path OUTPUT = network
+#' object S. Borrett | May 2012 ------------------------------------ read.wand
+#' --- WAND formatted file into R INPUT = file path OUTPUT = network object S.
+#' Borrett | May 2012 ------------------------------------ Read WAND Formatted
+#' Model
+#' 
+#' Reads WAND formatted network models.
+#' 
+#' 
+#' @param file File path to WAND formatted data file.
+#' @return Returns a network object from a WAND formatted data file.
+#' @note IMPORTANT: this function depends on the read.xlsx function from the
+#' xlsx package, which requires that the entire path be specified from the root
+#' directory (i.e. the absolute path).
+#' @author Matthew K. Lau Stuart R. Borrett
+#' @references Allesina, S., Bondavalli, C., 2004. WAND: an Ecological Network
+#' Analysis user-friendly tool. Environmental Modelling and Software
+#' 19(4):337-340.
+#' @export read.wand
 read.wand <- function(file='file name with path'){
                                         # file is the full excel file name
                                         # asssumes that first sheet is "Main" and second sheet is "Flows".
diff --git a/R/relationalChange.r b/R/relationalChange.r
new file mode 100644
index 0000000..6712d5f
--- /dev/null
+++ b/R/relationalChange.r
@@ -0,0 +1,87 @@
+# relationalChange.r
+# Which relationships change beteween the direct and integral utility analysis?
+#
+# Stuart R. Borrett
+# February 25, 2016
+# ------------------------
+
+
+
+
+
+
+
+#' Relational change compared between two matrices.
+#' 
+#' Identifies the signs and pairwise relationsips of two matrices and compares
+#' the difference between them.
+#' 
+#' 
+#' @param x x is a square matrix of real numbers.  While this function is more
+#' general, the initial intention was for this to be the direct utility matrix.
+#' @param y y is a square matrix of real numbers.  While this function is more
+#' general, the initial intention was for this to be the integral utility
+#' matrix or the mixed trophic impacts matrix.
+#' @return \item{Direct.Signs}{A sign matrix for matrix x.}
+#' \item{Integral.Signs}{A sign matrix for matrix x.} \item{Direct.Relations}{A
+#' matrix of the pairwise sign relationships for matrix x.}
+#' \item{Integral.Relations}{A matrix of the pairwise signed relationships in
+#' matrix y.} \item{Relations.Table}{A table that summarizes the relations.}
+#' \item{Changed.Table}{A summary table of only the pariwise relationships that
+#' changed between x and y.} \item{ns}{A vector of network statisitcs which
+#' currently includes one whole-network statistic - a ratio of the
+#' relationships changed between x and y.}
+#' @note This function is called by enaUtility and enaMTI to summarize results.
+#' @author Stuart R. Borrett
+#' @seealso \code{\link{enaUtility}, \link{enaMTI}, \link{signs}}
+#' @examples
+#' 
+#' 
+#' 
+#' data(oyster)
+#' D <- enaUtility(oyster)$D
+#' U <- enaUtility(oyster)$U
+#' rc <- relationalChange(D, U)
+#' 
+#' 
+#' ## To get a count of the number of differnt pairwise relationships in one of the
+#' ## sign matrices, you can use the table function
+#' 
+#' count <- table(rc$Direct.Relations)
+#' 
+#' 
+#' 
+#' 
+relationalChange <- function(x="Direct.U",y="Integral.U"){
+    vnames <- rownames(x)
+    S1 <- signs(x)    # find the signs of the relationships in the direct utility matrix
+    S2 <- signs(y)    # find the signs of the relationships in the integral utility matrix
+    S1$rs.tab$order <- 1:dim(S1$rs.tab)[1]  # add a column by which we can resort SF
+    SF <- merge( S1$rs.tab, S2$rs.tab, by = c("From", "To"),stringsAsFactors=FALSE)  # merges the two relationship results
+    names(SF) <- c("From","To","R1","R1.name","order", "R2", "R2.name")
+    SF <- SF[,c(-4,-7)]  # remove relationship names (simplify)
+    o <- order(SF$order)
+    SF <- SF[o,!(names(SF) %in% c("order"))]  # reorder the merged data frame and drop order column
+
+    # which pairs changed?
+    d <- rep("-",dim(SF)[1])
+    d[which(!(SF$R1 == SF$R2))] <- "*"  # find the differneces
+    SF$changed <- d
+    CR <- SF[which(SF$changed=="*"),]
+    possible.change = length(d)
+    no.changed = length(which(SF$changed=="*"))
+    r.changed = round(no.changed/possible.change * 100, 2)
+
+    ns <- c("r.change"=r.changed)  # percent of direct relationships that change when all utilities are considered
+
+    return(list("Direct.Signs" = S1$s,
+                "Direct.Relations" = S1$relations,
+                "Integral.Signs" = S2$s,
+                "Integral.Relations" = S2$relations,
+                "Relations.Table" = SF,
+                "Changed.Table" = CR,
+                "ns"=ns))
+}
+
+
+
diff --git a/R/scc.R b/R/scc.R
index 062dfc4..83a1cad 100644
--- a/R/scc.R
+++ b/R/scc.R
@@ -4,6 +4,54 @@
 #' S. Borrett | July 2011
 #' ------------------------------------
 
+
+
+
+
+
+
+#' scc --- find the strongly connected component INPUT = an adjacency matrix
+#' OUTPUT = list of membership and values S. Borrett | July 2011
+#' ------------------------------------ scc --- find the strongly connected
+#' component INPUT = an adjacency matrix OUTPUT = list of membership and values
+#' S. Borrett | July 2011 ------------------------------------ Find the
+#' Strongly Connected Component (SCC) in a Graph
+#' 
+#' This function finds the strongly connected components (SCCs) of an adjacency
+#' matrix A and returns a number of derived network statistics.
+#' 
+#' 
+#' @param A an n x n adjacency matrix.
+#' @return \item{sp}{a list of structural properties including: the number of
+#' SCCs ("no.scc"), the number of SCCs with more than 1 node ("no.scc.big"),
+#' and the fraction of the network nodes participating in a large SCC ("pscc")}
+#' \item{membership}{numeric vector giving the cluseter id to which each node
+#' belongs (as in igraph:clusters)} \item{scc.id}{numeric vector of the numeric
+#' identity in "membership" of SCCs with more than 1 node}
+#' @note Input matrix is assumed to be oriented from columns to rows.
+#' @author Matthew K. Lau Stuart R. Borrett
+#' @seealso \link{enaStructure}
+#' @references Allesina, S., Bodini, A., Bondavalli, C., 2005. Ecological
+#' subsystems via graph theory: the role of strongly connected components.
+#' Oikos 110, 164-176.
+#' 
+#' Berman, A., Plemmons, R.J., 1979. Nonnegative Matrices in the Mathematical
+#' Sciences. Academic Press, New York.
+#' 
+#' Borrett, S.R., Fath, B.D., Patten, B.C. 2007. Functional integration of
+#' ecological networks through pathway proliferation.  Journal of Theoretical
+#' Biology 245, 98-111.
+#' @examples
+#' 
+#' 
+#' 
+#' data(troModels)
+#' A <- enaStructure(troModels[[6]])$A
+#' scc(A)
+#' 
+#' 
+#' 
+#' @export scc
 scc <- function(A="adjacency"){
                                         #Check for network class
   if (class(A) != 'matrix'){warning('A is not a matrix class object')}
diff --git a/R/scifix.R b/R/scifix.R
index a868678..3525050 100644
--- a/R/scifix.R
+++ b/R/scifix.R
@@ -6,6 +6,28 @@
 #' M. Lau | July 2012
 #' ------------------------------------
 
+
+
+
+
+
+
+#' scifix --- corrects missing e or E in scientific notation INPUT = scalar
+#' either in or not in scientific notation OUTPUT = corrected numeric value M.
+#' Lau | July 2012 ------------------------------------ scifix --- corrects
+#' missing e or E in scientific notation INPUT = scalar either in or not in
+#' scientific notation OUTPUT = corrected numeric value M. Lau | July 2012
+#' ------------------------------------ Standardizes Scientific Notation from
+#' SCOR Formatted Files
+#' 
+#' This is a support function that corrects the scientific notation in SCOR
+#' formatted data files.
+#' 
+#' 
+#' @param x A numeric or character scalar.
+#' @return Returns a numeric scalar in appropriate scientific notation.
+#' @author Matthew K. Lau
+#' @seealso \code{\link{read.scor}}
 scifix <- function(x){
   x <- as.character(x)
                                         #e/E check
diff --git a/R/set.orient.R b/R/set.orient.R
index a789667..391585a 100644
--- a/R/set.orient.R
+++ b/R/set.orient.R
@@ -5,6 +5,56 @@
 #' M. Lau | Feb 2013
 #' ---------------------------------------------------
 
+
+
+
+
+
+
+#' set.orient --- globally reorients matrices INPUT = matrix orientation (rc or
+#' cr) OUTPUT = sets the expected orientation of matrices
+#' 
+#' M. Lau | Feb 2013 ---------------------------------------------------
+#' set.orient --- globally reorients matrices INPUT = matrix orientation (rc or
+#' cr) OUTPUT = sets the expected orientation of matrices
+#' 
+#' M. Lau | Feb 2013 ---------------------------------------------------
+#' Globally Set the Output Matrix Orientation
+#' 
+#' Changes the orientation of output matrices.
+#' 
+#' The enaR package as a whole, and the broader network analysis community,
+#' assumes a row to column orientation; thus, the default orientation for the
+#' package is row to column (DEFAULT = 'rc'). However, functions from the
+#' Patten school were orignially developed to conduct calculations and produce
+#' output in the column to row orientation. In order to facilitate the use of
+#' these functions, we also provide the option for users to return output in
+#' the orientation of the "school" (i.e. Patten results will be column to row
+#' oriented) by setting the global orientation to "school" using this fuction.
+#' 
+#' @param x Orientation setting. If "rc" (DEFAULT), all matrix output will be
+#' returned in row (=input) to column (=output) orientation, regardless of
+#' school. If "school", then output matrices from functions from particular ENA
+#' schools will be oriented as expected in that school (i.e. Patten =
+#' column-row or Ulanowicz = row-column). Note, that all functions in the enaR
+#' package expect input matrices to be oriented row-column.
+#' @author Matthew K. Lau Stuart R. Borrett
+#' @seealso \code{\link{get.orient}}
+#' @examples
+#' 
+#' 
+#' 
+#' original.orientation = get.orient()
+#' original.orientation
+#' set.orient("school")
+#' get.orient()
+#' set.orient("rc")
+#' get.orient()
+#' set.orient(original.orientation)
+#' 
+#' 
+#' 
+#' @export set.orient
 set.orient <- local({
   orientation <- 'rc'
   warn <- ''
diff --git a/R/signs.r b/R/signs.r
new file mode 100644
index 0000000..861b133
--- /dev/null
+++ b/R/signs.r
@@ -0,0 +1,95 @@
+# signs.r
+# February 25, 2016
+# Stuart R. Borrett
+
+# INPUT/OUPTUT - this function takes a numerical matrix and returns a matrix of its signs and a matrix of the relationships among the row/columns based on these signs
+# -------------------
+
+
+
+
+
+
+
+#' Signs and summary of input matrix
+#' 
+#' Identifies the signs and pairwise relationsips of a given matrix.  This
+#' includes also returns a summary table that provides the ecological name of
+#' each pairwise realtionship, and a summary of the counts.
+#' 
+#' 
+#' @param x x is a square matrix of real numbers.  While this function is more
+#' general, the initail intention was for this to be a utility matrix or the
+#' mixed trophic impacts matrix.
+#' @return \item{sign}{A sign matrix for matrix x.} \item{relations}{A matrix
+#' of the pairwise signed relationships in x.} \item{rs.tab}{Table summarizing
+#' the pairwise relationships and identifying their ecological label.}
+#' \item{relationship.counts}{A count of the different kinds of pairwise
+#' relationships found in matrix x.}
+#' @note This function is called by relationalChange, and was created to
+#' generate more informative output from enaUtility and enaMTI.
+#' @author Stuart R. Borrett
+#' @seealso \code{\link{relationalChange}}
+#' @examples
+#' 
+#' 
+#' 
+#' data(oyster)
+#' U <- enaUtility(oyster)$U
+#' s <- signs(U)
+#' 
+#' 
+#' 
+signs <- function(x="matrix"){
+    vnames <- rownames(x)   # get row names
+    d <- dim(x)             # find matrix dimensions
+    s <- matrix(rep(0,prod(d)), ncol = d[2])  # initialize sign matrix
+    r <- s                                    # initialize relationship matrix
+    r.sparse <- list()                        # initialize r.sparse
+    cnt1 <- 1                                 # iniitlize counter
+
+    # dictionary of ecological relationship types
+    erd <- matrix(c( "-", "+", "(-,+)",  "predation",
+                    "-", "0", "(-,0)", "amensalism",
+                    "-", "-", "(-,-)",  "competition",
+                    "0", "+", "(0,+)", "anabolism",
+                    "0", "0", "(0,0)", "neutralism",
+                    "0", "-", "(0,-)", "catabolism",
+                    "+", "+", "(+,+)", "mutualism",
+                    "+", "0", "(+,0)", "commensalism",
+                    "+", "-", "(+,-)", "altruism"),
+                  ncol  = 4, byrow = TRUE)
+    colnames(erd) <- c("source","sink","pair","name")
+
+    # FIND matrix element sign {+, 0, -}
+    positive <- which(x > 0, arr.ind = TRUE)  # which are positive
+    negative <- which(x < 0, arr.ind = TRUE)  # which are negative
+
+    # build the sign matrix
+    s[positive] <- "+"
+    s[negative] <- "-"
+    rownames(s) <- colnames(s) <- vnames
+
+    # combine signs to determine pairwise relationships
+    for(i in 1:d[1]){
+        for(j in 1:d[2]){
+            if(j>=i){
+                r[i,j] <- paste("(",s[j,i],",",s[i,j],")",sep="")  # pariwise realtionships - matrix
+                tmp.relation <- erd[which(erd[,3] == r[i,j]),4]
+                r.sparse[[cnt1]] <- c(vnames[i],vnames[j],r[i,j],tmp.relation)  # pariwise realtionships - table
+                cnt1 <- cnt1 + 1  # increment counter
+            }
+        }
+    }
+    colnames(r) <- vnames; rownames(r) <- vnames
+    r.sparse <- do.call(rbind,r.sparse)  # combine results for r.sparse
+    colnames(r.sparse) <- c("From","To","Relationship","R.name")  # rename columns
+
+    relationship.counts <- table(r.sparse[,3])
+
+    return(list("sign"=s,
+                "relations"=r,
+                "rs.tab"=as.data.frame(r.sparse,stringsAsFactors=FALSE),
+                'relationship.counts' = relationship.counts)
+           )
+}
diff --git a/R/ssCheck.R b/R/ssCheck.R
index 8808f29..5bccad4 100644
--- a/R/ssCheck.R
+++ b/R/ssCheck.R
@@ -8,6 +8,47 @@
 #' M. Lau | July 2011
 #' ------------------------------------
 
+
+
+
+
+
+
+#' ssCheck --- checks if the given network is out of balance by a given
+#' tolerance threshold INPUT = network object OUTPUT = logical indicating
+#' violation of tolerance NOTE: used in the balancing process M. Lau | July
+#' 2011 ------------------------------------ ssCheck --- checks if the given
+#' network is out of balance by a given tolerance threshold INPUT = network
+#' object OUTPUT = logical indicating violation of tolerance NOTE: used in the
+#' balancing process M. Lau | July 2011 ------------------------------------
+#' Checks the Balance of Inputs and Outputs from a Network
+#' 
+#' This function supports the balancing process by checking if the inputs and
+#' outputs of a given network model are within acceptable limits.
+#' 
+#' 
+#' @param x A network object.
+#' @param tol The threshold for balance in percent difference between input and
+#' outputs.
+#' @param more LOGICAL: should more detailed results be returned?
+#' @param zero.na LOGICAL: should NA values be changed to zeros?
+#' @return Returns a logical value stating if the model is within acceptable
+#' limits of balance (TRUE) or if it is not (FALSE).
+#' @author Matthew K. Lau Stuart R. Borrett
+#' @seealso \code{\link{balance}}
+#' @references Fath, B.D. and S.R. Borrett. 2006. A MATLAB function for network
+#' environ analysis. Environmental Modelling & Software 21:375-405.
+#' @examples
+#' 
+#' 
+#' 
+#' data(troModels)
+#' ssCheck(troModels[[2]])
+#' ssCheck(troModels[[6]])
+#' 
+#' 
+#' 
+#' @export ssCheck
 ssCheck <- function(x,tol=5,more=FALSE,zero.na=TRUE){
                                         #Check for network class object
   if (class(x) != 'network'){warning('x is not a network class object')}
diff --git a/R/structure.statistics.R b/R/structure.statistics.R
index 2fc5030..8ed3238 100644
--- a/R/structure.statistics.R
+++ b/R/structure.statistics.R
@@ -4,6 +4,38 @@
 #' S. Borrett | July 2011
 #' ------------------------------------
 
+
+
+
+
+
+
+#' structure.statistics --- calculates structural statistics INPUT = an
+#' adjacency matrix OUTPUT = list of structural statistics S. Borrett | July
+#' 2011 ------------------------------------ structure.statistics ---
+#' calculates structural statistics INPUT = an adjacency matrix OUTPUT = list
+#' of structural statistics S. Borrett | July 2011
+#' ------------------------------------ Structural Statistics of an Ecological
+#' Network
+#' 
+#' This function returns several network statistics that describe a network.
+#' 
+#' 
+#' @param A An adjacency matrix.
+#' @return \item{n}{Number of nodes in A.} \item{L}{Number of direct
+#' connections in A.} \item{C}{Connectivity of A.} \item{LD}{Link density.}
+#' \item{lam1A}{First dominant eigenvalue of A.} \item{mlam1A}{Multiplicity of
+#' the dominant eigenvalue.} \item{lam2A}{Magnitude of the second largest
+#' eigenvalue.} \item{rho}{Damping ratio (see Caswell 2001).} \item{R}{Distance
+#' of lam1A from the bulk of the eigen spectrum.} \item{d}{Difference between
+#' the dominant eigenvalue and the link density.} \item{no.scc}{Number of
+#' strongly connected components.} \item{no.scc.big}{Number of strongly
+#' connected components greater than 1.} \item{pscc}{Precent of nodes
+#' participating in a strongly connected component.}
+#' @author Matthew K. Lau Stuart R. Borrett
+#' @seealso \code{\link{enaStructure}},\code{\link{scc}}
+#' @references Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network
+#' Environ Analysis.  Environ. Model. Softw. 21, 375-405.
 structure.statistics <- function(A='adjacency matrix'){
   if (class(A) != 'matrix'){warning('A is not a matrix class object')}
                                         # 
diff --git a/R/unpack.R b/R/unpack.R
index 3cdf449..ae912f8 100644
--- a/R/unpack.R
+++ b/R/unpack.R
@@ -5,6 +5,44 @@
 #' S. Borrett and M. Lau | July 2011
 #' ------------------------------------
 
+
+
+
+
+
+
+#' unpack --- extracts network object into a list INPUT = network object OUTPUT
+#' = list of network model components S. Borrett and M. Lau | July 2011
+#' ------------------------------------ unpack --- extracts network object into
+#' a list INPUT = network object OUTPUT = list of network model components S.
+#' Borrett and M. Lau | July 2011 ------------------------------------
+#' "Unpacks" the Network Object into Separate Objects
+#' 
+#' Separates the components of a network object into separate components within
+#' a list. This includes inputs, exports, respirations, outputs (exports +
+#' respirations), storage, and internal flows.
+#' 
+#' 
+#' @param x A network object.  This includes all weighted flows into and out of
+#' each node.
+#' @return \item{F}{matrix of flows from each node to each node oreinted row to
+#' column.} \item{z}{Node boundary inputs.} \item{r}{Node boundary loss from
+#' respiration.} \item{e}{Node boundary loss due to exportation} \item{y}{Node
+#' boundary loss; summation of r and e} \item{X}{Node storage or biomass}
+#' \item{living}{Logical vector indicating whether each node is living or not}
+#' @note Flows are oriented from row to column.
+#' @author Matthew K. Lau Stuart R. Borrett
+#' @seealso \code{\link{pack},\link{read.scor}}
+#' @examples
+#' 
+#' 
+#' 
+#' data(troModels)
+#' unpack(troModels[[6]])
+#' 
+#' 
+#' 
+#' @export unpack
 unpack <- function(x='network object'){
   flow <- as.matrix(x, attrname = 'flow')
   input <- x%v%'input'
@@ -15,5 +53,5 @@ unpack <- function(x='network object'){
   output <- x%v%'output'   #respiration + export
   storage <- x%v%'storage'
   living <- x%v%'living'
-  return(list("F"=flow,"z"=input,"r"=respiration,"e"=export,"y"=output,"X"=storage,'Living'=living))
+  return(list("F"=flow,"z"=input,"r"=respiration,"e"=export,"y"=output,"X"=storage,'living'=living))
 }
diff --git a/R/write.EcoNet.R b/R/write.EcoNet.R
index 49e84e1..f183b71 100644
--- a/R/write.EcoNet.R
+++ b/R/write.EcoNet.R
@@ -2,41 +2,59 @@
 ###http://eco.engr.uga.edu/DOC/econet2.html
 ###MKLau 17nov2014
 
-write.EcoNet <- function(x='model',file='file path',mn='ena_model'){
 
-    x <- unpack(x)
 
+
+
+
+
+#' Write enaR models to an EcoNet formatted file.
+#' 
+#' Creates an EcoNet model from an enaR network object that can be used with
+#' the online interface for EcoNet.
+#' 
+#' 
+#' @param x Network object.
+#' @param file The file name or path. If a simple file name is given, this
+#' function uses the current working directory by default.
+#' @param mn The model name that EcoNet will use. The DEFAULT is 'ena_model'.
+#' @param zero.flows LOGICAL: should zero flow values be written?
+#' @return An EcoNet formatted text file is created from the model, which can
+#' be input at http://eco.engr.uga.edu.
+#' @author Matthew K. Lau
+#' @references About EcoNet (http://eco.engr.uga.edu/DOC/econet1.html)
+#' 
+#' Kazanci, C. 2009. Handbook of Ecological Modelling and Informatics, by WIT
+#' Press.
+#' @export write.EcoNet
+write.EcoNet <- function(x='model',file='file path',mn='ena_model',zero.flows=FALSE){
+    x <- unpack(x)
 ###node names
     nn <- rownames(x$F)
     nn <- strsplit(nn,split='')
     nn <- lapply(nn,function(x) x[x%in%letters|x%in%LETTERS|x%in%(1:9)])
     nn <- unlist(lapply(nn,paste,collapse=''))
     rownames(x$F) <- colnames(x$F) <- nn
-
 ###Write model name
     write.table(paste('###',mn),file=file,col.names=FALSE,row.names=FALSE,quote=FALSE)
-
 ###initial conditions
     write.table(paste('###','initial conditions'),file=file,col.names=FALSE,row.names=FALSE,quote=FALSE,append=TRUE)
     write.table(paste(rownames(x$F),x$X,sep='='),file=file,col.names=FALSE,row.names=FALSE,quote=FALSE,append=TRUE)
-
-
 ###write inputs
     write.table(paste('###','inputs'),file=file,col.names=FALSE,row.names=FALSE,quote=FALSE,append=TRUE)
     write.table(paste('*',' -> ',rownames(x$F),' c=',x$z,sep=''),file=file,col.names=FALSE,row.names=FALSE,quote=FALSE,append=TRUE)
-
 ###write flows
     write.table(paste('###','flows'),file=file,col.names=FALSE,row.names=FALSE,quote=FALSE,append=TRUE)
     for (i in 1:nrow(x$F)){
         for (j in 1:nrow(x$F)){
-            write.table(paste(rownames(x$F)[i],' -> ',colnames(x$F)[j],' c=',x$F[i,j],sep=''),
-                        file=file,col.names=FALSE,row.names=FALSE,
-                        quote=FALSE,append=TRUE)
+            if (x$F[i,j] == 0){}else{
+                write.table(paste(rownames(x$F)[i],' -> ',colnames(x$F)[j],' c=',x$F[i,j],sep=''),
+                            file=file,col.names=FALSE,row.names=FALSE,
+                            quote=FALSE,append=TRUE)
+            }
         }
     }
-
 ###write outputs
     write.table(paste('###','outputs'),file=file,col.names=FALSE,row.names=FALSE,quote=FALSE,append=TRUE)
     write.table(paste(rownames(x$F),' -> ','*',' c=',(x$r+x$e),sep=''),file=file,col.names=FALSE,row.names=FALSE,quote=FALSE,append=TRUE)
-
 }
diff --git a/R/write.nea.R b/R/write.nea.R
index 428f729..c6e9257 100644
--- a/R/write.nea.R
+++ b/R/write.nea.R
@@ -5,6 +5,36 @@
 #' Borrett | July 15, 2013
 #' ----------------------------------------
 
+
+
+
+
+
+
+#' ' write.nea.R INPUT = enaR network data object Ouput = CSV formatted file
+#' with data arranged as expected input for NEA.m
+#' 
+#' Borrett | July 15, 2013 ---------------------------------------- '
+#' write.nea.R INPUT = enaR network data object Ouput = CSV formatted file with
+#' data arranged as expected input for NEA.m
+#' 
+#' Borrett | July 15, 2013 ---------------------------------------- Write a
+#' Network Object to File Using the NEA Data Format
+#' 
+#' This function writes a network object to a NEA formatted data file (Fath and
+#' Borrett 2006).
+#' 
+#' @param x Network object.
+#' @param file.name The file name or path. If a simple file name is given, this
+#' function uses the current working directory by default.
+#' @param sep The separation character used to delimit data values.
+#' @return Writes a network object to a NEA formatted file and returns the
+#' output composite matrix.
+#' @author Stuart R. Borrett
+#' @seealso \code{\link{read.nea}}
+#' @references Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network
+#' Environ Analysis.  Environ. Model. Softw. 21, 375-405.
+#' @export write.nea
 write.nea <- function(x, file.name,sep=','){
                                         # Check for network class
   if (class(x) != 'network'){warning('x is not a network class object')}
diff --git a/man/EcoNetWeb.Rd b/man/EcoNetWeb.Rd
new file mode 100644
index 0000000..58712a4
--- /dev/null
+++ b/man/EcoNetWeb.Rd
@@ -0,0 +1,35 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/EcoNetWeb.R
+\name{EcoNetWeb}
+\alias{EcoNetWeb}
+\title{Access example EcoNet models from the EcoNet website.}
+\usage{
+EcoNetWeb(x = "http://eco.engr.uga.edu/Examples/examples.html",
+  model.name = "prompt")
+}
+\arguments{
+\item{x}{The URL for the EcoNet examples.}
+
+\item{model.name}{The model to be accessed. If 'prompt' the user will be
+asked for the model they wish to use. Can also be a number for the model or
+the name of the model.}
+}
+\value{
+Returns the model formatted as a network object.
+}
+\description{
+This function allows the user to access models that are presented on the
+website for EcoNet, the web-based interface for conducting ENA
+(http://eco.engr.uga.edu/), by Caner Kazanci at the University of Georgia.
+}
+\author{
+Matthew K. Lau
+}
+\references{
+Kazanci, C., 2007. EcoNet: A new software for ecological
+modeling, simulation and network analysis, Ecol. Model., Vol 208/1 pp 3-8.
+}
+\seealso{
+\code{\link{read.EcoNet}}
+}
+
diff --git a/man/ShannonDiversity.Rd b/man/ShannonDiversity.Rd
new file mode 100644
index 0000000..a9d380a
--- /dev/null
+++ b/man/ShannonDiversity.Rd
@@ -0,0 +1,80 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/ShannonDiversity.R
+\name{ShannonDiversity}
+\alias{ShannonDiversity}
+\title{Shannon Diversity Metrics
+These are based on entropy and build Shannon and Weaver 1949}
+\usage{
+ShannonDiversity(x)
+}
+\arguments{
+\item{x}{a 1 x n vector.}
+}
+\value{
+\item{H}{Shannon entropy-based metric of diversity.  This captures
+the effects of both richnes (the length of the vector, n) and the evenennes
+of the distribution.} \item{Hmax}{The maximum possible value of H given a
+vector of the length n provided.} \item{Hr}{Relative evenness Hr = H/Hmax}
+\item{Hcentral}{The centralization or concentration of the values among the
+n elements} \item{n}{Number of elements in the vector.}
+\item{effective.n}{effective number of elements in the vector, given the
+distribution of the relative weights.}
+}
+\description{
+Borrett | November 29, 2016
+}
+\details{
+INPUT = Vector
+Output = set of network statistics to charcterize the diversity in the vector
+================================================================================
+Shannon Diversity Metrics These are based on entropy and build Shannon and
+Weaver 1949
+
+Borrett | November 29, 2016
+
+INPUT = Vector Output = set of network statistics to charcterize the
+diversity in the vector
+================================================================================
+Shannon Diversity Metrics These are based on entropy and build Shannon and
+Weaver 1949
+
+Borrett | November 29, 2016
+
+INPUT = Vector Output = set of network statistics to charcterize the
+diversity in the vector
+================================================================================
+Shannon information entropy
+
+Calculates a number of metrics based on the Shannon information entropy
+measure of diversity in a vector, x.
+}
+\note{
+The formulation for Shannon Diversity uses a natural logarithm.  As
+the natural logarithm of zero is undefined, the input vector cannot contain
+zeros.  Analytically, there are two approaches to dealing with this issue if
+your vector contains zeros.  First, you can apply the analysis to only the
+non-zero elements.  Second, you can add a tiny amount to all of the elements
+such that the zero elements are now very small numbers, relative the
+original vector values.
+}
+\examples{
+
+
+
+data(oyster)
+
+#' throughflow diversity
+T <- enaFlow(oyster)$T
+ShannonDiversity(T)
+
+#' storage (biomass) biodiversity
+X <- oyster \%v\% "storage"
+ShannonDiversity(X)
+
+
+
+}
+\author{
+Stuart R. Borrett
+}
+
diff --git a/man/TES.Rd b/man/TES.Rd
index 8e3e3c2..84e2a96 100644
--- a/man/TES.Rd
+++ b/man/TES.Rd
@@ -1,51 +1,64 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/TES.R
 \name{TES}
 \alias{TES}
-\title{
-  Calculate the Total Environ Storage
+\title{TES.R  --- TOTAL ENVIRON STORAGE
+INPUT = network model
+OUTPUT = total environ throughput - unit and scaled}
+\usage{
+TES(x, balance.override = FALSE)
+}
+\arguments{
+\item{x}{A network object.}
+
+\item{balance.override}{LOGICAL: should balancing being ignored.}
+}
+\value{
+\item{realized.input}{input oriented, realized storage in each
+environ.} \item{realized.output}{output oriented, realized storage in each
+environ.} \item{unit.input }{input oriented, unit storage in each environ.}
+\item{unit.output}{input oriented, unit storage in each environ.}
 }
 \description{
+Borrett | July 7, 2012
+---------------------------------------------------
+TES.R --- TOTAL ENVIRON STORAGE INPUT = network model OUTPUT = total environ
+throughput - unit and scaled
+}
+\details{
+Borrett | July 7, 2012 ---------------------------------------------------
+TES.R --- TOTAL ENVIRON STORAGE INPUT = network model OUTPUT = total environ
+throughput - unit and scaled
+
+Borrett | July 7, 2012 ---------------------------------------------------
+Calculate the Total Environ Storage
+
 Calculates the total storage in each n input and output environs.  This
 function calculates the storage for both the unit input (output) and the
 realized input (output) environs.  Realized uses the observed inputs
-(outputs) rather than an assumed unit input (output) to each node.   
-}
-\usage{
-TES(x,balance.override=FALSE)
-}
-\arguments{
-  \item{x}{
-    A network object.
-  }
-  \item{balance.override}{
-    LOGICAL: should balancing being ignored.
-  }
+(outputs) rather than an assumed unit input (output) to each node.
 }
+\examples{
+
+
+
+data(troModels)
+tes <- TES(troModels[[6]])
+tes
+
+
 
-\value{
-  \item{realized.input}{input oriented, realized storage in each environ.}
-  \item{realized.output}{output oriented, realized storage in each environ.}
-  \item{unit.input }{input oriented, unit storage in each environ.}
-  \item{unit.output}{input oriented, unit storage in each environ.}
+}
+\author{
+Matthew K. Lau Stuart R. Borrett David E. Hines
 }
 \references{
 Matis, J.H. and Patten, B.C. 1981.  Environ analysis of linear
 compartmenal systems: the static, time invariant case.  Bulletin of the
 International Statistical Institute. 48, 527--565.
 }
-\author{
-Matthew K. Lau (mkl48@nau.edu)
-Stuart R. Borrett (borretts@uncw.edu)
-David E. Hines (deh9951@uncw.edu)
-}
-
-%% ~Make other sections like Warning with \section{Warning }{....} ~
-
 \seealso{
 %% ~~objects to See Also as \code{\link{help}}, ~~~
 \code{\link{enaStorage},\link{enaEnviron}}
 }
-\examples{
-data(troModels)
-tes <- TES(troModels[[6]])
-tes
-}
+
diff --git a/man/TET.Rd b/man/TET.Rd
index 974d6fe..65124f4 100644
--- a/man/TET.Rd
+++ b/man/TET.Rd
@@ -1,59 +1,75 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/TET.R
 \name{TET}
 \alias{TET}
-\title{
-  Calculates the Total Environ Throughflow for a Ecosystem Network Model
-}
-\description{
-Determines the total environ throughflow (TET) for each of the 2 x n environs
-of the selected network model. It returns both the TET calculated from a
-unit input (output) vector and from the observed or realized input
-(output) vector. 
-}
+\title{TET.R  --- TOTAL ENVIRON THROUGHFLOW
+INPUT = network model
+OUTPUT = total environ throughput - unit and scaled}
 \usage{
 TET(x, balance.override = FALSE)
 }
 \arguments{
-  \item{x}{
-    A network object.
-  }
-  \item{balance.override}{
-    Logical: should the function work if the model is not at steady-state?
-  }
-}
+\item{x}{A network object.}
 
-\value{
-  \item{realized.input}{vector of the n realized total
-    environ throughflows for the n input oriented environs.}
-  \item{realzied.output}{vector of the n realized total
-    environ throughflows for the n ouptut oriented environs.}
-  \item{unit.input}{vector of the n unit total
-    environ throughflows for the n input oriented environs.}
-  \item{unit.output}{vector of the n unit total
-    environ throughflows for the n output oriented environs.}
+\item{balance.override}{Logical: should the function work if the model is
+not at steady-state?}
 }
-\references{
-  Gattie, D.K., Schramski, J.R., Borrett, S.R., Patten, B.C., Bata, S.A.,
-  and Whipple, S.J. 2006. Indirect effects and distributed control in
-  ecosystems: Network environ analysis of a seven-compartment model of
-  nitrogen flow in the Neuse River Estuary, USA---Steady-state
-  analysis. Ecol. Model. 194:162--177.
-
-  Whipple, S.J., Borrett, S.R., Patten, B.C., Gattie, D.K., Schramski,
-  J.R., and Bata, S.A. 2007.  Indirect effects and distributed control in
-  ecosystems: Comparative network environ analysis of a seven-compartment
-  model of nitrogen flow in the Neuse River Estuary, USA---Time series
-  analysis. Ecol. Model. 206: 1--17.
+\value{
+\item{realized.input}{vector of the n realized total environ
+throughflows for the n input oriented environs.}
+\item{realzied.output}{vector of the n realized total environ throughflows
+for the n ouptut oriented environs.} \item{unit.input}{vector of the n unit
+total environ throughflows for the n input oriented environs.}
+\item{unit.output}{vector of the n unit total environ throughflows for the n
+output oriented environs.}
 }
-\author{
-Matthew K. Lau (mkl48@nau.edu)
-Stuart R. Borrett (borretts@uncw.edu)
+\description{
+Borrett | July 7, 2012
+---------------------------------------------------
+TET.R --- TOTAL ENVIRON THROUGHFLOW INPUT = network model OUTPUT = total
+environ throughput - unit and scaled
 }
+\details{
+Borrett | July 7, 2012 ---------------------------------------------------
+TET.R --- TOTAL ENVIRON THROUGHFLOW INPUT = network model OUTPUT = total
+environ throughput - unit and scaled
 
-\seealso{
-  \code{\link{enaEnviron}}
+Borrett | July 7, 2012 ---------------------------------------------------
+Calculates the Total Environ Throughflow for a Ecosystem Network Model
+
+Determines the total environ throughflow (TET) for each of the 2 x n
+environs of the selected network model. It returns both the TET calculated
+from a unit input (output) vector and from the observed or realized input
+(output) vector.
 }
 \examples{
+
+
+
 data(troModels)
 tet <- TET(troModels[[6]])
 tet
+
+
+
+}
+\author{
+Matthew K. Lau Stuart R. Borrett
 }
+\references{
+Gattie, D.K., Schramski, J.R., Borrett, S.R., Patten, B.C.,
+Bata, S.A., and Whipple, S.J. 2006. Indirect effects and distributed control
+in ecosystems: Network environ analysis of a seven-compartment model of
+nitrogen flow in the Neuse River Estuary, USA---Steady-state analysis. Ecol.
+Model. 194:162--177.
+
+Whipple, S.J., Borrett, S.R., Patten, B.C., Gattie, D.K., Schramski, J.R.,
+and Bata, S.A. 2007.  Indirect effects and distributed control in
+ecosystems: Comparative network environ analysis of a seven-compartment
+model of nitrogen flow in the Neuse River Estuary, USA---Time series
+analysis. Ecol. Model. 206: 1--17.
+}
+\seealso{
+\code{\link{enaEnviron}}
+}
+
diff --git a/man/as.bipartite.Rd b/man/as.bipartite.Rd
index c5fcd60..6b1e9f4 100644
--- a/man/as.bipartite.Rd
+++ b/man/as.bipartite.Rd
@@ -1,43 +1,55 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/as.bipartite.R
 \name{as.bipartite}
 \alias{as.bipartite}
-\title{
-    Create a bipartite network.
-}
-\description{
-    Converts a network object (unipartite) to a 
-    two-mode (bipartite) network representation.
-}
+\title{as.bipartite  --- convert a network object to a matrix for 
+analysis with the bipartite package
+INPUT = network model
+OUTPUT = matrix representation
+M. Lau July 2015
+---------------------------------------------------
+as.bipartite --- convert a network object to a matrix for analysis with the
+bipartite package INPUT = network model OUTPUT = matrix representation M.
+Lau July 2015 ---------------------------------------------------
+as.bipartite --- convert a network object to a matrix for analysis with the
+bipartite package INPUT = network model OUTPUT = matrix representation M.
+Lau July 2015 --------------------------------------------------- Create a
+bipartite network.}
 \usage{
 as.bipartite(x, y)
 }
 \arguments{
-  \item{x}{
-    A network object.
-  }
-  \item{y}{
-      A vector of membership values.
-  }
+\item{x}{A network object.}
 
-}
-\details{
-    Bipartite network approaches are often used for analyzing
-    the structure of interactions among species in communities.
-    Although typically ecosystem networks are handled using a unipartite
-    representation, anlayzing them from a bipartite perspective may
-    be informative. This function provides an easy means for converting to
-    a bipartite representation as long as there is a natural division
-    to categorize species into distinct modes.
+\item{y}{A vector of membership values.}
 }
 \value{
-    Returns a matrix with the species of one mode arrayed
-    in rows and the other in columns.
+Returns a matrix with the species of one mode arrayed in rows and
+the other in columns.
 }
-
-\author{
-Matthew K. Lau (mkl48@nau.edu)
+\description{
+Converts a network object (unipartite) to a two-mode (bipartite) network
+representation.
+}
+\details{
+Bipartite network approaches are often used for analyzing the structure of
+interactions among species in communities.  Although typically ecosystem
+networks are handled using a unipartite representation, anlayzing them from
+a bipartite perspective may be informative. This function provides an easy
+means for converting to a bipartite representation as long as there is a
+natural division to categorize species into distinct modes.
 }
-
 \examples{
+
+
+
 data(oyster)
-as.bipartite(oyster,gl(2,3))
+as.bipartite(oyster, gl(2, 3))
+
+
+
 }
+\author{
+Matthew K. Lau
+}
+
diff --git a/man/as.extended.Rd b/man/as.extended.Rd
index 45d2359..dd47d37 100644
--- a/man/as.extended.Rd
+++ b/man/as.extended.Rd
@@ -1,42 +1,69 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/as.extended.R
 \name{as.extended}
 \alias{as.extended}
-\title{
-  Create an Extended Format Matrix
-}
-\description{
-  Converts a network object to the extended format of Allesina and
-  Bondavalli (2003).
-}
+\title{as.extended  --- convert a network object to extended format
+in Allesina and Bondavalli 2003
+INPUT = network model
+OUTPUT = the same model in extended format with inputs and
+exports/respiration in the same matrix
+REFERENCE: Allesina, S., Bondavalli, C., 2003.
+Steady state of ecosystem flow networks: a comparison
+between balancing procedures. Ecological Modelling 165(2-3):
+231-239.
+M. Lau July 2011
+---------------------------------------------------
+as.extended --- convert a network object to extended format in Allesina and
+Bondavalli 2003 INPUT = network model OUTPUT = the same model in extended
+format with inputs and exports/respiration in the same matrix REFERENCE:
+Allesina, S., Bondavalli, C., 2003. Steady state of ecosystem flow networks:
+a comparison between balancing procedures. Ecological Modelling 165(2-3):
+231-239. M. Lau July 2011
+--------------------------------------------------- as.extended --- convert
+a network object to extended format in Allesina and Bondavalli 2003 INPUT =
+network model OUTPUT = the same model in extended format with inputs and
+exports/respiration in the same matrix REFERENCE: Allesina, S., Bondavalli,
+C., 2003. Steady state of ecosystem flow networks: a comparison between
+balancing procedures. Ecological Modelling 165(2-3): 231-239. M. Lau July
+2011 --------------------------------------------------- Create an Extended
+Format Matrix}
 \usage{
 as.extended(x, zero.na = TRUE)
 }
 \arguments{
-  \item{x}{
-    A network object.
-  }
-  \item{zero.na}{
-    Logical: should NA's be replaced with zeros?
-  }
+\item{x}{A network object.}
 
-}
-\details{
-  Used in the balance function. 
+\item{zero.na}{Logical: should NA's be replaced with zeros?}
 }
 \value{
 Returns an extended format matrix.
 }
-\references{
-Allesina, S., Bondavalli, C., 2003. Steady state of ecosystem flow
-networks: a comparison between balancing procedures.Ecological Modelling 165(2-3):231-239.
-}
-\author{
-Matthew K. Lau (mkl48@nau.edu)
-Stuart R. Borrett (borretts@uncw.edu)
+\description{
+Converts a network object to the extended format of Allesina and Bondavalli
+(2003).
 }
-\seealso{
-  \code{\link{balance}}
+\details{
+Used in the balance function.
 }
 \examples{
+
+
+
 data(troModels)
 as.extended(troModels[[6]])
+
+
+
+}
+\author{
+Matthew K. Lau Stuart R. Borrett
+}
+\references{
+Allesina, S., Bondavalli, C., 2003. Steady state of ecosystem
+flow networks: a comparison between balancing procedures.Ecological
+Modelling 165(2-3):231-239.
 }
+\seealso{
+\code{\link{balance}}
+}
+
diff --git a/man/bal.Rd b/man/bal.Rd
index 153bbb1..fd036ba 100644
--- a/man/bal.Rd
+++ b/man/bal.Rd
@@ -1,36 +1,45 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/bal.R
 \name{bal}
 \alias{bal}
-\title{
-  Subfunction for Balancing by Either Inputs or Outputs
-}
-\description{
-  Dependency for the \code{balance} function.
-}
+\title{bal --- balances a flow model
+INPUT = network model in extended format
+OUTPUT = balanced model in extended format
+NOTE: this is the work horse for balance.R
+Original: M. Lau | July 2011
+Re-written: M. Lau | 17Oct2013 
+---------------------------------------------------
+bal --- balances a flow model INPUT = network model in extended format
+OUTPUT = balanced model in extended format NOTE: this is the work horse for
+balance.R Original: M. Lau | July 2011 Re-written: M. Lau | 17Oct2013
+--------------------------------------------------- bal --- balances a flow
+model INPUT = network model in extended format OUTPUT = balanced model in
+extended format NOTE: this is the work horse for balance.R Original: M. Lau
+| July 2011 Re-written: M. Lau | 17Oct2013
+--------------------------------------------------- Subfunction for
+Balancing by Either Inputs or Outputs}
 \usage{
 bal(T.star = "matrix", method = c("input", "output"))
 }
 \arguments{
-  \item{T.star}{
-    Extended, unbalanced matrix.
-  }
-  \item{method}{
-    Balance by inputs or outputs.
-  }
-}
+\item{T.star}{Extended, unbalanced matrix.}
 
+\item{method}{Balance by inputs or outputs.}
+}
 \value{
-  Returns an extended matrix for balancing by inputs or outputs.
+Returns an extended matrix for balancing by inputs or outputs.
+}
+\description{
+Dependency for the \code{balance} function.
+}
+\author{
+Matthew K. Lau Stuart R. Borrett
 }
 \references{
 Fath, B.D. and S.R. Borrett. 2006. A MATLAB function for network
 environ analysis. Environmental Modelling & Software 21:375-405.
 }
-\author{
-Matthew K. Lau (mkl48@nau.edu)
-Stuart R. Borrett (borretts@uncw.edu)
-}
-
 \seealso{
-  \code{\link{balance}}
+\code{\link{balance}}
 }
 
diff --git a/man/balance.Rd b/man/balance.Rd
index 1591ef3..6006300 100644
--- a/man/balance.Rd
+++ b/man/balance.Rd
@@ -1,46 +1,46 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/balance.R
 \name{balance}
 \alias{balance}
-\title{
-  Balance Flow Network Models
-}
-\description{
-  Applies the methods of Allesina and Bondavalli (2003) for balancing flow
-  network models.
-}
+\title{Balance Flow Network Models}
 \usage{
-balance(x,method=c('AVG2','AVG','IO','OI','I','O'),tol=5)
+balance(x, method = c("AVG2", "AVG", "IO", "OI", "I", "O"), tol = 5)
 }
 \arguments{
-  \item{x}{
-    A network object.
-  }
-  \item{method}{
-    Methods for model balancing, see Allesina and Bondavalli (2003).
-  }
-  \item{tol}{
-    Percent error tolerance used in the steady state check prior to
-    balancing.
-  }
-}
+\item{x}{A network object.}
 
+\item{method}{Methods for model balancing, see Allesina and Bondavalli
+(2003).}
+
+\item{tol}{Percent error tolerance used in the steady state check prior to
+balancing.}
+}
 \value{
-  Returns a network object with a balanced flow network model.
+Returns a network object with a balanced flow network model.
 }
-\references{
-Allesina, S., Bondavalli, C., 2003. Steady state of ecosystem flow
-networks: a comparison between balancing procedures. Ecological
-Modelling 165(2-3):231-239.
+\description{
+Applies the methods of Allesina and Bondavalli (2003) for balancing flow
+network models.
 }
-\author{
-Matthew K. Lau (mkl48@nau.edu)
-Stuart R. Borrett (borretts@uncw.edu)
+\examples{
+
 
-}
 
-\seealso{
-  \code{\link{bal}}
-}
-\examples{
 data(troModels)
 balance(troModels[[6]])
+
+
+
+}
+\author{
+Matthew K. Lau Stuart R. Borrett
 }
+\references{
+Allesina, S., Bondavalli, C., 2003. Steady state of ecosystem
+flow networks: a comparison between balancing procedures. Ecological
+Modelling 165(2-3):231-239.
+}
+\seealso{
+\code{\link{bal}}
+}
+
diff --git a/man/bcratio.Rd b/man/bcratio.Rd
index c9a1fbc..3ce336b 100644
--- a/man/bcratio.Rd
+++ b/man/bcratio.Rd
@@ -1,32 +1,29 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/bcratio.R
 \name{bcratio}
 \alias{bcratio}
-\title{
-  Calculates the Ratio of Positive to Negative Elements in a Network
-}
-\description{
-  Dependent function for the enaUtility function.
-}
+\title{Calculates the Ratio of Positive to Negative Elements in a Network}
 \usage{
 bcratio(x = "matrix")
 }
 \arguments{
-  \item{x}{
-    A matrix of flow values.
-  }
+\item{x}{A matrix of flow values.}
 }
-
 \value{
-  Returns the ratio of positive to negative elements in the flow matrix.
+Returns the ratio of positive to negative elements in the flow
+matrix.
 }
-\references{
-  Fath, B.D. and S.R. Borrett. 2006. A MATLAB function for network
-  environ analysis. Environmental Modelling & Software 21:375-405.
+\description{
+Dependent function for the enaUtility function.
 }
 \author{
-  Stuart R. Borrett (borretts@uncw.edu)
+Stuart R. Borrett
+}
+\references{
+Fath, B.D. and S.R. Borrett. 2006. A MATLAB function for network
+environ analysis. Environmental Modelling & Software 21:375-405.
 }
-
 \seealso{
-  \code{\link{enaUtility}}
+\code{\link{enaUtility}}
 }
 
diff --git a/man/bgcModels.Rd b/man/bgcModels.Rd
index 6a7fec2..6d0c6b7 100644
--- a/man/bgcModels.Rd
+++ b/man/bgcModels.Rd
@@ -1,18 +1,15 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/enaR-package.R
+\docType{data}
 \name{bgcModels}
 \alias{bgcModels}
-\docType{data}
-\title{
-  Bigeochemical Cycling Models
-}
+\title{Bigeochemical Cycling Models}
 \description{
-  A set of 43 biogeochemical cycling models compiled by the SEE Lab at UNCW.
+A set of 43 biogeochemical cycling models compiled by the SEE Lab at UNCW.
 }
-
 \references{
-  Borrett, S. R., and M. K. Lau. In Prep. enaR: An R package for
-  Ecological Network Analysis. Ecological Modeling and Software.
+Borrett, S. R., and M. K. Lau. In Prep. enaR: An R package for
+Ecological Network Analysis. Ecological Modeling and Software.
 }
-
-\usage{data(bgcModels)}
-
 \keyword{datasets}
+
diff --git a/man/cycliv.Rd b/man/cycliv.Rd
index c3356ae..e21d076 100644
--- a/man/cycliv.Rd
+++ b/man/cycliv.Rd
@@ -1,60 +1,99 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/cycliv.R
 \name{cycliv}
 \alias{cycliv}
-\title{
-  Analysis of Feeding Cycles in a Network
-}
-\description{
-	
-  Performs the full cycle analysis on the living subset of the network based on the algorithm described in Ulanowicz (1983) and implemented in NETWRK 4.2b. It returns data.frames with details of the simple cycles and nexus, vectors of Cycle distributions and Normalized distribution and matrices of Residual Flows and Aggregated Cycles.
-  
-  
-}
+\title{## Cycle Analysis for Feeding Cycles
+## Singh P.  | July 2014
+## Algorithm Source : Ulanowicz 1991: A package for the Analysis of Ecosystem Flow Networks
+## ---------------------------------------------
+## Cycle Analysis for Feeding Cycles ## Singh P.  | July 2014 ## Algorithm
+Source : Ulanowicz 1991: A package for the Analysis of Ecosystem Flow
+Networks ## --------------------------------------------- ## Cycle Analysis
+for Feeding Cycles ## Singh P.  | July 2014 ## Algorithm Source : Ulanowicz
+1991: A package for the Analysis of Ecosystem Flow Networks ##
+--------------------------------------------- Analysis of Feeding Cycles in
+a Network}
 \usage{
 cycliv(x)
 }
 \arguments{
-  \item{x}{
-  	a network object.  This includes all weighted flows into and out of each node. It must also include the "Living" vector that identifies the living (TRUE/FALSE) status of each node. Also, non-living nodes must be placed at the end of the node vector. The function netOrder can be used to reorder the network for this.
-  }
+\item{x}{a network object.  This includes all weighted flows into and out of
+each node. It must also include the "Living" vector that identifies the
+living (TRUE/FALSE) status of each node. Also, non-living nodes must be
+placed at the end of the node vector. The function netOrder can be used to
+reorder the network for this.}
+}
+\value{
+\item{Table.cycle}{data.frame that presents the details of the
+simple cycles in the network. It contains "CYCLE" the cycle number, "NEXUS"
+the nexus number corresponding to the cycle, "NODES" the nodes constituting
+the cycle} \item{Table.nexus}{data.frame that presents the different nexuses
+characterized by their corresponding weak arcs. It contains "NEXUS" the
+nexus number, "CYCLES" the number of simple cycles present in that Nexus,
+"W.arc.From" the starting node of the corresponding weak arc, "W.arc.To" the
+ending node of the corresponding weak arc and "W.arc.Flow" the flow through
+that weak arc} \item{CycleDist}{vector of the Cycle Distribution that gives
+the flow which is cycling in loops of different sizes}
+\item{NormDist}{vector of the Normalized Distribution i.e. the Cycle
+Distribution normalized by the Total System Throughput for the network}
+\item{ResidualFlows}{matrix of the straight-through (acyclic) flows in the
+network} \item{AggregatedCycles}{matrix of the Aggregated Biogeochemical
+Cycles in the network} \item{ns}{vector of the full cycle analysis based
+network statistics. These include "NCYCS" the number of simple cycles
+identified in the network, "NNEX" the number of the disjoint cycles or
+number of Nexuses detected in the network and "CI" the cycling index of the
+network.}
+}
+\description{
+Performs the full cycle analysis on the living subset of the network based
+on the algorithm described in Ulanowicz (1983) and implemented in NETWRK
+4.2b. It returns data.frames with details of the simple cycles and nexus,
+vectors of Cycle distributions and Normalized distribution and matrices of
+Residual Flows and Aggregated Cycles.
+}
+\note{
+This function uses the same mechanism for analysis as used in the
+enaCycle function but is restricted to the living nodes only.
 
+Also, similar to the enaCycle function, if the number of cycles in a nexus
+is more than 50, the "Table.cycle" has a blank line after 50 cycles followed
+by the cycles for the next nexus.
+
+The analysis requires all the non-living nodes to be placed at the end in
+the network object.
 }
+\examples{
 
 
-\value{
-  \item{Table.cycle}{data.frame that presents the details of the simple cycles in the network. It contains "CYCLE" the cycle number, "NEXUS" the nexus number corresponding to the cycle, "NODES" the nodes constituting the cycle}
-  \item{Table.nexus}{data.frame that presents the different nexuses characterized by their corresponding weak arcs. It contains "NEXUS" the nexus number, "CYCLES" the number of simple cycles present in that Nexus, "W.arc.From" the starting node of the corresponding weak arc, "W.arc.To" the ending node of the corresponding weak arc and "W.arc.Flow" the flow through that weak arc}
-  \item{CycleDist}{vector of the Cycle Distribution that gives the flow which is cycling in loops of different sizes}
-  \item{NormDist}{vector of the Normalized Distribution i.e. the Cycle Distribution normalized by the Total System Throughput for the network}
-  \item{ResidualFlows}{matrix of the straight-through (acyclic) flows in the network}
-  \item{AggregatedCycles}{matrix of the Aggregated Biogeochemical Cycles in the network}
-  \item{ns}{vector of the full cycle analysis based network statistics. These include "NCYCS" the number of simple cycles identified in the network, "NNEX" the number of the disjoint cycles or number of Nexuses detected in the network and "CI" the cycling index of the network.} 
-  }
-\references{
-  %% ~put references to the literature/web site here ~
-  Johnson, D.B. 1975. Finding all the elementary circuits of a directed graph. SIAM J. Comput. 4:77--84 
 
-  Ulanowicz, R.E. 1983. Identifying the structure of cycling in ecosystems. Methematical Biosciences 65:219--237
+data(troModels)
+liv.cyc <- cycliv(troModels[[6]])
+attributes(liv.cyc)
+##-----------------------------------------------------------------
+##-----------------------------------------------------------------
+## 2 Repeats start. rep3,4
+## Backtrack to prev. level
 
-  Ulanowicz, R.E. and Kay, J.J. 1991. A package for the analysis of ecosystem flow networks. Environmental Software 6:131 -- 142.
-  
+##-----------------------------------------------------------------
+##-----------------------------------------------------------------
+## 2 Repeats start. rep3,4
+## Backtrack to prev. level
 }
 \author{
-  Pawandeep Singh (pawan.s@live.co.uk)
-  }
-\note{
-	This function uses the same mechanism for analysis as used in the enaCycle function but is restricted to the living nodes only.
-	
-	Also, similar to the enaCycle function, if the number of cycles in a nexus is more than 50, the "Table.cycle" has a blank line after 50 cycles followed by the cycles for the next nexus.
-	
-	The analysis requires all the non-living nodes to be placed at the end in the network object.
-	}
-	
-\seealso{
-  \code{\link{enaTroAgg}, \link{enaCycle}, \link{netOrder}}
+Pawandeep Singh
 }
+\references{
+%% ~put references to the literature/web site here ~ Johnson,
+D.B. 1975. Finding all the elementary circuits of a directed graph. SIAM J.
+Comput. 4:77--84
 
-\examples{
-data(troModels)
-liv.cyc <- cycliv(troModels[[6]])
-attributes(liv.cyc)
+Ulanowicz, R.E. 1983. Identifying the structure of cycling in ecosystems.
+Methematical Biosciences 65:219--237
+
+Ulanowicz, R.E. and Kay, J.J. 1991. A package for the analysis of ecosystem
+flow networks. Environmental Software 6:131 -- 142.
 }
+\seealso{
+\code{\link{enaTroAgg}, \link{enaCycle}, \link{netOrder}}
+}
+
diff --git a/man/eigenCentrality.Rd b/man/eigenCentrality.Rd
index 3dc7ea5..293de92 100644
--- a/man/eigenCentrality.Rd
+++ b/man/eigenCentrality.Rd
@@ -1,31 +1,25 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/eigenCentrality.R
 \name{eigenCentrality}
 \alias{eigenCentrality}
-\title{
-  Calculates the Eigen Centrality of a Network
-}
-\description{
-  Calculates the eigen centrality of a network.
-}
+\title{Calculates the Eigen Centrality of a Network}
 \usage{
-eigenCentrality(x='matrix')
+eigenCentrality(x = "matrix")
 }
 \arguments{
-  \item{x}{
-    A matrix defining a network graph.
-  }
+\item{x}{A matrix defining a network graph.}
 }
-
 \value{
-  Returns the eigen based centrality of the network.
+Returns the eigen based centrality of the network.
 }
-
-\references{
-  Bonacich, P., 1987. Power and centrality: a family of measures. American
-  Journal of Sociology 92: 1170-1182.
+\description{
+Calculates the eigen centrality of a network.
 }
-
 \author{
-Stuart R. Borrett (borretts@uncw.edu)
-Matthew K. Lau (mkl48@nau.edu)
+Stuart R. Borrett Matthew K. Lau
+}
+\references{
+Bonacich, P., 1987. Power and centrality: a family of measures.
+American Journal of Sociology 92: 1170-1182.
 }
 
diff --git a/man/enaAll.Rd b/man/enaAll.Rd
index b4eddb4..e35b14b 100644
--- a/man/enaAll.Rd
+++ b/man/enaAll.Rd
@@ -1,46 +1,54 @@
-\name{enaAll}
-\alias{enaAll}
-\title{
-  Conduct All Major ENA
-}
-\description{
-  Conducts all major ENA with default settings and returns the output as a
-  named list.
-}
-
-\usage{
-enaAll(x = "network object")
-}
-
-\arguments{
-\item{x}{A network object.}
-}
-
-
-\value{
-\item{ascendency}{enaAscendency}
-\item{control}{enaControl}
-\item{environ}{enaEnviron}
-\item{flow}{enaFlow}
-\item{mti}{enaMTI}
-\item{storage}{enaStorage}
-\item{structure}{enaStructure}
-\item{utility}{enaUtility with eigen.check=FALSE}
-}
-
-
-\author{
-  Matthew K. Lau (mkl48@nau.edu)
-  Stuart R. Borrett (borretts@uncw.edu)
-}
-
-
-\seealso{
-   \code{\link{enaAscendency},\link{enaControl},\link{enaEnviron},\link{enaFlow},\link{enaMTI},\link{enaStorage},\link{enaUtility}}
-}
-
-\examples{
-data(troModels)
-output = enaAll(troModels[[6]])
-names(output)
-}
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/enaAll.R
+\name{enaAll}
+\alias{enaAll}
+\title{enaAll --- Conduct all ecological network analyses
+INPUT = network object
+OUTPUT = list of analytical output}
+\usage{
+enaAll(x = "network object")
+}
+\arguments{
+\item{x}{A network object.}
+}
+\value{
+\item{ascendency}{enaAscendency} \item{control}{enaControl}
+\item{environ}{enaEnviron} \item{flow}{enaFlow} \item{mti}{enaMTI}
+\item{storage}{enaStorage} \item{structure}{enaStructure}
+\item{utility}{enaUtility with eigen.check=FALSE}
+}
+\description{
+M. Lau | May 2013
+---------------------------------------------------
+enaAll --- Conduct all ecological network analyses INPUT = network object
+OUTPUT = list of analytical output
+}
+\details{
+M. Lau | May 2013 --------------------------------------------------- enaAll
+--- Conduct all ecological network analyses INPUT = network object OUTPUT =
+list of analytical output
+
+M. Lau | May 2013 ---------------------------------------------------
+Conduct All Major ENA
+
+Conducts all major ENA with default settings and returns the output as a
+named list.
+}
+\examples{
+
+
+
+data(troModels)
+output = enaAll(troModels[[6]])
+names(output)
+
+
+
+}
+\author{
+Matthew K. Lau Stuart R. Borrett
+}
+\seealso{
+\code{\link{enaAscendency},\link{enaControl},\link{enaEnviron},\link{enaFlow},\link{enaMTI},\link{enaStorage},\link{enaUtility}}
+}
+
diff --git a/man/enaAscendency.Rd b/man/enaAscendency.Rd
index d776ca6..0b0daa9 100644
--- a/man/enaAscendency.Rd
+++ b/man/enaAscendency.Rd
@@ -1,77 +1,132 @@
-\name{enaAscendency} 
-\alias{enaAscendency} 
-\title{ Calculates the Ascendency of an Ecological Network } 
-\description{ 
-Calculates the average mutual information (AMI), ascendency, overhead, and capacity of
-input-output networks.  It also returns the ratios of ascendency and
-overhead to capacity. These metrics describe the organization of flow in
-an ecological network (Ulanowicz 1997).
-}
-
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/enaAscendency.R
+\name{enaAscendency}
+\alias{enaAscendency}
+\title{enaAscendency --- calculates the ascendency statistics
+of Ulanowicz
+INPUT = network object
+OUTPUT = matrix of ascendency statistics}
 \usage{
 enaAscendency(x = "network object")
 }
-
 \arguments{
-  \item{x}{A network object.}
+\item{x}{A network object.}
 }
-
-
 \value{
-\item{AMI}{Returns the Average Mutual Information (AMI) in a
-  network. AMI provides a measure of the constraints placed on a given
-  peice of energy matter moving through a network (Patricio et al. 2006)  }
-\item{ASC}{Returns the ascendnecy of a network.  Ascendency is a scaled
-  form of AMI relative to the total system throughput (Ulanowicz 1997; 2004).
-  Total system throughput is the sum of all activity in a network (Kay et al. 1989).}
-\item{OH}{Returns the overhead of a network.  Overhead is the proportion
-  of the capacity in a network that is not used as ascendency (Ulanowicz 2004).}
-\item{CAP}{Returns the capacity of a network.  Capacity is defined as
-  the sum of ascendency and overhead (Ulanowicz 2004).}
-\item{ACS.CAP}{Returns the proportion of capacity used by ascendency.}
-\item{OH.CAP}{Returns the proportion of capacity used by overhead.}
-\item{robustness}{Returns the robustness of the network.}
-\item{ELD}{Returns the Effective Link Density of the network(c) (Ulanowicz et al. 2014).}
-\item{TD}{Returns the Trophic Depth of the network(r) (Ulanowicz et al. 2014).}
+\item{H}{Total flow diversity (MacArthur 1955).  Uses the Shannon
+Information measure (aka Boltzmann entropy) applied to the individual flows.
+} \item{AMI}{Returns the Average Mutual Information (AMI) in a network. AMI
+provides a measure of the constraints placed on a given peice of energy
+matter moving through a network (Patricio et al. 2006) } \item{Hr}{Residual
+uncertainty that remains about the flow distribution once the ecosystem
+structure is specified (Hr = H - AMI). } \item{ASC}{Returns the ascendnecy
+of a network.  Ascendency is a scaled form of AMI relative to the total
+system throughput (Ulanowicz 1997; 2004).  Total system throughput is the
+sum of all activity in a network (Kay et al. 1989).} \item{OH}{Returns the
+overhead of a network.  Overhead is the proportion of the capacity in a
+network that is not used as ascendency (Ulanowicz 2004).} \item{CAP}{Returns
+the capacity of a network.  Capacity is defined as the sum of ascendency and
+overhead (Ulanowicz 2004).} \item{ACS.CAP}{Returns the proportion of
+capacity used by ascendency.} \item{OH.CAP}{Returns the proportion of
+capacity used by overhead.} \item{robustness}{Returns the robustness of the
+network.} \item{ELD}{Returns the Effective Link Density of the network(c)
+(Ulanowicz et al. 2014).} \item{TD}{Returns the Trophic Depth of the
+network(r) (Ulanowicz et al. 2014).} \item{A.input}{Returns the input
+ascendnecy of a network.} \item{A.internal}{Returns the internal ascendnecy
+of a network.} \item{A.export}{Returns the export ascendnecy of a network.}
+\item{A.respiration}{Returns the respiration ascendnecy of a network.}
+\item{OH.input}{Returns the input overhead of a network.}
+\item{OH.internal}{Returns the internal overhead of a network.}
+\item{OH.export}{Returns the export overhead of a network.}
+\item{OH.respiration}{Returns the respiration overhead of a network.}
+\item{CAP.input}{Returns the input capacity of a network.}
+\item{CAP.internal}{Returns the internal capacity of a network.}
+\item{CAP.export}{Returns the export capacity of a network.}
+\item{CAP.respiration}{Returns the respiration capacity of a network.}
 }
+\description{
+D. Hines | December 2011
+S.R. Borrett | May 2016 - updates
+---------------------------------------------------
+enaAscendency --- calculates the ascendency statistics of Ulanowicz INPUT =
+network object OUTPUT = matrix of ascendency statistics
+}
+\details{
+D. Hines | December 2011 S.R. Borrett | May 2016 - updates
+--------------------------------------------------- enaAscendency ---
+calculates the ascendency statistics of Ulanowicz INPUT = network object
+OUTPUT = matrix of ascendency statistics
 
-\references{
-Kay, J.J., Graham, L.A., Ulanowicz, R.E., 1989. A detailed guide to
-network analysis. p. 15-61 In: Wulff, F., Field, J.G., Man, K.H. (eds.)
-Network analysis in marine ecology. Coastal Estuarine Study
-Serries. Springer-Verlag, Berlin. 
+D. Hines | December 2011 S.R. Borrett | May 2016 - updates
+--------------------------------------------------- Calculates the
+Ascendency of an Ecological Network
 
-Patrico, J., Ulanowicz, R.E., Pardal, M.A., Marques
-J.C., 2004. Ascendency as an ecological indicator: a case study of
-estuarine pulse eutrophication. Estuar. Coast Shelf S. 60, 23-35. 
+Calculates the average mutual information (AMI), ascendency, overhead, and
+capacity of input-output networks.  It also returns the ratios of ascendency
+and overhead to capacity. These metrics describe the organization of flow in
+an ecological network (Ulanowicz 1997).
+}
+\note{
+This and other Ulanowicz school functions require that export and
+respiration components of output be separately quantified.
+}
+\examples{
 
-Ulanowicz, R.E., 1997. Ecology, The Ascendent Perspective. Columbia
-University Press, New York.
 
-Ulanowicz, R.E., 2004. Quantitative methods for ecological network
-analysis. Comput. Biol. Chem. 28, 321-33
-Ulanowicz, R.E., Holt, R.D., Barfield, M., 2014. Limits on ecosystem trophic complexity: insights from ecological network analysis
 
+data(troModels)
+enaAscendency(troModels[[6]])
+####### set initial conditions for calculations #########
+## calculate H & CAPACITY  #######################################
+H = Total Flow Diversity
+################### calculate AMI  #######################
+AMI = Average Mutual Informaiton
+################ calculate ascendency ###################
+################ calculate residual diversity  ####################
+################ calculate overhead  ####################
+################### calculate ratios ####################
+#####################################################################
+#####################################################################
+
+####### set initial conditions for calculations #########
+## calculate H & CAPACITY  #######################################
+H = Total Flow Diversity
+################### calculate AMI  #######################
+AMI = Average Mutual Informaiton
+################ calculate ascendency ###################
+################ calculate residual diversity  ####################
+################ calculate overhead  ####################
+################### calculate ratios ####################
+#####################################################################
+#####################################################################
 }
 \author{
-  David E. Hines (deh9951@uncw.edu)
-  Matthew K. Lau (mkl48@nau.edu)
+David E. Hines Matthew K. Lau Stuart R. Borrett
 }
+\references{
+Kay, J.J., Graham, L.A., Ulanowicz, R.E., 1989. A detailed guide
+to network analysis. p. 15-61 In: Wulff, F., Field, J.G., Man, K.H. (eds.)
+Network analysis in marine ecology. Coastal Estuarine Study Serries.
+Springer-Verlag, Berlin.
 
-\note{This and other Ulanowicz school functions require that export and
-  respiration components of output be separately quantified.}
+Patrico, J., Ulanowicz, R.E., Pardal, M.A., Marques J.C., 2004. Ascendency
+as an ecological indicator: a case study of estuarine pulse eutrophication.
+Estuar. Coast Shelf S. 60, 23-35.
 
-\seealso{
-   \code{\link{read.scor},\link{read.wand},\link{enaStorage},\link{enaUtility}}
-}
+Ulanowicz, R.E. and Norden, J.S., 1990. Symmetrical overhead in flow
+networks. International Journal of Systems Science, 21(2), pp.429-437.
 
-\examples{
-data(troModels)
-enaAscendency(troModels[[6]])
+Ulanowicz, R.E., 1997. Ecology, The Ascendent Perspective. Columbia
+University Press, New York.
+
+Ulanowicz, R.E., 2004. Quantitative methods for ecological network analysis.
+Comput. Biol. Chem. 28, 321-33
+
+Ulanowicz, R.E., Holt, R.D., Barfield, M., 2014. Limits on ecosystem trophic
+complexity: insights from ecological network analysis. Ecology Letters
+17:127-136
+}
+\seealso{
+\code{\link{read.scor},\link{read.wand},\link{enaStorage},\link{enaUtility}}
 }
 
-% Add one or more standard keywords, see file 'KEYWORDS' in the
-% R documentation directory.
-% \keyword{ Ascendency }
-% \keyword{ Overhead }
-% \keyword{ Capacity }
\ No newline at end of file
diff --git a/man/enaControl.Rd b/man/enaControl.Rd
index 3e78e3e..87516ba 100644
--- a/man/enaControl.Rd
+++ b/man/enaControl.Rd
@@ -1,64 +1,81 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/enaControl.R
 \name{enaControl}
 \alias{enaControl}
-\title{
-  Control Analyses of Ecological Networks
-}
-\description{
-  Analyses for analyzing the control amongst the nodes in ecological networks.
-}
+\title{enaControl --- control analyses
+INPUT = network object
+OUTPUT = list of control statistics
+M. Lau | July 2011
+P. Singh | Update Summer 2013
+S.R. Borrett | Update March 2016
+---------------------------------------------------
+enaControl --- control analyses INPUT = network object OUTPUT = list of
+control statistics M. Lau | July 2011 P. Singh | Update Summer 2013 S.R.
+Borrett | Update March 2016
+--------------------------------------------------- enaControl --- control
+analyses INPUT = network object OUTPUT = list of control statistics M. Lau |
+July 2011 P. Singh | Update Summer 2013 S.R. Borrett | Update March 2016
+--------------------------------------------------- Control Analyses of
+Ecological Networks}
 \usage{
 enaControl(x, zero.na = TRUE, balance.override = FALSE)
 }
 \arguments{
-  \item{x}{
-    A network object.
-  }
-  \item{zero.na}{
-    Makes undefined (NA) values zero.
-  }
-  \item{balance.override}{
-    Turns off balancing and checks of network balance.
-  }
+\item{x}{A network object.}
 
-}
+\item{zero.na}{Makes undefined (NA) values zero.}
 
+\item{balance.override}{Turns off balancing and checks of network balance.}
+}
 \value{
-\item{CN}{Control matrix using flow values.}
-\item{CQ}{Control matrix using storage values.}
-\item{CR}{Schramski Control Ratio Matrix}
-\item{CD}{Schramski Control Difference Matrix}
-\item{sc}{Schramski System Control vector}
+\item{CN}{Control matrix using flow values.} \item{CQ}{Control
+matrix using storage values.} \item{CR}{Schramski Control Ratio Matrix}
+\item{CD}{Schramski Control Difference Matrix} \item{CA}{Control Allocation
+Matrix} \item{CDep}{Control Dependency Matrix} \item{sc}{Schramski System
+Control vector} \item{scp}{Schramski system control vector as percent of
+total control} \item{ns}{vector of network-level summary statistics}
 }
-\references{
-  Fath, B. D., Borrett, S. R. 2006. A MATLAB function for Network Environ
-  Analysis.  Environmental Modelling & Software 21:375-405
-  
-  Schramski, J.R., Gattie, D.K., Patten, B.C., Borrett S.R., Fath, B.D., 
-  Thomas, C.R., and Whipple, S.J. 2007. Indirect effects and distributed 
-  control in ecosystems: Distributed control in the environ networks of 
-  a seven compartment model of nitrogen flow in the Neuse River Estuary,
-  USA Steady-state analysis. Ecological Modelling 206 (1):18-30
-  
-  Whipple, S.J., Borrett S.R., Patten, B.C., Gattie, D.K., Schramski, J.R.,
-  and Bata, S.A. 2007. Indirect effects and distributed control in ecosystems:
-  Comparative network environ analysis of a seven-compartment model of 
-  nitrogen flow in the Neuse River Estuary, USA-Time series analysis. 
-  Ecological Modelling 206(1):1-17
-  	 
+\description{
+Analyses for analyzing the control amongst the nodes in ecological networks.
+}
+\examples{
+
+
+
+data(troModels)
+enaControl(troModels[[6]])
+
+
+
 }
 \author{
-  Matthew K. Lau (mkl48@nau.edu)
-  Stuart R. Borrett (borretts@uncw.edu)
-  Pawandeep Singh (singhp@uncw.edu)
+Matthew K. Lau Stuart R. Borrett Pawandeep Singh
 }
+\references{
+Fath, B. D., Borrett, S. R. 2006. A MATLAB function for Network
+Environ Analysis.  Environmental Modelling & Software 21:375-405
 
-\seealso{
-  \code{\link{enaStorage}}
+Schramski, J.R., Gattie, D.K., Patten, B.C., Borrett S.R., Fath, B.D.,
+Thomas, C.R., and Whipple, S.J. 2006. Indirect effects and distributed
+control in ecosystems: Distributed control in the environ networks of a
+seven compartment model of nitrogen flow in the Neuse River Estuary, USA
+Steady-state analysis. Ecological Modelling 194:189-201
+
+Schramski, J.R., Gattie, D.K., Patten, B.C., Borrett S.R., Fath, B.D., and
+Whipple, S.J. 2007. Indirect effects and distributed control in ecosystems:
+Distributed control in the environ networks of a seven compartment model of
+nitrogen flow in the Neuse River Estuary, USA Time series analysis.
+Ecological Modelling 206:18-30
+
+Chen, S., Fath, B.D., Chen, B. 2011. Information-based network environ
+analysis: a system perspective for ecologcial risk assessment.  Ecol. Ind.
+11:1664-1672.
+
+Chen, S. and Chen, B. 2015. Urban energy consumption: Different insights
+from energy flow analysis, input-output analysis and ecological network
+analysis.  Applied Energy 138:99-107.
 }
-\examples{
-data(troModels)
-enaControl(troModels[[6]])
+\seealso{
+\code{\link{enaStorage}}
 }
 
-% Add one or more standard keywords, see file 'KEYWORDS' in the
-% R documentation directory.
diff --git a/man/enaCycle.Rd b/man/enaCycle.Rd
index 7f9a0a9..3003878 100644
--- a/man/enaCycle.Rd
+++ b/man/enaCycle.Rd
@@ -1,60 +1,102 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/enaCycle.R
 \name{enaCycle}
 \alias{enaCycle}
-\title{
-  Full Cycle Analysis of Ecological Networks
-}
-\description{
-  It performs the full cycle analysis on the network based on the algorithm described in Ulanowicz (1983) and implemented in NETWRK 4.2b. It returns data.frames with details of the simple cycles and nexus, vectors of Cycle distributions and Normalized distribution and matrices of Residual Flows and Aggregated Cycles.
-}
+\title{## NETWRK's Full Cycle Analysis
+## Singh P. | July 2014
+## Algorithm Source : Ulanowicz 1991: A package for the Analysis of Ecosystem Flow Networks
+## -----------------------------------------------
+## NETWRK's Full Cycle Analysis ## Singh P. | July 2014 ## Algorithm Source
+: Ulanowicz 1991: A package for the Analysis of Ecosystem Flow Networks ##
+----------------------------------------------- ## NETWRK's Full Cycle
+Analysis ## Singh P. | July 2014 ## Algorithm Source : Ulanowicz 1991: A
+package for the Analysis of Ecosystem Flow Networks ##
+----------------------------------------------- Full Cycle Analysis of
+Ecological Networks}
 \usage{
 enaCycle(x)
 }
 \arguments{
-  \item{x}{
-  	a network object.  This includes all weighted flows into and out of each node. 
-  }
-
+\item{x}{a network object.  This includes all weighted flows into and out of
+each node.}
+}
+\value{
+\item{Table.cycle}{data.frame that presents the details of the
+simple cycles in the network. It contains "CYCLE" the cycle number, "NEXUS"
+the nexus number corresponding to the cycle, "NODES" the nodes constituting
+the cycle} \item{Table.nexus}{data.frame that presents the different nexuses
+characterized by their corresponding weak arcs. It contains "NEXUS" the
+nexus number, "CYCLES" the number of simple cycles present in that Nexus,
+"W.arc.From" the starting node of the corresponding weak arc, "W.arc.To" the
+ending node of the corresponding weak arc and "W.arc.Flow" the flow through
+that weak arc} \item{CycleDist}{vector of the Cycle Distribution that gives
+the flow cycling in loops of different sizes} \item{NormDist}{vector of the
+Normalized Distribution i.e. the Cycle Distribution normalized by the Total
+System Throughput of the system} \item{ResidualFlows}{matrix of the
+straight-through (acyclic) flows in the network}
+\item{AggregatedCycles}{matrix of the Aggregated Biogeochemical Cycles in
+the network} \item{ns}{vector of the full cycle analysis based network
+statistics. These include "NCYCS" the number of simple cycles identified in
+the network, "NNEX" the number of the disjoint cycles or number of Nexuses
+detected in the network and "CI" the cycling index of the network.}
+}
+\description{
+It performs the full cycle analysis on the network based on the algorithm
+described in Ulanowicz (1983) and implemented in NETWRK 4.2b. It returns
+data.frames with details of the simple cycles and nexus, vectors of Cycle
+distributions and Normalized distribution and matrices of Residual Flows and
+Aggregated Cycles.
 }
+\note{
+The "NODES" in "Table.cycle" are arranged such that the weak arc for
+the nexus is the arc between the first two nodes of the cycle.
 
+This function uses the backtracking procedure for the identification of
+simple cycles, which are cycles that cross a node only once except the
+starting node. The backtracking process is a depth-first search algorithm.
 
-\value{
-  \item{Table.cycle}{data.frame that presents the details of the simple cycles in the network. It contains "CYCLE" the cycle number, "NEXUS" the nexus number corresponding to the cycle, "NODES" the nodes constituting the cycle}
-  \item{Table.nexus}{data.frame that presents the different nexuses characterized by their corresponding weak arcs. It contains "NEXUS" the nexus number, "CYCLES" the number of simple cycles present in that Nexus, "W.arc.From" the starting node of the corresponding weak arc, "W.arc.To" the ending node of the corresponding weak arc and "W.arc.Flow" the flow through that weak arc}
-  \item{CycleDist}{vector of the Cycle Distribution that gives the flow cycling in loops of different sizes}
-  \item{NormDist}{vector of the Normalized Distribution i.e. the Cycle Distribution normalized by the Total System Throughput of the system}
-  \item{ResidualFlows}{matrix of the straight-through (acyclic) flows in the network}
-  \item{AggregatedCycles}{matrix of the Aggregated Biogeochemical Cycles in the network}
-  \item{ns}{vector of the full cycle analysis based network statistics. These include "NCYCS" the number of simple cycles identified in the network, "NNEX" the number of the disjoint cycles or number of Nexuses detected in the network and "CI" the cycling index of the network.} 
-  }
-\references{
-  %% ~put references to the literature/web site here ~
-  Johnson, D.B. 1975. Finding all the elementary circuits of a directed graph. SIAM J. Comput. 4:77--84 
+In the data.frame "Table.cycle", if the number of cycles in a nexus is more
+than 50, then a blank line is displayed after 50 cycles of the nexus,
+followed by the cycles of the next nexus.
 
-  Ulanowicz, R.E. 1983. Identifying the structure of cycling in ecosystems. Methematical Biosciences 65:219--237
+The results of the analysis of Feeding Cycles can be obtained as a byproduct
+of the enaTroAgg function that analyzes the trophic dynamics of a network.
 
-  Ulanowicz, R.E. and Kay, J.J. 1991. A package for the analysis of ecosystem flow networks. Environmental Software 6:131 -- 142.
-  
+At every multiple of 5000 cycles in a nexus, the program prints an
+indication for the user to know that it is still running.
 }
-\author{
-  Pawandeep Singh (pawan.s@live.co.uk)
-  }
-\note{The "NODES" in "Table.cycle" are arranged such that the weak arc for the nexus is the arc between the first two nodes of the cycle.
-	
-	This function uses the backtracking procedure for the identification of simple cycles, which are cycles that cross a node only once except the starting node. The backtracking process is a depth-first search algorithm.
-	
-	In the data.frame "Table.cycle", if the number of cycles in a nexus is more than 50, then a blank line is displayed after 50 cycles of the nexus, followed by the cycles of the next nexus.
-	
-	The results of the analysis of Feeding Cycles can be obtained as a byproduct of the enaTroAgg function that analyzes the trophic dynamics of a network.
-	
-	At every multiple of 5000 cycles in a nexus, the program prints an indication for the user to know that it is still running.
-	}
-	
-\seealso{
-  \code{\link{enaTroAgg}}
-}
-
 \examples{
+
+
+
 data(troModels)
 cyc6 <- enaCycle(troModels[[6]])
 attributes(cyc6)
+##-----------------------------------------------------------------
+##-----------------------------------------------------------------
+## 2 Repeats start. rep3,4
+## Backtrack to prev. level
+
+##-----------------------------------------------------------------
+##-----------------------------------------------------------------
+## 2 Repeats start. rep3,4
+## Backtrack to prev. level
 }
+\author{
+Pawandeep Singh
+}
+\references{
+%% ~put references to the literature/web site here ~ Johnson,
+D.B. 1975. Finding all the elementary circuits of a directed graph. SIAM J.
+Comput. 4:77--84
+
+Ulanowicz, R.E. 1983. Identifying the structure of cycling in ecosystems.
+Methematical Biosciences 65:219--237
+
+Ulanowicz, R.E. and Kay, J.J. 1991. A package for the analysis of ecosystem
+flow networks. Environmental Software 6:131 -- 142.
+}
+\seealso{
+\code{\link{enaTroAgg}}
+}
+
diff --git a/man/enaEnviron.Rd b/man/enaEnviron.Rd
index 8bf97f4..8a6a253 100644
--- a/man/enaEnviron.Rd
+++ b/man/enaEnviron.Rd
@@ -1,53 +1,68 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/enaEnviron.R
 \name{enaEnviron}
 \alias{enaEnviron}
-\title{
-  Ecological Network Environs
-}
-\description{
-  Calculates the environs for an ecological network.
-}
+\title{environ --- conducts environ analysis 
+INPUT = network object
+OUTPUT = input and/or output environs}
 \usage{
-enaEnviron(x,input=TRUE,output=TRUE,type='unit',err.tol=1e-10,balance.override=FALSE)
+enaEnviron(x, input = TRUE, output = TRUE, type = "unit",
+  err.tol = 1e-10, balance.override = FALSE)
 }
 \arguments{
-  \item{x}{
-    A network object.
-  }
-  \item{input}{
-    Should the input environ be calculated? 
-  }
-  \item{output}{
-    Should the output environ be calculated?
-  }
-  \item{type}{
-    Specifies the type of environs ("unit" or "realized") to be calculated.
-  }
-  \item{err.tol}{
-    Error threshold for numerical error fluctuations in flows. Values below err.tol
-    will be set to zero.
-  }
-  \item{balance.override}{
-    Logical specifying whether (TRUE) or not (FALSE) the model needs to be
-    balanced prior to calculations. If TRUE and the model is not balanced,
-    environs will not be calculated.
-  }
+\item{x}{A network object.}
 
-}
+\item{input}{Should the input environ be calculated?}
 
-\value{
-  The function returns the input, output or both environs
-  depending upon which were requested.
+\item{output}{Should the output environ be calculated?}
+
+\item{type}{Specifies the type of environs ("unit" or "realized") to be
+calculated.}
+
+\item{err.tol}{Error threshold for numerical error fluctuations in flows.
+Values below err.tol will be set to zero.}
+
+\item{balance.override}{Logical specifying whether (TRUE) or not (FALSE) the
+model needs to be balanced prior to calculations. If TRUE and the model is
+not balanced, environs will not be calculated.}
 }
-\references{
-Fath, B.D. and S.R. Borrett. 2006. A MATLAB function for network
-environ analysis. Environmental Modelling & Software 21:375-405.
+\value{
+The function returns the input, output or both environs depending
+upon which were requested.
 }
-\author{
-Stuart R. Borrett (borretts@uncw.edu)
-Matthew K. Lau (mkl48@nau.edu)
+\description{
+M. Lau July 2011 | DEH edited Feb 2013
+---------------------------------------------------
+environ --- conducts environ analysis INPUT = network object OUTPUT = input
+and/or output environs
 }
+\details{
+M. Lau July 2011 | DEH edited Feb 2013
+--------------------------------------------------- environ --- conducts
+environ analysis INPUT = network object OUTPUT = input and/or output
+environs
+
+M. Lau July 2011 | DEH edited Feb 2013
+--------------------------------------------------- Ecological Network
+Environs
 
+Calculates the environs for an ecological network.
+}
 \examples{
+
+
+
 data(troModels)
 enaEnviron(troModels[[6]])
+
+
+
 }
+\author{
+Stuart R. Borrett Matthew K. Lau
+}
+\references{
+Fath, B.D. and S.R. Borrett. 2006. A MATLAB function for network
+environ analysis. Environmental Modelling & Software 21:375-405.
+}
+
diff --git a/man/enaFlow.Rd b/man/enaFlow.Rd
index 6a03202..a0429c9 100644
--- a/man/enaFlow.Rd
+++ b/man/enaFlow.Rd
@@ -1,89 +1,130 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/enaFlow.R
 \name{enaFlow}
 \alias{enaFlow}
-\title{
-  Flow Analyses of Ecological Networks
-}
-\description{
-  Performs the primary throughflow analysis developed for
-  input-output systems.  It returns a vector of throughflows, the input and
-  output oriented matrices for "direct flow intensities" and "integral
-  flow intensities", and a set of flow based network statistics.
-}
+\title{enaFlow --- flow analysis
+INPUT = network object
+OUTPUT = list of flow statistics}
 \usage{
 enaFlow(x, zero.na = TRUE, balance.override = FALSE)
 }
-%- maybe also 'usage' for other objects documented here.
 \arguments{
-  \item{x}{a network object.  This includes all weighted flows into and out of
-    each node.    
-  }
-  \item{zero.na}{
-    LOGICAL: should NA values be converted to zeros.
-  }
-  \item{balance.override}{
-    Flow analysis assumes the network model is at steady-state (inputs
-    = outputs).  Setting balance.override = TRUE allows the function to be
-    run on unbalanced models.
-  }
-}
+\item{x}{a network object.  This includes all weighted flows into and out of
+each node.}
 
+\item{zero.na}{LOGICAL: should NA values be converted to zeros.}
+
+\item{balance.override}{Flow analysis assumes the network model is at
+steady-state (inputs = outputs).  Setting balance.override = TRUE allows the
+function to be run on unbalanced models.}
+}
 \value{
 \item{T}{vector of node throughflows - total amount of energy-matter
-  flowing into or out of each node}
-\item{G}{matrix of the output oriented direct flow intensities}
-\item{GP}{matrix of the input oriented direct flow intensities}
-\item{N}{matrix of the ouput oriented integral
-  (boundary+direct+indirect) flow intensities}
-\item{NP}{matrix of the input oriented integral flow intensities}
-\item{ns}{vector of flow based network statistics.  These include
-  "Boundary" the total input into or output from the system, "TST" the
-  total system throughflow, "TSTp" total system throughPUT,"APL" is the network aggradation
-  TST/Boundary which is also called average path length, "FCI" (Finn
-  Cycling Index) is a metric of the amount of cycling in a system, "BFI" is the
-  boundary flow intensity Boundary/TST, "DFI" is the direct flow
-  intensity Direct/TST, "IFI" is the indirect flow intensity
-  Indirect/TST, "ID.F" is the realized indirect to direct flow intensity,
-  "ID.F.I" is the input idealized indirect flow intensity, "id.F.O"is the
-  output idealized indirect flow intensity, "HMG.I" is the input network
-  homogenization, "HMG.O" is the output network homogenization,
-  "AMP.I" is the strong measure of input network amplifiation,
-  "AMP.O" is the strong measure of output network amplification,
-  "mode0.F" is the boundary flow - flow that reaches a compartment from
-  across the system boundary, "mode1.F" is internal first passage flow,
-  "mode2.F" is cycled flow, "mode3.F" is the dissipative eqivalent to mode2,
-  and "mode4.F" is the dissipative equivalent ot mode0.}
+flowing into or out of each node} \item{G}{matrix of the output oriented
+direct flow intensities} \item{GP}{matrix of the input oriented direct flow
+intensities} \item{N}{matrix of the ouput oriented integral
+(boundary+direct+indirect) flow intensities} \item{NP}{matrix of the input
+oriented integral flow intensities} \item{ns}{vector of flow based network
+statistics.  These include "Boundary" the total input into or output from
+the system, "TST" the total system throughflow, "TSTp" total system
+throughPUT,"APL" is the network aggradation TST/Boundary which is also
+called average path length, "FCI" (Finn Cycling Index) is a metric of the
+amount of cycling in a system, "BFI" is the boundary flow intensity
+Boundary/TST, "DFI" is the direct flow intensity Direct/TST, "IFI" is the
+indirect flow intensity Indirect/TST, "ID.F" is the realized indirect to
+direct flow intensity, "ID.F.I" is the input idealized indirect flow
+intensity, "id.F.O"is the output idealized indirect flow intensity, "HMG.I"
+is the input network homogenization, "HMG.O" is the output network
+homogenization, "AMP.I" is the strong measure of input network amplifiation,
+"AMP.O" is the strong measure of output network amplification, "mode0.F" is
+the boundary flow - flow that reaches a compartment from across the system
+boundary, "mode1.F" is internal first passage flow, "mode2.F" is cycled
+flow, "mode3.F" is the dissipative eqivalent to mode2, and "mode4.F" is the
+dissipative equivalent ot mode0. "H" is the total flow diversity (MacArthur
+1955).  Uses the Shannon Information measure (aka Boltzmann entropy) applied
+to the individual flows, "AMI", is the Average Mutual Information (AMI) in a
+network. "Hr", is the residual uncertainty that remains about the flow
+distribution once the ecosystem structure is specified (Hr = H - AMI),
+"ASC", Returns the ascendnecy of a network, "OH", is the overhead of a
+network (Ulanowicz 2004), "CAP", is the capacity of a network, "ACS.CAP", is
+the proportion of capacity used by ascendency, "OH.CAP", Returns the
+proportion of capacity used by overhead, "robustness", is the robustness of
+the network, "ELD" Returns the Effective Link Density of the network(c)
+(Ulanowicz et al. 2014), "TD", Returns the Trophic Depth of the network(r)
+(Ulanowicz et al. 2014), "A.input", Returns the input ascendnecy of a
+network, "A.internal", Returns the internal ascendnecy of a network,
+"A.export", Returns the export ascendnecy of a network, "A.respiration",
+Returns the respiration ascendnecy of a network, "OH.input", Returns the
+input overhead of a network, "OH.internal", Returns the internal overhead of
+a network, "OH.export", Returns the export overhead of a network,
+"OH.respiration", Returns the respiration overhead of a network,
+"CAP.input", Returns the input capacity of a network, "CAP.internal",
+Returns the internal capacity of a network, "CAP.export", Returns the export
+capacity of a network, "CAP.respiration", Returns the respiration capacity
+of a network}
 }
-\references{
-  Borrett, S. R., Freeze, M. A., 2011. Reconnecting environs to their
-  environment. Ecol. Model. 222, 2393-2403.
+\description{
+M. Lau | July 2011
+---------------------------------------------------
+enaFlow --- flow analysis INPUT = network object OUTPUT = list of flow
+statistics
+}
+\details{
+M. Lau | July 2011 ---------------------------------------------------
+enaFlow --- flow analysis INPUT = network object OUTPUT = list of flow
+statistics
+
+M. Lau | July 2011 --------------------------------------------------- Flow
+Analyses of Ecological Networks
+
+Performs the primary throughflow analysis developed for input-output
+systems.  It returns a vector of throughflows, the input and output oriented
+matrices for "direct flow intensities" and "integral flow intensities", and
+a set of flow based network statistics.  Included in the network statistics
+are a set of measures that describe the diversity of flows in the ecosystem
+(Ulanowicz's Ascendendy measures).
+}
+\examples{
+
 
-  Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network
-  Environ Analysis.  Environ. Model. Softw. 21, 375-405.
 
-  Fath, B. D., Patten, B. C., 1999. Review of the foundations of network
-  environ analysis. Ecosystems 2, 167-179.
-  
-  Finn, J. T., 1976. Measures of ecosystem structure and function
-  derived from analysis of flows. J. Theor. Biol. 56, 363-380.
+data(troModels)
+F = enaFlow(troModels[[6]])  # completes the full analysis
+F$ns  # returns just the network statisics
+
 
-  Patten, B.C. Higashi, M., Burns, T. P. 1990. Trophic dynamics in
-  ecosystem networks: significance of cycles and storage.
-  Ecol. Model. 51, 1-28.
 
-  Schramski, J. R., Kazanci, C., Tollner, E. W., 2011. Network environ
-  theory, simulation and EcoNet 2.0. Environ. Model. Softw. 26,
-  419-428.
 }
 \author{
-  Matthew K. Lau (mkl48@nau.edu)
-  Stuart R. Borrett (borretts@uncw.edu)
+Matthew K. Lau Stuart R. Borrett
 }
+\references{
+Borrett, S. R., Freeze, M. A., 2011. Reconnecting environs to
+their environment. Ecol. Model. 222, 2393-2403.
 
-\seealso{
-  \code{\link{read.scor},\link{read.wand},\link{enaStorage},\link{enaUtility}}
+Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network Environ
+Analysis.  Environ. Model. Softw. 21, 375-405.
+
+Fath, B. D., Patten, B. C., 1999. Review of the foundations of network
+environ analysis. Ecosystems 2, 167-179.
+
+Finn, J. T., 1976. Measures of ecosystem structure and function derived from
+analysis of flows. J. Theor. Biol. 56, 363-380.
+
+Patten, B.C. Higashi, M., Burns, T. P. 1990. Trophic dynamics in ecosystem
+networks: significance of cycles and storage.  Ecol. Model. 51, 1-28.
+
+Schramski, J. R., Kazanci, C., Tollner, E. W., 2011. Network environ theory,
+simulation and EcoNet 2.0. Environ. Model. Softw. 26, 419-428.
+
+Ulanowicz, R.E., 2004. Quantitative methods for ecological network analysis.
+Comput. Biol. Chem. 28, 321-33
+
+Ulanowicz, R.E., Holt, R.D., Barfield, M., 2014. Limits on ecosystem trophic
+complexity: insights from ecological network analysis.  Ecology Letters
+17:127-136.
 }
-\examples{
-data(troModels)
-F = enaFlow(troModels[[6]])  # completes the full analysis
-F$ns  # returns just the network statisics
+\seealso{
+\code{\link{read.scor},\link{read.wand},\link{enaStorage},\link{enaUtility}}
 }
+
diff --git a/man/enaMTI.Rd b/man/enaMTI.Rd
index 65ebb3d..37d802a 100644
--- a/man/enaMTI.Rd
+++ b/man/enaMTI.Rd
@@ -1,87 +1,90 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/enaMTI.R
 \name{enaMTI}
 \alias{enaMTI}
-\title{
-  Mixed Trophic Impacts (MTI) Analysis
-}
-\description{
-  Calculates the Mixed Trophic Impacts of one species on
-  another in the given ecosystem model following the algorithm of
-  Ulanowicz and Puccia (1990).  This considers both the direct and
-  indirect trophic impacts.    
-}
+\title{enaMTI --- Mixed Trophic Impacts Analysis
+follows Ulanowicz and Puccia, 1990.
+INPUT = network object
+OUTPUT = list of trophic impact statistics
+Borrett | June 2012, MKL | July 2013
+------------------------------------
+enaMTI --- Mixed Trophic Impacts Analysis follows Ulanowicz and Puccia,
+1990. INPUT = network object OUTPUT = list of trophic impact statistics
+Borrett | June 2012, MKL | July 2013 ------------------------------------
+enaMTI --- Mixed Trophic Impacts Analysis follows Ulanowicz and Puccia,
+1990. INPUT = network object OUTPUT = list of trophic impact statistics
+Borrett | June 2012, MKL | July 2013 ------------------------------------
+Mixed Trophic Impacts (MTI) Analysis}
 \usage{
-enaMTI(x,eigen.check=TRUE,zero.na=TRUE, balance.override=FALSE)
+enaMTI(x, eigen.check = TRUE, zero.na = TRUE, balance.override = FALSE)
 }
 \arguments{
-  \item{x}{a network object.  This includes all weighte dflows into and
-    out of each node.  It must also include the "Living" vector that
-    identifies the living (TRUE/FALSE) status of each node.  
-  }
-  \item{zero.na}{
-    A logical parameter that specifies if NAs generated in the analysis
-    should be reset to zero.  The default is TRUE.
-  }
-  \item{balance.override}{
-    
-    Mixed Trophic Impacts analysis builds on flow analysis and thus
-    assumes the network model is at steady-state (inputs = outputs).
-    Setting balance.override = TRUE allows the function to be run on
-    unbalanced models, though this is unadvised.
-  }
-  \item{eigen.check}{
-    
-    LOGICAL: should the dominant eigen value be checked?  By default,
-    the function will not return utility values if the eigenvalue is
-    larger than one; however, if eigen.check is set to
-    FALSE, then the function will be applied regardless of the mathematic
-    concern.
-    
-  }
+\item{x}{a network object.  This includes all weighte dflows into and out of
+each node.  It must also include the "Living" vector that identifies the
+living (TRUE/FALSE) status of each node.}
 
-}
+\item{eigen.check}{LOGICAL: should the dominant eigen value be checked?  By
+default, the function will not return utility values if the eigenvalue is
+larger than one; however, if eigen.check is set to FALSE, then the function
+will be applied regardless of the mathematic concern.}
 
+\item{zero.na}{A logical parameter that specifies if NAs generated in the
+analysis should be reset to zero.  The default is TRUE.}
 
-\value{
-  \item{G}{output-oriented direct flow intensity matrix as in enaFlow,
-    except oriented from row to column.}
-  \item{FP}{input-oriented direct flow intensity matrix similar to
-    enaFlow; however, the calculation exclude respiration losses from the
-    throughflow in the denominator to focus on NET production.  Also, if
-    the receiver compartment is not living, the flux intensity is set to zero.}
-  \item{Q}{direct net trophic impacts (G-t(FP)).}
-  \item{M}{Total (direct and indirect) tropic impacts of compartment i on j.}
-
+\item{balance.override}{Mixed Trophic Impacts analysis builds on flow
+analysis and thus assumes the network model is at steady-state (inputs =
+outputs).  Setting balance.override = TRUE allows the function to be run on
+unbalanced models, though this is unadvised.}
 }
-\references{
-  %% ~put references to the literature/web site here ~
-  Ulanowicz, R.E. and C.J. Puccia.  1990. Mixed trophic impacts in
-  ecosystems.  Coenoses 5, 7--16.
+\value{
+\item{G}{output-oriented direct flow intensity matrix as in enaFlow,
+except oriented from row to column.} \item{FP}{input-oriented direct flow
+intensity matrix similar to enaFlow; however, the calculation exclude
+respiration losses from the throughflow in the denominator to focus on NET
+production.  Also, if the receiver compartment is not living, the flux
+intensity is set to zero.} \item{Q}{direct net trophic impacts (G-t(FP)).}
+\item{M}{Total (direct and indirect) tropic impacts of compartment i on j.}
 }
-\author{
-  Stuart R. Borrett (borretts@uncw.edu)
-  Matthew K. Lau (mkl48@nau.edu)
+\description{
+Calculates the Mixed Trophic Impacts of one species on another in the given
+ecosystem model following the algorithm of Ulanowicz and Puccia (1990). This
+considers both the direct and indirect trophic impacts.
 }
 \note{
-  This and other Ulanowicz school functions require that export and
-  respiration components of output be separately quantified.
+This and other Ulanowicz school functions require that export and
+respiration components of output be separately quantified.
 
-  This analysis is similar in concept to the ENA Utility analysis.
+This analysis is similar in concept to the ENA Utility analysis.
 
-  With regard to the eigen.check argument, like enaFlow, enaStorage and enaUtility, this
-  analysis considers the trophic impact propigated over path lengths ranging
-  for zero to infinity.  For the analysis to work properly, the path
-  sequence must converge.  This function checks to see if the path
-  sequence is convergent by finding the dominant eigenvalue of the
-  direct  matrix.  If this eigenvalue is less than 1, the
-  sequence is convergent and the analysis can be applied; if the
-  dominant eigenvalue is greater than one, then the anlysis cannot be
-  applied.  
-}
-\seealso{
-  \code{\link{enaFlow},\link{enaUtility}}
+With regard to the eigen.check argument, like enaFlow, enaStorage and
+enaUtility, this analysis considers the trophic impact propigated over path
+lengths ranging for zero to infinity.  For the analysis to work properly,
+the path sequence must converge.  This function checks to see if the path
+sequence is convergent by finding the dominant eigenvalue of the direct
+matrix.  If this eigenvalue is less than 1, the sequence is convergent and
+the analysis can be applied; if the dominant eigenvalue is greater than one,
+then the anlysis cannot be applied.
 }
 \examples{
+
+
+
 data(troModels)
 mti <- enaMTI(troModels[[6]])
 attributes(mti)
+
+
+
+}
+\author{
+Stuart R. Borrett Matthew K. Lau
+}
+\references{
+%% ~put references to the literature/web site here ~ Ulanowicz,
+R.E. and C.J. Puccia.  1990. Mixed trophic impacts in ecosystems.  Coenoses
+5, 7--16.
 }
+\seealso{
+\code{\link{enaFlow},\link{enaUtility}}
+}
+
diff --git a/man/enaModelInfo.Rd b/man/enaModelInfo.Rd
index eeec477..4b8da20 100644
--- a/man/enaModelInfo.Rd
+++ b/man/enaModelInfo.Rd
@@ -1,18 +1,16 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/enaR-package.R
+\docType{data}
 \name{enaModelInfo}
 \alias{enaModelInfo}
-\docType{data}
-\title{
-  Ecosystem Model Information
-}
+\title{Ecosystem Model Information}
 \description{
-Model information for the set of ecosystem models compiled by the SEE Lab at UNCW.
+Model information for the set of ecosystem models compiled by the SEE Lab at
+UNCW.
 }
-
 \references{
-  Borrett, S. R., and M. K. Lau. In Prep. enaR: An R package for
-  Ecological Network Analysis. Ecological Modeling and Software.
+Borrett, S. R., and M. K. Lau. In Prep. enaR: An R package for
+Ecological Network Analysis. Ecological Modeling and Software.
 }
-\usage{data(enaModelInfo)}
-
-
 \keyword{datasets}
+
diff --git a/man/enaModels.Rd b/man/enaModels.Rd
index 5b8ac61..5b03802 100644
--- a/man/enaModels.Rd
+++ b/man/enaModels.Rd
@@ -1,18 +1,15 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/enaR-package.R
+\docType{data}
 \name{enaModels}
 \alias{enaModels}
-\docType{data}
-\title{
-  Ecosystem Models
-}
+\title{Ecosystem Models}
 \description{
 A set of ecosystem models compiled by the SEE Lab at UNCW.
 }
-
 \references{
-  Borrett, S. R., and M. K. Lau. In Prep. enaR: An R package for
-  Ecological Network Analysis. Ecological Modeling and Software.
+Borrett, S. R., and M. K. Lau. In Prep. enaR: An R package for
+Ecological Network Analysis. Ecological Modeling and Software.
 }
-\usage{data(enaModels)}
-
-
 \keyword{datasets}
+
diff --git a/man/enaR-package.Rd b/man/enaR-package.Rd
index 91ca60b..2974f1a 100644
--- a/man/enaR-package.Rd
+++ b/man/enaR-package.Rd
@@ -1,38 +1,33 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/enaR-package.R
+\docType{package}
 \name{enaR-package}
-\alias{enaR-package}
 \alias{enaR}
-\docType{package}
-\title{
-  Tools for Ecological Network Analysis (ena)
-}
+\alias{enaR-package}
+\title{Tools for Ecological Network Analysis (ena)}
 \description{
-  This package compiles functions for the analysis of ecological networks,
-  building on tools previously developed in the MatLab language (Fath and
-  Borrett 2006) with multiple additions of functionality. 
+This package compiles functions for the analysis of ecological networks,
+building on tools previously developed in the MatLab language Borrett 2006)
+with multiple additions of functionality.
 }
 \details{
-\tabular{ll}{
-Package: \tab enaR \cr
-Type: \tab Package\cr
-Version: \tab 2.9.1\cr
-Date: \tab 2015-08-06\cr
-License: \tab GPL-2\cr
-}
+\tabular{ll}{ Package: \tab enaR \cr Type: \tab Package\cr Version: \tab
+2.9.3\cr Date: \tab 2015-12-09\cr License: \tab GPL-3\cr }
 }
 \author{
-Authors: Stuart R. Borrett (UNCW) and Matthew K. Lau (NAU)
-Maintainer: Matthew K. Lau <enaR.maintainer@gmail.com>
+Authors: Stuart R. Borrett, Matthew K. Lau, Pawandeep Singh, David
+E. Hines Maintainer: Matthew K. Lau <enaR.maintainer@gmail.com>
 }
 \references{
-Fath BD, Borrett SR. 2006. A Matlab Function for Network Environ
-Analysis. Environmental Modelling and Software 21, 375-405.
+Borrett SR and Lau MK 2014. enaR: An r package for Ecosystem
+Network Analysis. Methods in Ecology and Evolution 5:1206-1213.
 }
-\keyword{ package }
 \seealso{
-% ~~ Optional links to other man pages, e.g. ~~
-% ~~ \code{\link[<pkg>:<pkg>-package]{<pkg>}} ~~
-% \code{\link[network:statnet-package]{statnet}}
+% ~~ Optional links to other man pages, e.g. ~~ % ~~
+\code{\link[<pkg>:<pkg>-package]{<pkg>}} ~~ %
+\code{\link[network:statnet-package]{statnet}}
 %\code{\link[igraph:igraph-package]{igraph}}
 \code{\link[network:network-package]{network}}
 }
+\keyword{package}
 
diff --git a/man/enaStorage.Rd b/man/enaStorage.Rd
index 1f63c89..f45f375 100644
--- a/man/enaStorage.Rd
+++ b/man/enaStorage.Rd
@@ -1,91 +1,99 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/enaStorage.R
 \name{enaStorage}
 \alias{enaStorage}
-\title{
-  Storage Analyses of Ecological Networks
-}
-\description{
-  Calculates storage-based Ecological Network Analyses.
-}
+\title{enaStorage --- storage analysis
+INPUT = network object
+OUTPUT = list of storage statistics}
 \usage{
 enaStorage(x, balance.override = FALSE)
 }
 \arguments{
-  \item{x}{
-    A network object.  This This includes all weighted flows into and out of
-    each vertex as well as the amount of energy--matter stored at each vertex.   
-  }
-  \item{balance.override}{
-    LOGICAL: should an imbalanced model be analyzed?  
-    If FALSE, the functions checks to make sure the
-    network model provided is at steady-state.  If TRUE, then the
-    function will run without ensuring that the model meets the
-    steady-state assumption.
-}
-}
+\item{x}{A network object.  This This includes all weighted flows into and
+out of each vertex as well as the amount of energy--matter stored at each
+vertex.}
 
+\item{balance.override}{LOGICAL: should an imbalanced model be analyzed?  If
+FALSE, the functions checks to make sure the network model provided is at
+steady-state.  If TRUE, then the function will run without ensuring that the
+model meets the steady-state assumption.}
+}
 \value{
-  \item{X}{The storage values themselves.}
-  \item{C}{output or donor-storage normalized output-oriented direct flow
-  intensity matrix (Jacobian community matrix)}
-  \item{S}{dimensionalized integral output community matrix}
-  \item{Q}{integral output storage matrix - non-dimensional}
-  \item{CP}{input or recipient-storage normalized oriented flow intensity matrix (Jacobian community matrix)}
-  \item{SP}{dimensionalized integral input community matrix}
-  \item{QP}{integral input storage matrix - non-dimensional}
-  \item{dt}{selected time step to create P, PP, Q and QP - smallest whole number to make diag(C) nonnegative}
-  \item{ns}{vector of the storage based whole system network statistics.
-    These statistics include total system storage (TSS), storage cycling
-    index (CIS), Boundary storage intensity (BSI), Direct storage
-    intensity (DSI), Indirect storage intensity (ISI), realized ratio of
-    indirect-to-direct storage (ID.S), unit input-oriented ratio of
-    indirect-to-direct storage intensities (IDS.I), unit output ratio of
-    indirect-to-direct storage intensities (IDS.O), input-oriented
-    storage-based network homogenization (HMG.S.I), output-oriented
-    storage-based network homogenization (HMG.S.O), input-oriented
-    storage-based network amplification (AMP.S.I), output-oriented
-    storage-based network amplification (AMP.S.O), Storage from Boundary
-    flow (mode0.S), storage from internal first passage flow (mode1.S),
-    storage from cycled flow (mode2.S), dissipative equivalent to
-    mode1.S (mode3.S), dissipative equivalent to mode0.S (mode4.S).}
+\item{X}{The storage values themselves.} \item{C}{output or
+donor-storage normalized output-oriented direct flow intensity matrix
+(Jacobian community matrix)} \item{S}{dimensionalized integral output
+community matrix} \item{Q}{integral output storage matrix - non-dimensional}
+\item{CP}{input or recipient-storage normalized oriented flow intensity
+matrix (Jacobian community matrix)} \item{SP}{dimensionalized integral input
+community matrix} \item{QP}{integral input storage matrix - non-dimensional}
+\item{dt}{selected time step to create P, PP, Q and QP - smallest whole
+number to make diag(C) nonnegative} \item{ns}{vector of the storage based
+whole system network statistics.  These statistics include total system
+storage (TSS), storage cycling index (CIS), Boundary storage intensity
+(BSI), Direct storage intensity (DSI), Indirect storage intensity (ISI),
+realized ratio of indirect-to-direct storage (ID.S), unit input-oriented
+ratio of indirect-to-direct storage intensities (IDS.I), unit output ratio
+of indirect-to-direct storage intensities (IDS.O), input-oriented
+storage-based network homogenization (HMG.S.I), output-oriented
+storage-based network homogenization (HMG.S.O), input-oriented storage-based
+network amplification (AMP.S.I), output-oriented storage-based network
+amplification (AMP.S.O), Storage from Boundary flow (mode0.S), storage from
+internal first passage flow (mode1.S), storage from cycled flow (mode2.S),
+dissipative equivalent to mode1.S (mode3.S), dissipative equivalent to
+mode0.S (mode4.S).}
 }
+\description{
+M. Lau | July 2011
+---------------------------------------------------
+enaStorage --- storage analysis INPUT = network object OUTPUT = list of
+storage statistics
+}
+\details{
+M. Lau | July 2011 ---------------------------------------------------
+enaStorage --- storage analysis INPUT = network object OUTPUT = list of
+storage statistics
 
-\references{
-
-  Matis, J. H., Patten, B. C. 1981. Environ analysis of linear compartmental systems:
-  the static, time invariant case.  Bulletin of the International
-  Statistical Institute, 48: 527-565.
-  
-  Fath, B. D., Patten, B. C. 1999.  Review of the foundations of network
-  enviorn analysis.  Ecosystems 2:167-179.
-
-  Fath, B. D. Patten, B. C., Choi, J. 2001.  Compementarity of
-  ecological goal functions.   Journal of Theoretical Biology 208: 493-506.
+M. Lau | July 2011 ---------------------------------------------------
+Storage Analyses of Ecological Networks
 
-  Fath, B. D., Borrett, S. R. 2006. A MATLAB function for Network Environ
-  Analysis.  Environmental Modelling & Software 21:375-405
-  
+Calculates storage-based Ecological Network Analyses.
+}
+\examples{
+data(oyster)
+S <- enaStorage(oyster)
+attributes(S)
+calculate variance of expected residence times (Barber 1979)
+Amplification parameter
+Indirect effects parameter (srb fix 8.3.2011)
+Indirect effects parameter (realized)  (srb fix 8.3.2011)
+Tripartite walk-length division of storage
+Homogenization parameter
+Network Aggradation
+MODE Partition (Fath et al. 2001)
+packing up network statistics for output
+lam1P'=abs(lam1P),'rhoP'=abs(rhoP),
+lam1PP'=abs(lam1PP),'rhoPP'=abs(rhoPP),'AGG.S'=AGG.S)
 }
-
 \author{
-  Matthew K. Lau (mkl48@nau.edu)
-  Stuart R. Borrett (borretts@uncw.edu)
-
+Matthew K. Lau Stuart R. Borrett
 }
+\references{
+Matis, J. H., Patten, B. C. 1981. Environ analysis of linear
+compartmental systems: the static, time invariant case.  Bulletin of the
+International Statistical Institute, 48: 527-565.
 
-% \note{
-% }
+Fath, B. D., Patten, B. C. 1999.  Review of the foundations of network
+enviorn analysis.  Ecosystems 2:167-179.
 
-%% ~Make other sections like Warning with \section{Warning }{....} ~
-%% ~~objects to See Also as \code{\link{help}}, ~~~
-\seealso{
-    \code{\link{read.scor},\link{read.wand},\link{enaFlow},\link{enaUtility}}
+Fath, B. D. Patten, B. C., Choi, J. 2001.  Compementarity of ecological goal
+functions.  Journal of Theoretical Biology 208: 493-506.
+
+Fath, B. D., Borrett, S. R. 2006. A MATLAB function for Network Environ
+Analysis.  Environmental Modelling & Software 21:375-405
 }
-\examples{
-data(oyster)
-S<-enaStorage(oyster)
-attributes(S)
+\seealso{
+\code{\link{read.scor},\link{read.wand},\link{enaFlow},\link{enaUtility}}
 }
-% Add one or more standard keywords, see file 'KEYWORDS' in the
-% R documentation directory.
 \keyword{enaFlow}
-\keyword{read.scor}% __ONLY ONE__ keyword per line
+\keyword{read.scor}
+
diff --git a/man/enaStructure.Rd b/man/enaStructure.Rd
index 12dd21d..2c3a96a 100644
--- a/man/enaStructure.Rd
+++ b/man/enaStructure.Rd
@@ -1,51 +1,66 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/enaStructure.R
 \name{enaStructure}
 \alias{enaStructure}
-\title{
-  Structure Analyses of Ecological Network
-}
-\description{
-  Analysis of the structure of an ecological flow network.
-}
+\title{enaStructure --- performes strucutral analysis of the
+network graph (see Borrett et al. 2007)
+INPUT = network object
+OUTPUT = list of structure statistics}
 \usage{
 enaStructure(x = "network object")
 }
 \arguments{
-  \item{x}{
-    A network object.
-  }
+\item{x}{A network object.}
 }
-
 \value{
-  \item{A}{
-
-  }
-  \item{ns}{A vector of structure based network statistics. These
-    include n = number of nodes, L = number of edges, C =
-    connectivity, LD = link density, ppr = pathway proliferation rate,
-    lam1A = dominant eigenvalue, mlam1A = multiplicity of dominant
-    eigenvalue, rho = damping ratio,
-    R = distance of the dominant eigen value from the eigen spectra, d =
-    difference between dominant eigen value and link density, no.scc = number of strongly connected components,
-    no.scc.big = number of strongly connected components with more than
-    one node, pscc = percent of nodes in strongly connected components.
-  }
-}
+\item{A}{
 
-\references{
-  Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network
-  Environ Analysis.  Environ. Model. Softw. 21, 375-405.
+} \item{ns}{A vector of structure based network statistics. These include n
+= number of nodes, L = number of edges, C = connectivity, LD = link density,
+ppr = pathway proliferation rate, lam1A = dominant eigenvalue, mlam1A =
+multiplicity of dominant eigenvalue, rho = damping ratio, R = distance of
+the dominant eigen value from the eigen spectra, d = difference between
+dominant eigen value and link density, no.scc = number of strongly connected
+components, no.scc.big = number of strongly connected components with more
+than one node, pscc = percent of nodes in strongly connected components.  }
 }
-
-\author{
-  Matthew K. Lau (mkl48@nau.edu)
-  Stuart R. Borrett (borretts@uncw.edu)
+\description{
+S. Borrett and M. Lau | March 2011
+---------------------------------------------------
+enaStructure --- performes strucutral analysis of the network graph (see
+Borrett et al. 2007) INPUT = network object OUTPUT = list of structure
+statistics
 }
+\details{
+S. Borrett and M. Lau | March 2011
+--------------------------------------------------- enaStructure ---
+performes strucutral analysis of the network graph (see Borrett et al. 2007)
+INPUT = network object OUTPUT = list of structure statistics
 
+S. Borrett and M. Lau | March 2011
+--------------------------------------------------- Structure Analyses of
+Ecological Network
 
-\seealso{
-  \code{\link{structure.statistics}}
+Analysis of the structure of an ecological flow network.
 }
 \examples{
+
+
+
 data(troModels)
 enaStructure(troModels[[6]])
+
+
+
+}
+\author{
+Matthew K. Lau Stuart R. Borrett
+}
+\references{
+Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network
+Environ Analysis.  Environ. Model. Softw. 21, 375-405.
 }
+\seealso{
+\code{\link{structure.statistics}}
+}
+
diff --git a/man/enaTroAgg.Rd b/man/enaTroAgg.Rd
index 2a4bbee..34ca5a1 100644
--- a/man/enaTroAgg.Rd
+++ b/man/enaTroAgg.Rd
@@ -1,64 +1,94 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/enaTroAgg.R
 \name{enaTroAgg}
 \alias{enaTroAgg}
-\title{
-  Trophic Aggregations (TroAgg) Analysis
-}
-\description{
-  It returns the data quantifying the underlying trophic structure of a given model based on the interaction of the living and non-living nodes. It is based on the Trophic Aggregations suggested by Lindeman (1942) and follows the algorithm by Ulanowicz and Kemp (1979) implemented in NETWRK 4.2b. It removes the Feeding cycles in the network beforehand to provide accurate results.
-}
+\title{Trophic Aggregations (TroAgg) Analysis}
 \usage{
 enaTroAgg(x)
 }
 \arguments{
-  \item{x}{a network object.  This includes all weighted flows into and out of each node. It should include separate respiration and export values for the Canonical Exports and Canonical Respirations results respectively. It must also include the "Living" vector that identifies the living (TRUE/FALSE) status of each node. It must contain the non-living nodes at the end of the node vector, the function \code{\link{netOrder}} can be used for the same.
-  }
+\item{x}{a network object.  This includes all weighted flows into and out of
+each node. It should include separate respiration and export values for the
+Canonical Exports and Canonical Respirations results respectively. It must
+also include the "Living" vector that identifies the living (TRUE/FALSE)
+status of each node. It must contain the non-living nodes at the end of the
+node vector, the function \code{\link{netOrder}} can be used for the same.}
+}
+\value{
+\item{Feeding_Cycles}{List that gives the details of the Feeding
+Cycles in the network. The output being according to the enaCycle function
+applied to the Living components in the network} \item{A}{matrix that
+distributes the species in integer Trophic Levels (Lindeman Transformation
+Matrix). The dimension of A is (NL X NL) where NL is the number of Living
+nodes.} \item{ETL}{vector of the Effective Trophic Level of each species.}
+\item{M.flow}{vector of the Migratory flows, if present, in the network.}
+\item{CI}{vector of Canonical Inputs to the integer trophic levels.
+Displayed if the Migratory flows are present.} \item{CE}{vector of Canonical
+exports or the exports from the integer trophic levels} \item{CR}{vector of
+the Canonical Respirations or the respiration values for integer trophic
+levels. } \item{GC}{vector of the input flow to a trophic level from the
+preceeding trophic level. It represents the Grazing Chain for the network.}
+\item{RDP}{vector of the Returns to Detrital Pool from each trophic level. }
+\item{LS}{vector of the Lindeman trophic spine. It combines the Detrital
+pool with the autotrophs and forms a monotonically decreasing sequence of
+flows from one trophic level to the next, starting with the said
+combination.} \item{TE}{vector of the trophic efficiencies i.e. the ratio of
+input to a trophic level to the amount of flow that is passed on the next
+level from it. } \item{ns}{vector of trophic aggregations based network
+statistics. These include "Detritivory" the flow from the detrital pool to
+the second trophic level, "DetritalInput" the exogenous inputs to the
+detrital pool, "DetritalCirc" the circulation within the detrital pool,
+"NCYCS" the number of feeding cycles removed, "NNEX" the number of feeding
+cycle Nexuses removed and "CI" the Cycling Index for the Feeding Cycles.  }
+}
+\description{
+It returns the data quantifying the underlying trophic structure of a given
+model based on the interaction of the living and non-living nodes. It is
+based on the Trophic Aggregations suggested by Lindeman (1942) and follows
+the algorithm by Ulanowicz and Kemp (1979) implemented in NETWRK 4.2b. It
+removes the Feeding cycles in the network beforehand to provide accurate
+results.
+}
+\note{
+This and other Ulanowicz school functions require that export and
+respiration components of output be separately quantified.
 
+This analysis involves the ENA Cycle analysis for removal of the Feeding
+Cycles in the network. These are cycles amongst only the living nodes and
+cause error in the trophic aggregations.
+
+The analysis requires all the non-living nodes to be placed at the end in
+the network object.
 }
+\examples{
 
 
-\value{
-  \item{Feeding_Cycles}{List that gives the details of the Feeding Cycles in the network. The output being according to the enaCycle function applied to the Living components in the network}
-  \item{A}{matrix that distributes the species in integer Trophic Levels (Lindeman Transformation Matrix). The dimension of A is (NL X NL) where NL is the number of Living nodes.}
-  \item{ETL}{vector of the Effective Trophic Level of each species.}
-  \item{M.flow}{vector of the Migratory flows, if present, in the network.}
-  \item{CI}{vector of Canonical Inputs to the integer trophic levels. Displayed if the Migratory flows are present.}
-  \item{CE}{vector of Canonical exports or the exports from the integer trophic levels}
-  \item{CR}{vector of the Canonical Respirations or the respiration values for integer trophic levels. } 
-  \item{GC}{vector of the input flow to a trophic level from the preceeding trophic level. It represents the Grazing Chain for the network.} 
-  \item{RDP}{vector of the Returns to Detrital Pool from each trophic level. }
-  \item{LS}{vector of the Lindeman trophic spine. It combines the Detrital pool with the autotrophs and forms a monotonically decreasing sequence of flows from one trophic level to the next, starting with the said combination.}
-  \item{TE}{vector of the trophic efficiencies i.e. the ratio of input to a trophic level to the amount of flow that is passed on the next level from it. }
-  \item{ns}{vector of trophic aggregations based network statistics. These include "Detritivory" the flow from the detrital pool to the second trophic level, "DetritalInput" the exogenous inputs to the detrital pool, "DetritalCirc" the circulation within the detrital pool, "NCYCS" the number of feeding cycles removed, "NNEX" the number of feeding cycle Nexuses removed and "CI" the Cycling Index for the Feeding Cycles.
-  	}
 
-}
-\references{
-  %% ~put references to the literature/web site here ~
-  Lindeman, R.L. 1942. The trophic-dynamic aspect of ecology. Ecology 23:399--418.
+data(troModels)
+tro6 <- enaTroAgg(troModels[[6]])
+attributes(tro6)
 
-  Ulanowicz, R.E. and Kemp, W.M.  1979. Towards canonical trophic aggregations. The American Naturalist. 114:871--883.
 
-  Ulanowicz, R.E. 1995. Ecosystem trophic foundations: Lindeman exonerata. pp. 549--560. B.C. Patten and S.E. Jorgensen (eds.) Complex Ecology: The part-whole relation in ecosystems. Prentice Hall, New Jersey.
 
-  Ulanowicz, R.E. and Kay, J.J. 1991. A package for the analysis of ecosystem flow networks. Environmental Software 6:131 -- 142.
 }
 \author{
-  Pawandeep Singh (pawan.s@live.co.uk)
-  }
-\note{
-  This and other Ulanowicz school functions require that export and
-  respiration components of output be separately quantified.
+Pawandeep Singh
+}
+\references{
+%% ~put references to the literature/web site here ~ Lindeman,
+R.L. 1942. The trophic-dynamic aspect of ecology. Ecology 23:399--418.
+
+Ulanowicz, R.E. and Kemp, W.M.  1979. Towards canonical trophic
+aggregations. The American Naturalist. 114:871--883.
 
-  This analysis involves the ENA Cycle analysis for removal of the Feeding Cycles in the network. These are cycles amongst only the living nodes and cause error in the trophic aggregations.
-  
-  The analysis requires all the non-living nodes to be placed at the end in the network object.
- 
+Ulanowicz, R.E. 1995. Ecosystem trophic foundations: Lindeman exonerata. pp.
+549--560. B.C. Patten and S.E. Jorgensen (eds.) Complex Ecology: The
+part-whole relation in ecosystems. Prentice Hall, New Jersey.
+
+Ulanowicz, R.E. and Kay, J.J. 1991. A package for the analysis of ecosystem
+flow networks. Environmental Software 6:131 -- 142.
 }
 \seealso{
-  \code{\link{enaCycle}, \link{netOrder}}
-}
-\examples{
-data(troModels)
-tro6 <- enaTroAgg(troModels[[6]])
-attributes(tro6)
+\code{\link{enaCycle}, \link{netOrder}}
 }
+
diff --git a/man/enaUtility.Rd b/man/enaUtility.Rd
index 1f342c8..28e9555 100644
--- a/man/enaUtility.Rd
+++ b/man/enaUtility.Rd
@@ -1,93 +1,106 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/enaUtility.R
 \name{enaUtility}
 \alias{enaUtility}
-\title{
-  Utility Analysis of Ecological Networks
-}
-\description{
-  Performs the flow and storage based utility analysis
-  developed for input-output network models of ecosystems.  It returns a
-  set of matrices for the direct and integral utilities as well as a set
-  of utility based network statistics.
-}
+\title{enautility --- utility analysis of a flow network
+INPUT = network object
+OUTPUT = list of utility statistics}
 \usage{
-enaUtility(x,type=c("flow","storage"),eigen.check=TRUE,balance.override=FALSE,tol=10)
+enaUtility(x, type = c("flow", "storage"), eigen.check = TRUE,
+  balance.override = FALSE, tol = 10)
 }
 \arguments{
-  \item{x}{a network object.  This includes all weighted flows into and out of
-    each node.  For the storage utility analysis this must also include
-    the amount of energy--matter stored at each node (biomass).
-  }
-  \item{type}{
-    Determines whether the flow or storage utility analysis is returned.
-  }
+\item{x}{a network object.  This includes all weighted flows into and out of
+each node.  For the storage utility analysis this must also include the
+amount of energy--matter stored at each node (biomass).}
 
-  \item{eigen.check}{LOGICAL: should the dominant eigenvalue be checked.  Like enaFlow and
-    enaStorage analyses, enaUtility analysis considers the utility
-    propigated over path lengths ranging for zero to infinity.  For utility
-    analysis to work properly, the path sequence must converge.  enaUtility
-    checks to see if the utility path sequence is convergent by finding the
-    dominant eigenvalue of the direct utility matrix.  If this eigenvalue is
-    less than 1, the sequence is convergent and the analysis can be applied;
-    if the dominant eigenvalue is greater than one, then the anlysis cannot
-    be applied.  By default, the function will not return utility values if
-    the eigenvalue is larger than one; however, if eigen.check is set to
-    FALSE, then the function will be applied regardless of the mathematic
-    validity.
-  }
-  \item{balance.override}{LOGICAL: should model balancing be ignored.
-    enaUtility assumes that the network model is at steady-state.  The
-    default setting will not allow the function to be applied to models
-    not at steady-state.  However, when balance.override is set to TRUE,
-    then the function will work regardless.
-  }
-  \item{tol}{The integral utility matrix is rounded to the number of
-    digits specified in tol.  This approximation eleminates very small
-    numbers introduced due to numerical error in the ginv function.  It
-    does not eliminate the small numerical error introduced in larger
-    values, but does truncate the numbers.
-}
+\item{type}{Determines whether the flow or storage utility analysis is
+returned.}
 
-}
+\item{eigen.check}{LOGICAL: should the dominant eigenvalue be checked.  Like
+enaFlow and enaStorage analyses, enaUtility analysis considers the utility
+propigated over path lengths ranging for zero to infinity.  For utility
+analysis to work properly, the path sequence must converge.  enaUtility
+checks to see if the utility path sequence is convergent by finding the
+dominant eigenvalue of the direct utility matrix.  If this eigenvalue is
+less than 1, the sequence is convergent and the analysis can be applied; if
+the dominant eigenvalue is greater than one, then the anlysis cannot be
+applied.  By default, the function will not return utility values if the
+eigenvalue is larger than one; however, if eigen.check is set to FALSE, then
+the function will be applied regardless of the mathematic validity.}
+
+\item{balance.override}{LOGICAL: should model balancing be ignored.
+enaUtility assumes that the network model is at steady-state.  The default
+setting will not allow the function to be applied to models not at
+steady-state.  However, when balance.override is set to TRUE, then the
+function will work regardless.}
 
+\item{tol}{The integral utility matrix is rounded to the number of digits
+specified in tol.  This approximation eleminates very small numbers
+introduced due to numerical error in the ginv function.  It does not
+eliminate the small numerical error introduced in larger values, but does
+truncate the numbers.}
+}
 \value{
-  \item{D}{Direct flow utility intensity matrix.  (fij-fji)/Ti for
-    i,j=1:n}
-  \item{U}{Nondimensional integral flow utility}
-  \item{Y}{Dimensional integral flow utility}
-  \item{ns}{If type is set to 'flow', this is a list of flow utility network statistics including: the
-    dominant eigenvalue of D (lambda\_1D), flow based network
-    synergism (synergism.F), and flow based network mutualism (mutualism.F).}
-  \item{DS}{Direct storage utility intensity matrix.  (fij-fji)/xi for
-    i,j=1:n}
-  \item{US}{Nondimensional integral storage utility}
-  \item{YS}{Dimensional integral storage utility}
-  \item{ns}{If type is set to 'storage', this is a list of storage utility network statistics including: the
-    dominant eigenvalue of DS (lambda_1DS), storage based network
-    synergism (synergism.S), and storage based network mutualism (mutualism.S).}
+\item{D}{Direct flow utility intensity matrix.  (fij-fji)/Ti for
+i,j=1:n} \item{U}{Nondimensional integral flow utility} \item{Y}{Dimensional
+integral flow utility} \item{ns}{If type is set to 'flow', this is a list of
+flow utility network statistics including: the dominant eigenvalue of D
+(lambda\_1D), flow based network synergism (synergism.F), and flow based
+network mutualism (mutualism.F).} \item{DS}{Direct storage utility intensity
+matrix.  (fij-fji)/xi for i,j=1:n} \item{US}{Nondimensional integral storage
+utility} \item{YS}{Dimensional integral storage utility} \item{ns}{If type
+is set to 'storage', this is a list of storage utility network statistics
+including: the dominant eigenvalue of DS (lambda_1DS), storage based network
+synergism (synergism.S), and storage based network mutualism (mutualism.S).}
 }
-\references{
-  Fath, B.D. and Patten, B.C. 1998. Network synergism: emergence of
-  positive relations in ecological systems.
-  Ecol. Model. 107:127--143.
+\description{
+M. Lau | July 2011
+---------------------------------------------------
+enautility --- utility analysis of a flow network INPUT = network object
+OUTPUT = list of utility statistics
+}
+\details{
+M. Lau | July 2011 ---------------------------------------------------
+enautility --- utility analysis of a flow network INPUT = network object
+OUTPUT = list of utility statistics
 
-  Fath, B.D. and Borrett, S.R. 2006. A Matlab function for Network
-  Environ Analysis. Environ. Model. Soft. 21: 375--405.
+M. Lau | July 2011 ---------------------------------------------------
+Utility Analysis of Ecological Networks
 
-  Patten, B.C. 1991.  Network ecology: Indirect determination of the
-  life-environment relationship in ecosystems.  In: Higashi, M. and
-  Burns, T. (eds). Theoretical Studies of Ecosystems: The Network
-  Perspective.  Cambridge University Press.  New York.  
-}
-\author{
-  Matthew K. Lau (mkl48@nau.edu)
-  Stuart R. Borrett (borretts@uncw.edu)
-}
-\seealso{
-  \code{\link{enaFlow},\link{enaStorage},\link{enaMTI}}
+Performs the flow and storage based utility analysis developed for
+input-output network models of ecosystems.  It returns a set of matrices for
+the direct and integral utilities as well as a set of utility based network
+statistics.
 }
 \examples{
+
+
+
 data(troModels)
-U <- enaUtility(troModels[[6]],type="flow",eigen.check=FALSE)
+U <- enaUtility(troModels[[6]], type = "flow", eigen.check = FALSE)
 attributes(U)
-US <-enaUtility(troModels[[6]],type="storage",eigen.check=FALSE)
+US <- enaUtility(troModels[[6]], type = "storage", eigen.check = FALSE)
+
+
+
+}
+\author{
+Matthew K. Lau Stuart R. Borrett
 }
+\references{
+Fath, B.D. and Patten, B.C. 1998. Network synergism: emergence
+of positive relations in ecological systems.  Ecol. Model. 107:127--143.
+
+Fath, B.D. and Borrett, S.R. 2006. A Matlab function for Network Environ
+Analysis. Environ. Model. Soft. 21: 375--405.
+
+Patten, B.C. 1991.  Network ecology: Indirect determination of the
+life-environment relationship in ecosystems.  In: Higashi, M. and Burns, T.
+(eds). Theoretical Studies of Ecosystems: The Network Perspective. Cambridge
+University Press.  New York.
+}
+\seealso{
+\code{\link{enaFlow},\link{enaStorage},\link{enaMTI}}
+}
+
diff --git a/man/environCentrality.Rd b/man/environCentrality.Rd
index 065de20..0547eb2 100644
--- a/man/environCentrality.Rd
+++ b/man/environCentrality.Rd
@@ -1,49 +1,65 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/environCentrality.R
 \name{environCentrality}
 \alias{environCentrality}
-\title{
-  Environ Centrality an Ecological Network
-}
-\description{
-  This function calculates the input, output, and average environ
-  centrality of the nodes in the network (Fath and Borret, 2012).  This
-  is a type of weighted degree centrality that indicates the relative importance
-  of the nodes in the flow activity in the network.
-}
+\title{environCentrality --- calculates the centrality of 
+flow network environs
+INPUT = environ matrix
+OUTPUT = in-going, out-going and average centralities}
 \usage{
-environCentrality(x='matrix')
+environCentrality(x = "matrix")
 }
-
 \arguments{
-  \item{x}{A square matrix.  Usually the integral flow marix from
-    enaFlow.  The assumption is that the flows are oriented column to row.
-  }
+\item{x}{A square matrix.  Usually the integral flow marix from enaFlow. The
+assumption is that the flows are oriented column to row.}
 }
-
 \value{
-\item{ECin}{input oriented environ centrality}
-\item{ECout}{output oriented environ centraility}
-\item{AEC}{average environ centrality (average of input and output)}
-}
-\references{
-  Fann, S.L. and Borrett, S.R. 2012. Environ centrality reveals the
-  tendency of indirect effects to homogenize the functional importance
-  of species in ecosystems.  Journal of Theoretical Biology 294: 74-86.
+\item{ECin}{input oriented environ centrality} \item{ECout}{output
+oriented environ centraility} \item{AEC}{average environ centrality (average
+of input and output)}
 }
-\author{
-  Matthew K. Lau (mkl48@nau.edu)
-  Stuart R. Borrett (borretts@uncw.edu)
+\description{
+M. Lau | July 2011
+---------------------------------------------------
+environCentrality --- calculates the centrality of flow network environs
+INPUT = environ matrix OUTPUT = in-going, out-going and average centralities
 }
+\details{
+M. Lau | July 2011 ---------------------------------------------------
+environCentrality --- calculates the centrality of flow network environs
+INPUT = environ matrix OUTPUT = in-going, out-going and average centralities
 
-\seealso{
-  \code{\link{enaFlow}}
+M. Lau | July 2011 ---------------------------------------------------
+Environ Centrality an Ecological Network
+
+This function calculates the input, output, and average environ centrality
+of the nodes in the network (Fath and Borret, 2012).  This is a type of
+weighted degree centrality that indicates the relative importance of the
+nodes in the flow activity in the network.
 }
 \examples{
-data(troModels) 
-F<-enaFlow(troModels[[6]])
-ec<-environCentrality(F$N)
+
+
+
+data(troModels)
+F <- enaFlow(troModels[[6]])
+ec <- environCentrality(F$N)
 attributes(ec)
-barplot(sort(ec$AEC,decreasing=TRUE),col=4,
-   ylab="Average Environ Centrality",
-   ylim=c(0,0.4))
+barplot(sort(ec$AEC, decreasing = TRUE), col = 4, ylab = "Average Environ Centrality", 
+    ylim = c(0, 0.4))
+
+
+
+}
+\author{
+Matthew K. Lau Stuart R. Borrett
+}
+\references{
+Fann, S.L. and Borrett, S.R. 2012. Environ centrality reveals
+the tendency of indirect effects to homogenize the functional importance of
+species in ecosystems.  Journal of Theoretical Biology 294: 74-86.
+}
+\seealso{
+\code{\link{enaFlow}}
 }
 
diff --git a/man/findPathLength.Rd b/man/findPathLength.Rd
index a69872d..9f8a664 100644
--- a/man/findPathLength.Rd
+++ b/man/findPathLength.Rd
@@ -1,51 +1,69 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/findPathLength.R
 \name{findPathLength}
 \alias{findPathLength}
-\title{
-  Cumulative Flow over a Range of Path Lengths
-}
-\description{
-  Calculates the flow throughout the entire network over a given path length.
-}
+\title{findPathLength --- calculates the flows over a 
+sequence up to a maximum path length
+INPUT = network object
+OUTPUT = a list of flow statistics over paths}
 \usage{
 findPathLength(x, maxPath = 100, plot.sw = FALSE)
 }
 \arguments{
-  \item{x}{
-    Network model object.
-  }
-  \item{maxPath}{
-    The maximum path length to calculate total flow.
-  }
-  \item{plot.sw}{
-    LOGICAL: should a plot be generated showing flow accumulation?
-  }
-}
+\item{x}{Network model object.}
 
-\value{
-  \item{thresholds}{thresholds indicating the development of throughflow
-    as path length increases:  the path length at which indirect flow
-    exceeds direct flow (mID), path length at which 50\%, 90\%, and 95\%
-    of total system throughflow is achieved (m50, m90, and m95, respectively)}
-  \item{tf}{total flow across paths from length 0 (Boundary inputs) to maxPath}
-  \item{ctf}{cumulative total flow from path length 0 to maxPath}
+\item{maxPath}{The maximum path length to calculate total flow.}
+
+\item{plot.sw}{LOGICAL: should a plot be generated showing flow
+accumulation?}
 }
-\references{
-  Borrett, S.R, Patten, B.C., Whipple, S.J. 2010.  Rapid development of
-  indirect effects in ecological networks.  Oikos 119:1136--1148.  
+\value{
+\item{thresholds}{thresholds indicating the development of
+throughflow as path length increases: the path length at which indirect flow
+exceeds direct flow (mID), path length at which 50\%, 90\%, and 95\% of
+total system throughflow is achieved (m50, m90, and m95, respectively)}
+\item{tf}{total flow across paths from length 0 (Boundary inputs) to
+maxPath} \item{ctf}{cumulative total flow from path length 0 to maxPath}
 }
-\author{
-  Matthew K. Lau (mkl48@nau.edu)
-  Stuart R. Borrett (borretts@uncw.edu)
+\description{
+S. Borrett and M. Lau | July 2011
+---------------------------------------------------
+findPathLength --- calculates the flows over a sequence up to a maximum path
+length INPUT = network object OUTPUT = a list of flow statistics over paths
 }
+\details{
+S. Borrett and M. Lau | July 2011
+--------------------------------------------------- findPathLength ---
+calculates the flows over a sequence up to a maximum path length INPUT =
+network object OUTPUT = a list of flow statistics over paths
 
+S. Borrett and M. Lau | July 2011
+--------------------------------------------------- Cumulative Flow over a
+Range of Path Lengths
 
-\seealso{
-  \code{\link{enaFlow}}
+Calculates the flow throughout the entire network over a given path length.
 }
 \examples{
+
+
+
 data(troModels)
-pl10 <- findPathLength(troModels[[6]], plot.sw=TRUE,maxPath=10)
+pl10 <- findPathLength(troModels[[6]], plot.sw = TRUE, maxPath = 10)
 names(pl10)
 pl10$thresholds
+
+
+
+}
+\author{
+Matthew K. Lau Stuart R. Borrett
+}
+\references{
+Borrett, S.R, Patten, B.C., Whipple, S.J. 2010.  Rapid
+development of indirect effects in ecological networks.  Oikos
+119:1136--1148.
+}
+\seealso{
+\code{\link{enaFlow}}
 }
 
diff --git a/man/force.balance.Rd b/man/force.balance.Rd
index 29151ed..7a80532 100644
--- a/man/force.balance.Rd
+++ b/man/force.balance.Rd
@@ -1,50 +1,61 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/force.balance.R
 \name{force.balance}
 \alias{force.balance}
-\title{
-  Repeated Application the Balance Function
-}
-\description{
-  This function repeatedly balances a model, sequentially with the output
-  being passed back to the balance function, until it is within tolerance
-  or the maximum number of iterations is reached. 
-}
+\title{force.balance --- repeatedly applies balance until 
+sub-tolerance is reached
+INPUT = network model
+OUTPUT = balanced model
+M. Lau 1 Oct 2012
+---------------------------------------------------
+force.balance --- repeatedly applies balance until sub-tolerance is reached
+INPUT = network model OUTPUT = balanced model M. Lau 1 Oct 2012
+--------------------------------------------------- force.balance ---
+repeatedly applies balance until sub-tolerance is reached INPUT = network
+model OUTPUT = balanced model M. Lau 1 Oct 2012
+--------------------------------------------------- Repeated Application the
+Balance Function}
 \usage{
-force.balance(x,tol=5,max.itr=10,method='AVG2')
+force.balance(x, tol = 5, max.itr = 10, method = "AVG2")
 }
-
 \arguments{
-  \item{x}{
-    A network object.
-  }
-  \item{tol}{
-    Percent error tolerance for difference between inputs and outputs.
-  }
-  \item{max.itr}{
-    Maximum number iterations.
-  }
-  \item{method}{
-    The balancing method to use, see balance. DEFAULT = AVG2.
-  }
-}
+\item{x}{A network object.}
+
+\item{tol}{Percent error tolerance for difference between inputs and
+outputs.}
+
+\item{max.itr}{Maximum number iterations.}
 
+\item{method}{The balancing method to use, see balance. DEFAULT = AVG2.}
+}
 \value{
-  Returns a balanced network model.
+Returns a balanced network model.
 }
-\references{
-  Allesina, S., Bondavalli, C., 2003.Steady state of ecosystem flow
-  networks: a comparison between balancing procedures.Ecological Modelling 165(2-3):231-239.
+\description{
+This function repeatedly balances a model, sequentially with the output
+being passed back to the balance function, until it is within tolerance or
+the maximum number of iterations is reached.
+}
+\examples{
+
+
+
+data(troModels)
+ssCheck(troModels[[1]])
+fb.model = force.balance(troModels[[2]])  #produces a balanced model
+
+
+
 }
 \author{
-  Matthew K. Lau (mkl48@nau.edu)
-  Stuart R. Borrett (borretts@uncw.edu)
+Matthew K. Lau Stuart R. Borrett
+}
+\references{
+Allesina, S., Bondavalli, C., 2003.Steady state of ecosystem
+flow networks: a comparison between balancing procedures.Ecological
+Modelling 165(2-3):231-239.
 }
-
 \seealso{
 \code{\link{balance}}
 }
 
-\examples{
-data(troModels)
-ssCheck(troModels[[1]])
-fb.model=force.balance(troModels[[2]]) #produces a balanced model
-}
\ No newline at end of file
diff --git a/man/get.ns.Rd b/man/get.ns.Rd
index c42a564..a9e5767 100644
--- a/man/get.ns.Rd
+++ b/man/get.ns.Rd
@@ -1,45 +1,57 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/get.ns.R
 \name{get.ns}
 \alias{get.ns}
-\title{
-  Quick Calculation of a Range of Network Statistics.
-}
-\description{
-  This is a high level function for calculated the main network analyses
-  (Ascendancy, Flow, Structure, Storage and Utility) on an ecological
-  network. 
-}
+\title{get.ns.R
+Input = network model
+Output = a vector of global network statistics from ena}
 \usage{
-get.ns(x, balance.override=FALSE)
+get.ns(x, balance.override = FALSE)
 }
 \arguments{
-  \item{x}{
-    A network object.
-  }
-  \item{balance.override}{
-    Turns off balancing and balance checking.
-  }
-}
+\item{x}{A network object.}
 
-\value{
-  Returns the network statistics (ns) of all of the major ENA functions:
-  enaStructure, enaFlow, enaAscendency, enaStorage and enaUtility (both
-  flow and storage).
-}
-\references{
-  Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network
-  Environ Analysis.  Environ. Model. Softw. 21, 375-405.
+\item{balance.override}{Turns off balancing and balance checking.}
 }
-\author{
-Matthew K. Lau (mkl48@nau.edu)
-Stuart R. Borrett (borretts@uncw.edu)
-David E. Hines (deh9951@uncw.edu)
+\value{
+Returns the network statistics (ns) of all of the major ENA
+functions: enaStructure, enaFlow, enaAscendency, enaStorage and enaUtility
+(both flow and storage).
 }
+\description{
+Borrett | July 4, 2012
+-----------------------------------
+get.ns.R Input = network model Output = a vector of global network
+statistics from ena
+}
+\details{
+Borrett | July 4, 2012 ----------------------------------- get.ns.R Input =
+network model Output = a vector of global network statistics from ena
 
-\seealso{
-\code{\link{enaStructure}},\code{\link{enaFlow}},\code{\link{enaAscendency}},\code{\link{enaUtility}}
+Borrett | July 4, 2012 ----------------------------------- Quick Calculation
+of a Range of Network Statistics.
 
+This is a high level function for calculated the main network analyses
+(Ascendancy, Flow, Structure, Storage and Utility) on an ecological network.
 }
 \examples{
+
+
+
 data(troModels)
 get.ns(troModels[[6]])
+
+
+
+}
+\author{
+Matthew K. Lau Stuart R. Borrett David E. Hines
 }
+\references{
+Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network
+Environ Analysis.  Environ. Model. Softw. 21, 375-405.
+}
+\seealso{
+\code{\link{enaStructure}},\code{\link{enaFlow}},\code{\link{enaAscendency}},\code{\link{enaUtility}}
+}
+
diff --git a/man/get.orient.Rd b/man/get.orient.Rd
index 1c02be5..58f5298 100644
--- a/man/get.orient.Rd
+++ b/man/get.orient.Rd
@@ -1,61 +1,35 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/get.orient.R
 \name{get.orient}
 \alias{get.orient}
-
-\title{
-  Get the Current Global Matrix Orientation Setting
-}
-\description{
-  Returns the current setting for the expected orientation of all
-  matrices, which is either 'rc' (DEFAULT) or 'school' (output orientation
-  as expected for the school of analysis for a given function). 
-}
+\title{get.orient --- returns the global orientation
+INPUT = none
+OUTPUT = returns the current orientation of matrices}
 \usage{
 get.orient()
 }
+\description{
+M. Lau | 16 Jun 2013
+---------------------------------------------------
+get.orient --- returns the global orientation INPUT = none OUTPUT = returns
+the current orientation of matrices
+}
+\details{
+M. Lau | 16 Jun 2013 ---------------------------------------------------
+get.orient --- returns the global orientation INPUT = none OUTPUT = returns
+the current orientation of matrices
 
-%- maybe also 'usage' for other objects documented here.
-%%%No arguments as input.
-% \arguments{
-%   \item{x}{
-% %%     ~~Describe \code{x} here~~
-% Orientation option. If "rc" inputs = rows, outputs = columns. If "cr"
-% inputs = columns, outputs = rows.
-% }
+M. Lau | 16 Jun 2013 --------------------------------------------------- Get
+the Current Global Matrix Orientation Setting
 
-% }
+Returns the current setting for the expected orientation of all matrices,
+which is either 'rc' (DEFAULT) or 'school' (output orientation as expected
+for the school of analysis for a given function).
 
-\details{
-  This function is intended to provide increase flexibility for users of
-  both the Patten and Ulanowicz schools of ENA. 
+This function is intended to provide increase flexibility for users of both
+the Patten and Ulanowicz schools of ENA.
 }
-% \value{
-% %%  ~Describe the value returned
-% %%  If it is a LIST, use
-% %%  \item{comp1 }{Description of 'comp1'}
-% %%  \item{comp2 }{Description of 'comp2'}
-% %% ...
-% }
-
-% \references{
-% %% ~put references to the literature/web site here ~
-% Allesina, S., Bondavalli, C., 2003. Steady state of ecosystem flow
-% networks: a comparison between balancing procedures.Ecological Modelling 165(2-3):231-239.
-% }
-
 \author{
-%%  ~~who you are~~
-Matthew K. Lau (mkl48@nau.edu)
-Stuart R. Borrett (borretts@uncw.edu)
+%% ~~who you are~~ Matthew K. Lau Stuart R. Borrett
 }
 
-
-%% ~Make other sections like Warning with \section{Warning }{....} ~
-
-% \seealso{
-% %% ~~objects to See Also as \code{\link{help}}, ~~~
-% }
-
-% \examples{
-% }
-
-
diff --git a/man/m.list.Rd b/man/m.list.Rd
index 93c9cc5..ed30805 100644
--- a/man/m.list.Rd
+++ b/man/m.list.Rd
@@ -1,18 +1,15 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/enaR-package.R
+\docType{data}
 \name{m.list}
 \alias{m.list}
-\docType{data}
-\title{
-  Sub-set of the Larger Ecosystem Models
-}
+\title{Sub-set of the Larger Ecosystem Models}
 \description{
 A set of ecosystem models compiled by the SEE Lab at UNCW.
 }
-
 \references{
-  Borrett, S. R., and M. K. Lau. In Prep. enaR: An R package for
-  Ecological Network Analysis. Ecological Modeling and Software.
+Borrett, S. R., and M. K. Lau. In Prep. enaR: An R package for
+Ecological Network Analysis. Ecological Modeling and Software.
 }
-\usage{data(enaModels)}
-
-
 \keyword{datasets}
+
diff --git a/man/mExp.Rd b/man/mExp.Rd
index 43455c5..c7ef5ca 100644
--- a/man/mExp.Rd
+++ b/man/mExp.Rd
@@ -1,38 +1,49 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/mExp.R
 \name{mExp}
 \alias{mExp}
-\title{
-  Calculates the Exponent of a Matrix
-}
-\description{
-  Function for calculating the pathway proliferation of flows in a network
-  model through matrix exponentiation.
-}
+\title{# mExp --- calculate the exponent of a given matrix
+# INPUT = a matrix (x) and the exponent (n)
+# OUTPUT = the resulting exponentiated matrix
+# 
+# Alberto Monteiro (https://stat.ethz.ch/pipermail/
+# r-help/2007-May/131330.html)
+# ___________________________________________________
+# mExp --- calculate the exponent of a given matrix # INPUT = a matrix (x)
+and the exponent (n) # OUTPUT = the resulting exponentiated matrix # #
+Alberto Monteiro (https://stat.ethz.ch/pipermail/ #
+r-help/2007-May/131330.html) #
+___________________________________________________ # mExp --- calculate the
+exponent of a given matrix # INPUT = a matrix (x) and the exponent (n) #
+OUTPUT = the resulting exponentiated matrix # # Alberto Monteiro
+(https://stat.ethz.ch/pipermail/ # r-help/2007-May/131330.html) #
+___________________________________________________ Calculates the Exponent
+of a Matrix}
 \usage{
-mExp(x='matrix', n=2)
+mExp(x = "matrix", n = 2)
 }
 \arguments{
-  \item{x}{
-    A matrix.
-  }
-  \item{n}{
-    Desired exponent (i.e. the path length).
-  }
-}
+\item{x}{A matrix.}
 
+\item{n}{Desired exponent (i.e. the path length).}
+}
 \value{
-  Returns an exponentiated flow matrix.
+Returns an exponentiated flow matrix.
 }
-\references{
-  This function was originally designed by Alberto Monteiro in the
-  following R help thread:
-  https://stat.ethz.ch/pipermail/r-help/2007-May/131330.html.
+\description{
+Function for calculating the pathway proliferation of flows in a network
+model through matrix exponentiation.
 }
 \author{
-  Alberto Monteiro (https://stat.ethz.ch/pipermail/r-help/2007-May/131330.html)
-  Matthew K. Lau (mkl48@nau.edu)
+Alberto Monteiro
+(https://stat.ethz.ch/pipermail/r-help/2007-May/131330.html) Matthew K. Lau
+}
+\references{
+This function was originally designed by Alberto Monteiro in the
+following R help thread:
+https://stat.ethz.ch/pipermail/r-help/2007-May/131330.html.
 }
-
 \seealso{
-  \code{\link{findPathLength}}
+\code{\link{findPathLength}}
 }
 
diff --git a/man/netOrder.Rd b/man/netOrder.Rd
index fb70cc2..a2195db 100644
--- a/man/netOrder.Rd
+++ b/man/netOrder.Rd
@@ -1,44 +1,60 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/netOrder.R
 \name{netOrder}
 \alias{netOrder}
-\title{
-  Reorder Nodes in a Network in enaR
-}
-\description{
-	Reorders nodes in a network either through a user defined node order vector or by default places the non-living nodes to the end of the node vector, minimizing the order change for other nodes.
-}
+\title{## Function to order the nodes in a Network in enaR
+## Singh P. | July 2014
+## -----------------------------------------
+## Function to order the nodes in a Network in enaR ## Singh P. | July 2014
+## ----------------------------------------- ## Function to order the nodes
+in a Network in enaR ## Singh P. | July 2014 ##
+----------------------------------------- Reorder Nodes in a Network in enaR}
 \usage{
-netOrder(x,order)
+netOrder(x, order = 0)
 }
 \arguments{
-  \item{x}{
-    A network object. This includes all weighted flows into and out of each node. 
-  }
-  \item{order}{
-  	An integer vector of length N, where N is number of nodes in x, specifying the new order of the nodes (by default order = 0, which indicates moving non-living nodes to the end)
-  }
+\item{x}{A network object. This includes all weighted flows into and out of
+each node.}
 
+\item{order}{An integer vector of length N, where N is number of nodes in x,
+specifying the new order of the nodes (by default order = 0, which indicates
+moving non-living nodes to the end)}
 }
-
 \value{
-  Returns a network object with nodes ordered as per the node order vector or without the node order vector, by default moves the non-living nodes to the end of the node vector, minimizing the order change for other nodes.
+Returns a network object with nodes ordered as per the node order
+vector or without the node order vector, by default moves the non-living
+nodes to the end of the node vector, minimizing the order change for other
+nodes.
 }
-
-
-\author{
-Pawandeep Singh (pawan.s@live.co.uk)
+\description{
+Reorders nodes in a network either through a user defined node order vector
+or by default places the non-living nodes to the end of the node vector,
+minimizing the order change for other nodes.
 }
 \note{
-	The node order vector "order" must be of length equal to the number of nodes in x (i.e. N) and must contain all integers from 1 to N.
-	
-	This function can be used with default conditions (i.e. without "order" vector) to reorder the nodes of a network which does not have non-living nodes placed at the end so that the Trophic Aggregations analysis (enaTroAgg) can be run on the reordered model. 
-}
+The node order vector "order" must be of length equal to the number of
+nodes in x (i.e. N) and must contain all integers from 1 to N.
 
-
-\seealso{
-  \code{\link{enaTroAgg}}
+This function can be used with default conditions (i.e. without "order"
+vector) to reorder the nodes of a network which does not have non-living
+nodes placed at the end so that the Trophic Aggregations analysis
+(enaTroAgg) can be run on the reordered model.
 }
 \examples{
+
+
+
 data(troModels)
-new.network <- netOrder(troModels[[6]],c(1,3,2,5,4))
+new.network <- netOrder(troModels[[6]], c(1, 3, 2, 5, 4))
 # new.network is the required rearranged network with nodes in the desired order.
+
+
+
 }
+\author{
+Pawandeep Singh
+}
+\seealso{
+\code{\link{enaTroAgg}}
+}
+
diff --git a/man/oyster.Rd b/man/oyster.Rd
index a47a509..9081e9f 100644
--- a/man/oyster.Rd
+++ b/man/oyster.Rd
@@ -1,22 +1,20 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/enaR-package.R
+\docType{data}
 \name{oyster}
 \alias{oyster}
-\docType{data}
-\title{
-  Intertidal Oyster Reef Ecosystem Model
-}
+\title{Intertidal Oyster Reef Ecosystem Model}
 \description{
-  Intertidal oyster reef ecosystem model created by Dame and Patten
-  (1981).  Data were taken from Patten (1985).  Model flows are in kcal
-  m^-2 day^-1; storage data is kcal m^-2.
+Intertidal oyster reef ecosystem model created by Dame and Patten (1981).
+Data were taken from Patten (1985).  Model flows are in kcal m^-2 day^-1;
+storage data is kcal m^-2.
 }
-\usage{data(oyster)}
-
 \references{
-Dame, R. F., and B. C. Patten. 1981. Analysis of energy flows in an
-intertidal oyster reef. Marine Ecology Progress Series 5:115-124.
+Dame, R. F., and B. C. Patten. 1981. Analysis of energy flows in
+an intertidal oyster reef. Marine Ecology Progress Series 5:115-124.
 
-Patten, B. C. 1985. Energy cycling, length of food chains, and direct
-versus indirect effects in ecosystems. Can. Bull. Fish. Aqu. Sci. 213:119-138.
+Patten, B. C. 1985. Energy cycling, length of food chains, and direct versus
+indirect effects in ecosystems. Can. Bull. Fish. Aqu. Sci. 213:119-138.
 }
-
 \keyword{datasets}
+
diff --git a/man/pack.Rd b/man/pack.Rd
index 0b83607..86226ad 100644
--- a/man/pack.Rd
+++ b/man/pack.Rd
@@ -1,49 +1,38 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/pack.R
 \name{pack}
 \alias{pack}
-\title{
-  Compile Network Information into a Network Class
-}
-\description{
-  This function provides a flexible framework for importing flow network
-  information into a network class object for analyses.
-}
+\title{Compile Network Information into a Network Class}
 \usage{
-pack(flow,input=NA,respiration=NA,export=NA,output=NA,storage=NA,living=NA)
+pack(flow, input = NA, respiration = NA, export = NA, output = NA,
+  storage = NA, living = NA)
 }
 \arguments{
-  \item{flow}{
-    The flow matrix.
-  }
-  \item{input}{
-    The inputs into the system.
-  }
-  \item{respiration}{
-    The quantities respired from the system. 
-  }
-  \item{export}{
-    The exports from the system. 
-  }
-  \item{output}{
-    The output (i.e. exports + respiration) from the system. 
-  }
-  \item{storage}{
-    The quantities stored in compartments within the system. 
-  }
-  \item{living}{
-    A logical vector indicating whether a node is either 'living' (=
-    TRUE) or 'dead' (=FALSE).
-  }
-}
+\item{flow}{The flow matrix.}
+
+\item{input}{The inputs into the system.}
+
+\item{respiration}{The quantities respired from the system.}
+
+\item{export}{The exports from the system.}
 
+\item{output}{The output (i.e. exports + respiration) from the system.}
+
+\item{storage}{The quantities stored in compartments within the system.}
+
+\item{living}{A logical vector indicating whether a node is either 'living'
+(= TRUE) or 'dead' (=FALSE).}
+}
 \value{
-  Returns a network object for the supplied model.
+Returns a network object for the supplied model.
+}
+\description{
+This function provides a flexible framework for importing flow network
+information into a network class object for analyses.
 }
-
 \author{
-Matthew K. Lau (mkl48@nau.edu)
-Stuart R. Borrett (borretts@uncw.edu)
+Matthew K. Lau Stuart R. Borrett
 }
-
 \seealso{
 \code{\link{unpack}}
 }
diff --git a/man/read.EcoNet.Rd b/man/read.EcoNet.Rd
new file mode 100644
index 0000000..282f2c5
--- /dev/null
+++ b/man/read.EcoNet.Rd
@@ -0,0 +1,33 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/read.EcoNet.R
+\name{read.EcoNet}
+\alias{read.EcoNet}
+\title{Read an EcoNet model.}
+\usage{
+read.EcoNet(x, verbose = FALSE)
+}
+\arguments{
+\item{x}{An object with the EcoNet formatted file, which can be read into R
+using readLines.}
+
+\item{verbose}{LOGICAL: should warnings be suppressed?}
+}
+\value{
+Returns the model formatted as a network object.
+}
+\description{
+This function allows the user to access models that are formatted for
+EcoNet, the web-based interface for conducting ENA
+(http://eco.engr.uga.edu/), by Caner Kazanci at the University of Georgia.
+}
+\author{
+Matthew K. Lau
+}
+\references{
+Kazanci, C., 2007. EcoNet: A new software for ecological
+modeling, simulation and network analysis, Ecol. Model., Vol 208/1 pp 3-8.
+}
+\seealso{
+\code{\link{EcoNetWeb}}
+}
+
diff --git a/man/read.enam.Rd b/man/read.enam.Rd
index 524663b..c220f16 100644
--- a/man/read.enam.Rd
+++ b/man/read.enam.Rd
@@ -1,41 +1,46 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/read.enam.R
 \name{read.enam}
 \alias{read.enam}
-\title{
-  Read ENA Model from an Mdloti Formatted Excel File
-}
-\description{
-  This function reads network data from an excel file commonly used by
-  Ursula Sharler.  The file has three header lines (name/source, number of
-  compartments, number of living nodes) and then a n+2 x n+2 matrix of
-  flows.  This is the flow matrix with an additional row for imports and
-  biomass each and additional columns for exports and respirations.
-}
+\title{R function to read in a matrix formatted as Mdloti (Ursula Sharler)
+Borrett | Sept. 12, 2012, MKL July 2013
+Updated - Borrett, May 2016 - to use pack() to create the network data object.
+------------------------
+R function to read in a matrix formatted as Mdloti (Ursula Sharler) Borrett
+| Sept. 12, 2012, MKL July 2013 Updated - Borrett, May 2016 - to use pack()
+to create the network data object. ------------------------ R function to
+read in a matrix formatted as Mdloti (Ursula Sharler) Borrett | Sept. 12,
+2012, MKL July 2013 Updated - Borrett, May 2016 - to use pack() to create
+the network data object. ------------------------ Read ENA Model from an
+Mdloti Formatted Excel File}
 \usage{
-read.enam(file='file path and name')
+read.enam(file = "file path and name")
 }
 \arguments{
-  \item{file}{
-    The name and path for the data file.  This function assumes the data are
-    stored on the first sheet of an Microsoft Excel formatted. NOTE: this
-    function depends on the read.xlsx function from the xlsx package, which
-    requires that the entire path be specified from the root directory
-    (i.e. the absolute path).
-  }
+\item{file}{The name and path for the data file.  This function assumes the
+data are stored on the first sheet of an Microsoft Excel formatted. NOTE:
+this function depends on the read.xlsx function from the xlsx package, which
+requires that the entire path be specified from the root directory (i.e. the
+absolute path).}
 }
 \value{
-  Returns the network object.
+Returns the network object.
 }
-\references{
-  Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network
-  Environ Analysis.  Environ. Model. Softw. 21, 375-405.
+\description{
+This function reads network data from an excel file commonly used by Ursula
+Sharler.  The file has three header lines (name/source, number of
+compartments, number of living nodes) and then a n+2 x n+2 matrix of flows.
+This is the flow matrix with an additional row for imports and biomass each
+and additional columns for exports and respirations.
 }
 \author{
-  Stuart R. Borrett (borretts@uncw.edu)
+Stuart R. Borrett
+}
+\references{
+Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network
+Environ Analysis.  Environ. Model. Softw. 21, 375-405.
 }
-
-
 \seealso{
-  \code{\link{read.scor}}
+\code{\link{read.scor}}
 }
 
-
diff --git a/man/read.nea.Rd b/man/read.nea.Rd
index 40fd948..a3f779b 100644
--- a/man/read.nea.Rd
+++ b/man/read.nea.Rd
@@ -1,38 +1,52 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/read.nea.R
 \name{read.nea}
 \alias{read.nea}
-\title{
-  Read NEA Formatted Network Model
-}
-\description{
-  This function reads in and creates a network object from a NEA formatted
-  data file (Fath and Borrett 2006). 
-}
+\title{read.nea.RData
+INPUT = Model Data (flows, inputs, outputs, storage) formatted as for NEA.m, saved as CSV file
+       S=  |[F][z][X]|
+           |[y][0][0]|
+OUPUT = R Network data object for use with enaR}
 \usage{
-read.nea(file="file name",sep=',',warn=TRUE)
+read.nea(file = "file name", sep = ",", warn = TRUE)
 }
 \arguments{
-  \item{file}{
-    The name and path for the data file.
-  }
-  \item{sep}{
-    The separation character used to delimit data values.
-  }
-  \item{warn}{
-    LOGICAL: should pack warnings be reported?
-  }
+\item{file}{The name and path for the data file.}
+
+\item{sep}{The separation character used to delimit data values.}
+
+\item{warn}{LOGICAL: should pack warnings be reported?}
 }
 \value{
-  Returns the network object.
+Returns the network object.
 }
-\references{
-  Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network
-  Environ Analysis.  Environ. Model. Softw. 21, 375-405.
+\description{
+Borrett | July 15, 2013
+--------------------------------------------------
+read.nea.RData INPUT = Model Data (flows, inputs, outputs, storage)
+formatted as for NEA.m, saved as CSV file S= |[F][z][X]| |[y][0][0]| OUPUT =
+R Network data object for use with enaR
+}
+\details{
+Borrett | July 15, 2013 --------------------------------------------------
+read.nea.RData INPUT = Model Data (flows, inputs, outputs, storage)
+formatted as for NEA.m, saved as CSV file S= |[F][z][X]| |[y][0][0]| OUPUT =
+R Network data object for use with enaR
+
+Borrett | July 15, 2013 --------------------------------------------------
+Read NEA Formatted Network Model
+
+This function reads in and creates a network object from a NEA formatted
+data file (Fath and Borrett 2006).
 }
 \author{
-  Stuart R. Borrett (borretts@uncw.edu)
+Stuart R. Borrett
+}
+\references{
+Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network
+Environ Analysis.  Environ. Model. Softw. 21, 375-405.
 }
-
-
 \seealso{
-  \code{\link{write.nea}}
+\code{\link{write.nea}}
 }
+
diff --git a/man/read.scor.Rd b/man/read.scor.Rd
index f23c1a7..e120237 100644
--- a/man/read.scor.Rd
+++ b/man/read.scor.Rd
@@ -1,57 +1,58 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/read.scor.R
 \name{read.scor}
 \alias{read.scor}
-\title{
-  Read SCOR Formatted Model
-}
-\description{
-  Read in network model data files that are in the SCOR format (REFERENCE).
-}
+\title{read.scor --- SCOR formatted file into R
+in multiple formats
+INPUT = file path
+OUTPUT = network model in chosen format
+S. Borrett and M. Lau | July 2011
+------------------------------------
+read.scor --- SCOR formatted file into R in multiple formats INPUT = file
+path OUTPUT = network model in chosen format S. Borrett and M. Lau | July
+2011 ------------------------------------ read.scor --- SCOR formatted file
+into R in multiple formats INPUT = file path OUTPUT = network model in
+chosen format S. Borrett and M. Lau | July 2011
+------------------------------------ Read SCOR Formatted Model}
 \usage{
-read.scor(file,from.file=TRUE,warn = FALSE)
+read.scor(file, from.file = TRUE, warn = FALSE)
 }
-
 \arguments{
-  \item{file}{
-    File path or plain text.
-  }
-  \item{from.file}{
-    States whether the file argument input should be treated as a file path (TRUE)
-    or plain text (FALSE).
-  }
-  \item{warn}{
-    Turn on (TRUE) or off (FALSE) warnings.
-  }
+\item{file}{File path or plain text.}
+
+\item{from.file}{States whether the file argument input should be treated as
+a file path (TRUE) or plain text (FALSE).}
+
+\item{warn}{Turn on (TRUE) or off (FALSE) warnings.}
+}
+\value{
+Returns the network model in one of several formats. The default
+format is a network object used by the statnet package (type="network").
+Three other options are the network environ analysis format (type="nea") as
+defined by (Fath and Borrett 2006), a list format (type="list") and an edge
+list (type="edge.list").
+}
+\description{
+Read in network model data files that are in the SCOR format (REFERENCE).
 }
 \details{
-  The SCOR file must be formatted properly. In particular, the number of
-  nodes on the second line must have the first three characters
-  dedicated to the total number of nodes and the next three characters
-  should contain the number of living nodes. That is, the second line of
-  the file should be formatted as 'xxxyyy' where x and y are the
-  characters for the total number of nodes and the number of living
-  nodes, respectively. Thus, if the total number of nodes is 10 and the
-  number of living nodes is 1, then the second line should read, " 10
-  1."
+The SCOR file must be formatted properly. In particular, the number of nodes
+on the second line must have the first three characters dedicated to the
+total number of nodes and the next three characters should contain the
+number of living nodes. That is, the second line of the file should be
+formatted as 'xxxyyy' where x and y are the characters for the total number
+of nodes and the number of living nodes, respectively. Thus, if the total
+number of nodes is 10 and the number of living nodes is 1, then the second
+line should read, " 10 1."
 }
-  
-\value{
-  Returns the network model in one of several formats. The default
-  format is a network object used by the statnet package
-  (type="network"). Three other options are the network environ analysis
-  format (type="nea") as defined by (Fath and Borrett 2006), a list
-  format (type="list") and an edge list (type="edge.list").
-  
+\author{
+Matthew K. Lau Stuart R. Borrett
 }
-
 \references{
-  Ulanowicz, R.E. and J.J. Kay. 1991. A package for the analysis of
-  ecosystem flow networks. Environmental Software 6:131-142.
+Ulanowicz, R.E. and J.J. Kay. 1991. A package for the analysis
+of ecosystem flow networks. Environmental Software 6:131-142.
 
-  Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network
-  Environ Analysis.  Environ. Model. Softw. 21, 375-405.
+Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network Environ
+Analysis.  Environ. Model. Softw. 21, 375-405.
 }
 
-\author{
-  Matthew K. Lau (mkl48@nau.edu)
-  Stuart R. Borrett (borretts@uncw.edu)
-}
diff --git a/man/read.wand.Rd b/man/read.wand.Rd
index a5f2600..2f4e6cc 100644
--- a/man/read.wand.Rd
+++ b/man/read.wand.Rd
@@ -1,33 +1,40 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/read.wand.R
 \name{read.wand}
 \alias{read.wand}
-\title{
-  Read WAND Formatted Model
-}
-\description{
-  Reads WAND formatted network models.
-}
+\title{read.wand --- WAND formatted file into R
+INPUT = file path
+OUTPUT = network object
+S. Borrett | May 2012
+------------------------------------
+read.wand --- WAND formatted file into R INPUT = file path OUTPUT = network
+object S. Borrett | May 2012 ------------------------------------ read.wand
+--- WAND formatted file into R INPUT = file path OUTPUT = network object S.
+Borrett | May 2012 ------------------------------------ Read WAND Formatted
+Model}
 \usage{
 read.wand(file = "file name with path")
 }
 \arguments{
-  \item{file}{
-    File path to WAND formatted data file.
-  }
+\item{file}{File path to WAND formatted data file.}
 }
-
 \value{
-  Returns a network object from a WAND formatted data file. 
+Returns a network object from a WAND formatted data file.
 }
-\references{
-  Allesina, S., Bondavalli, C., 2004. WAND: an Ecological Network Analysis
-  user-friendly tool. Environmental Modelling and Software 19(4):337-340.
+\description{
+Reads WAND formatted network models.
+}
+\note{
+IMPORTANT: this function depends on the read.xlsx function from the
+xlsx package, which requires that the entire path be specified from the root
+directory (i.e. the absolute path).
 }
 \author{
-  Matthew K. Lau (mkl48@nau.edu)
-  Stuart R. Borrett (borretts@uncw.edu)
+Matthew K. Lau Stuart R. Borrett
 }
-\note{
-  IMPORTANT: this function depends on the read.xlsx function from the xlsx
-  package, which requires that the entire path be specified from the root
-  directory (i.e. the absolute path).
+\references{
+Allesina, S., Bondavalli, C., 2004. WAND: an Ecological Network
+Analysis user-friendly tool. Environmental Modelling and Software
+19(4):337-340.
 }
+
diff --git a/man/relationalChange.Rd b/man/relationalChange.Rd
new file mode 100644
index 0000000..a849fac
--- /dev/null
+++ b/man/relationalChange.Rd
@@ -0,0 +1,60 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/relationalChange.r
+\name{relationalChange}
+\alias{relationalChange}
+\title{Relational change compared between two matrices.}
+\usage{
+relationalChange(x = "Direct.U", y = "Integral.U")
+}
+\arguments{
+\item{x}{x is a square matrix of real numbers.  While this function is more
+general, the initial intention was for this to be the direct utility matrix.}
+
+\item{y}{y is a square matrix of real numbers.  While this function is more
+general, the initial intention was for this to be the integral utility
+matrix or the mixed trophic impacts matrix.}
+}
+\value{
+\item{Direct.Signs}{A sign matrix for matrix x.}
+\item{Integral.Signs}{A sign matrix for matrix x.} \item{Direct.Relations}{A
+matrix of the pairwise sign relationships for matrix x.}
+\item{Integral.Relations}{A matrix of the pairwise signed relationships in
+matrix y.} \item{Relations.Table}{A table that summarizes the relations.}
+\item{Changed.Table}{A summary table of only the pariwise relationships that
+changed between x and y.} \item{ns}{A vector of network statisitcs which
+currently includes one whole-network statistic - a ratio of the
+relationships changed between x and y.}
+}
+\description{
+Identifies the signs and pairwise relationsips of two matrices and compares
+the difference between them.
+}
+\note{
+This function is called by enaUtility and enaMTI to summarize results.
+}
+\examples{
+
+
+
+data(oyster)
+D <- enaUtility(oyster)$D
+U <- enaUtility(oyster)$U
+rc <- relationalChange(D, U)
+
+
+## To get a count of the number of differnt pairwise relationships in one of the
+## sign matrices, you can use the table function
+
+count <- table(rc$Direct.Relations)
+
+
+
+
+}
+\author{
+Stuart R. Borrett
+}
+\seealso{
+\code{\link{enaUtility}, \link{enaMTI}, \link{signs}}
+}
+
diff --git a/man/scc.Rd b/man/scc.Rd
index 0291168..fe8db65 100644
--- a/man/scc.Rd
+++ b/man/scc.Rd
@@ -1,57 +1,66 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/scc.R
 \name{scc}
 \alias{scc}
-\title{
-  Find the Strongly Connected Component (SCC) in a Graph
-}
-\description{
-  This function finds the strongly connected components (SCCs) of an
-  adjacency matrix A and returns a number of derived network statistics.
-}
+\title{scc --- find the strongly connected component
+INPUT = an adjacency matrix
+OUTPUT = list of membership and values
+S. Borrett | July 2011
+------------------------------------
+scc --- find the strongly connected component INPUT = an adjacency matrix
+OUTPUT = list of membership and values S. Borrett | July 2011
+------------------------------------ scc --- find the strongly connected
+component INPUT = an adjacency matrix OUTPUT = list of membership and values
+S. Borrett | July 2011 ------------------------------------ Find the
+Strongly Connected Component (SCC) in a Graph}
 \usage{
 scc(A = "adjacency")
 }
-%- maybe also 'usage' for other objects documented here.
 \arguments{
-  \item{A}{an n x n adjacency matrix.}
+\item{A}{an n x n adjacency matrix.}
 }
-
 \value{
-  \item{sp}{a list of structural properties including: the number of
-    SCCs ("no.scc"), the number of SCCs with more than 1 node ("no.scc.big"), and the
-    fraction of the network nodes participating in a large SCC ("pscc")}
-  \item{membership}{numeric vector giving the cluseter id to which each
-    node belongs (as in igraph:clusters)}
-  \item{scc.id}{numeric vector of the numeric identity in "membership" of SCCs with more than 1 node}
+\item{sp}{a list of structural properties including: the number of
+SCCs ("no.scc"), the number of SCCs with more than 1 node ("no.scc.big"),
+and the fraction of the network nodes participating in a large SCC ("pscc")}
+\item{membership}{numeric vector giving the cluseter id to which each node
+belongs (as in igraph:clusters)} \item{scc.id}{numeric vector of the numeric
+identity in "membership" of SCCs with more than 1 node}
+}
+\description{
+This function finds the strongly connected components (SCCs) of an adjacency
+matrix A and returns a number of derived network statistics.
 }
+\note{
+Input matrix is assumed to be oriented from columns to rows.
+}
+\examples{
 
-\references{
-  Allesina, S., Bodini, A., Bondavalli, C., 2005. Ecological subsystems
-  via graph theory: the role of strongly connected components. Oikos 110,
-  164-176.
 
-  Berman, A., Plemmons, R.J., 1979. Nonnegative Matrices in the
-  Mathematical Sciences. Academic Press, New York.
 
-  Borrett, S.R., Fath, B.D., Patten, B.C. 2007. Functional integration of
-  ecological networks through pathway proliferation.  Journal of
-  Theoretical Biology 245, 98-111. 
+data(troModels)
+A <- enaStructure(troModels[[6]])$A
+scc(A)
+
+
 
 }
 \author{
-  Matthew K. Lau (mkl48@nau.edu)
-  Stuart R. Borrett (borretts@uncw.edu)
-}
-\note{
-  Input matrix is assumed to be oriented from columns to rows.
+Matthew K. Lau Stuart R. Borrett
 }
+\references{
+Allesina, S., Bodini, A., Bondavalli, C., 2005. Ecological
+subsystems via graph theory: the role of strongly connected components.
+Oikos 110, 164-176.
 
-%% ~Make other sections like Warning with \section{Warning }{....} ~
+Berman, A., Plemmons, R.J., 1979. Nonnegative Matrices in the Mathematical
+Sciences. Academic Press, New York.
 
-\seealso{
-  \link{enaStructure}
+Borrett, S.R., Fath, B.D., Patten, B.C. 2007. Functional integration of
+ecological networks through pathway proliferation.  Journal of Theoretical
+Biology 245, 98-111.
 }
-\examples{
-data(troModels)
-A<-enaStructure(troModels[[6]])$A
-scc(A)
+\seealso{
+\link{enaStructure}
 }
+
diff --git a/man/scifix.Rd b/man/scifix.Rd
index e636cba..c105fc2 100644
--- a/man/scifix.Rd
+++ b/man/scifix.Rd
@@ -1,30 +1,38 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/scifix.R
 \name{scifix}
 \alias{scifix}
-\title{
-  Standardizes Scientific Notation from SCOR Formatted Files
-}
-\description{
-  This is a support function that corrects the scientific notation in SCOR formatted
-  data files.
-}
+\title{scifix --- corrects missing e or E in 
+scientific notation
+INPUT = scalar either in or not in 
+scientific notation
+OUTPUT = corrected numeric value
+M. Lau | July 2012
+------------------------------------
+scifix --- corrects missing e or E in scientific notation INPUT = scalar
+either in or not in scientific notation OUTPUT = corrected numeric value M.
+Lau | July 2012 ------------------------------------ scifix --- corrects
+missing e or E in scientific notation INPUT = scalar either in or not in
+scientific notation OUTPUT = corrected numeric value M. Lau | July 2012
+------------------------------------ Standardizes Scientific Notation from
+SCOR Formatted Files}
 \usage{
 scifix(x)
 }
 \arguments{
-  \item{x}{
-    A numeric or character scalar.
-  }
+\item{x}{A numeric or character scalar.}
 }
-
 \value{
-  Returns a numeric scalar in appropriate scientific notation.
+Returns a numeric scalar in appropriate scientific notation.
+}
+\description{
+This is a support function that corrects the scientific notation in SCOR
+formatted data files.
 }
-
 \author{
-  Matthew K. Lau (mkl48@nau.edu)
+Matthew K. Lau
 }
-
 \seealso{
-  \code{\link{read.scor}}
+\code{\link{read.scor}}
 }
 
diff --git a/man/set.orient.Rd b/man/set.orient.Rd
index 938d645..e5323a8 100644
--- a/man/set.orient.Rd
+++ b/man/set.orient.Rd
@@ -1,59 +1,65 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/set.orient.R
 \name{set.orient}
 \alias{set.orient}
-\title{
-  Globally Set the Output Matrix Orientation
-}
-\description{
-  Changes the orientation of output matrices.
-}
+\title{set.orient --- globally reorients matrices
+INPUT = matrix orientation (rc or cr)
+OUTPUT = sets the expected orientation of matrices}
 \usage{
-set.orient(x = c('rc','school'))
+set.orient(x = c("rc", "school"))
 }
 \arguments{
-  \item{x}{
-    Orientation setting. If "rc" (DEFAULT), all matrix output will be returned in
-    row (=input) to column (=output) orientation, regardless of school. If "school", then
-    output matrices from functions from particular ENA schools will be
-    oriented as expected in that school (i.e. Patten = column-row or
-    Ulanowicz = row-column). Note, that all functions in the enaR package
-    expect input matrices to be oriented row-column.
-  }
-  
+\item{x}{Orientation setting. If "rc" (DEFAULT), all matrix output will be
+returned in row (=input) to column (=output) orientation, regardless of
+school. If "school", then output matrices from functions from particular ENA
+schools will be oriented as expected in that school (i.e. Patten =
+column-row or Ulanowicz = row-column). Note, that all functions in the enaR
+package expect input matrices to be oriented row-column.}
 }
-\details{
-  The enaR package as a
-  whole, and the broader network analysis community, assumes a row to
-  column orientation; thus, the default orientation for the package is
-  row to column (DEFAULT = 'rc'). However, functions from the Patten school were
-  orignially developed to conduct calculations and produce output in the
-  column to row orientation. In order to facilitate the use of these
-  functions, we also provide the option for users to return output in
-  the orientation of the "school" (i.e. Patten results will be column to
-  row oriented) by setting the global orientation to "school" using this fuction.
+\description{
+M. Lau | Feb 2013
+---------------------------------------------------
+set.orient --- globally reorients matrices INPUT = matrix orientation (rc or
+cr) OUTPUT = sets the expected orientation of matrices
 }
+\details{
+M. Lau | Feb 2013 ---------------------------------------------------
+set.orient --- globally reorients matrices INPUT = matrix orientation (rc or
+cr) OUTPUT = sets the expected orientation of matrices
 
-% \references{
-% %% ~put references to the literature/web site here ~
-% Allesina, S., Bondavalli, C., 2003. Steady state of ecosystem flow
-% networks: a comparison between balancing procedures.Ecological Modelling 165(2-3):231-239.
-% }
+M. Lau | Feb 2013 ---------------------------------------------------
+Globally Set the Output Matrix Orientation
 
-\author{
-Matthew K. Lau (mkl48@nau.edu)
-Stuart R. Borrett (borretts@uncw.edu)
-}
+Changes the orientation of output matrices.
 
-\seealso{
-  \code{\link{get.orient}}
+The enaR package as a whole, and the broader network analysis community,
+assumes a row to column orientation; thus, the default orientation for the
+package is row to column (DEFAULT = 'rc'). However, functions from the
+Patten school were orignially developed to conduct calculations and produce
+output in the column to row orientation. In order to facilitate the use of
+these functions, we also provide the option for users to return output in
+the orientation of the "school" (i.e. Patten results will be column to row
+oriented) by setting the global orientation to "school" using this fuction.
 }
-
 \examples{
+
+
+
 original.orientation = get.orient()
 original.orientation
-set.orient('school')
+set.orient("school")
 get.orient()
-set.orient('rc')
+set.orient("rc")
 get.orient()
 set.orient(original.orientation)
+
+
+
+}
+\author{
+Matthew K. Lau Stuart R. Borrett
+}
+\seealso{
+\code{\link{get.orient}}
 }
 
diff --git a/man/signs.Rd b/man/signs.Rd
new file mode 100644
index 0000000..fab0524
--- /dev/null
+++ b/man/signs.Rd
@@ -0,0 +1,47 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/signs.r
+\name{signs}
+\alias{signs}
+\title{Signs and summary of input matrix}
+\usage{
+signs(x = "matrix")
+}
+\arguments{
+\item{x}{x is a square matrix of real numbers.  While this function is more
+general, the initail intention was for this to be a utility matrix or the
+mixed trophic impacts matrix.}
+}
+\value{
+\item{sign}{A sign matrix for matrix x.} \item{relations}{A matrix
+of the pairwise signed relationships in x.} \item{rs.tab}{Table summarizing
+the pairwise relationships and identifying their ecological label.}
+\item{relationship.counts}{A count of the different kinds of pairwise
+relationships found in matrix x.}
+}
+\description{
+Identifies the signs and pairwise relationsips of a given matrix.  This
+includes also returns a summary table that provides the ecological name of
+each pairwise realtionship, and a summary of the counts.
+}
+\note{
+This function is called by relationalChange, and was created to
+generate more informative output from enaUtility and enaMTI.
+}
+\examples{
+
+
+
+data(oyster)
+U <- enaUtility(oyster)$U
+s <- signs(U)
+
+
+
+}
+\author{
+Stuart R. Borrett
+}
+\seealso{
+\code{\link{relationalChange}}
+}
+
diff --git a/man/ssCheck.Rd b/man/ssCheck.Rd
index 125329d..8524ee4 100644
--- a/man/ssCheck.Rd
+++ b/man/ssCheck.Rd
@@ -1,50 +1,64 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/ssCheck.R
 \name{ssCheck}
 \alias{ssCheck}
-\title{
-  Checks the Balance of Inputs and Outputs from a Network
-}
-\description{
-  This function supports the balancing process by checking if the inputs
-  and outputs of a given network model are within acceptable limits.
-}
+\title{ssCheck --- checks if the given network
+is out of balance by a given tolerance
+threshold
+INPUT = network object
+OUTPUT = logical indicating violation of
+tolerance
+NOTE: used in the balancing process
+M. Lau | July 2011
+------------------------------------
+ssCheck --- checks if the given network is out of balance by a given
+tolerance threshold INPUT = network object OUTPUT = logical indicating
+violation of tolerance NOTE: used in the balancing process M. Lau | July
+2011 ------------------------------------ ssCheck --- checks if the given
+network is out of balance by a given tolerance threshold INPUT = network
+object OUTPUT = logical indicating violation of tolerance NOTE: used in the
+balancing process M. Lau | July 2011 ------------------------------------
+Checks the Balance of Inputs and Outputs from a Network}
 \usage{
-ssCheck(x, tol = 5,more=FALSE,zero.na=TRUE)
+ssCheck(x, tol = 5, more = FALSE, zero.na = TRUE)
 }
 \arguments{
-  \item{x}{
-    A network object.
-  }
-  \item{tol}{
-    The threshold for balance in percent difference between input and
-    outputs.
-  }
-  \item{more}{
-    LOGICAL: should more detailed results be returned?
-  }
-  \item{zero.na}{
-    LOGICAL: should NA values be changed to zeros?
-  }
-}
+\item{x}{A network object.}
 
-\value{
-  Returns a logical value stating if the model is within acceptable limits
-  of balance (TRUE) or if it is not (FALSE).
-}
+\item{tol}{The threshold for balance in percent difference between input and
+outputs.}
 
-\references{
-  Fath, B.D. and S.R. Borrett. 2006. A MATLAB function for network
-  environ analysis. Environmental Modelling & Software 21:375-405.
+\item{more}{LOGICAL: should more detailed results be returned?}
+
+\item{zero.na}{LOGICAL: should NA values be changed to zeros?}
 }
-\author{
-  Matthew K. Lau (mkl48@nau.edu)
-  Stuart R. Borrett (borretts@uncw.edu)
+\value{
+Returns a logical value stating if the model is within acceptable
+limits of balance (TRUE) or if it is not (FALSE).
 }
-
-\seealso{
-  \code{\link{balance}}
+\description{
+This function supports the balancing process by checking if the inputs and
+outputs of a given network model are within acceptable limits.
 }
 \examples{
+
+
+
 data(troModels)
 ssCheck(troModels[[2]])
 ssCheck(troModels[[6]])
+
+
+
 }
+\author{
+Matthew K. Lau Stuart R. Borrett
+}
+\references{
+Fath, B.D. and S.R. Borrett. 2006. A MATLAB function for network
+environ analysis. Environmental Modelling & Software 21:375-405.
+}
+\seealso{
+\code{\link{balance}}
+}
+
diff --git a/man/structure.statistics.Rd b/man/structure.statistics.Rd
index b5dab1e..19a8e2c 100644
--- a/man/structure.statistics.Rd
+++ b/man/structure.statistics.Rd
@@ -1,45 +1,48 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/structure.statistics.R
 \name{structure.statistics}
 \alias{structure.statistics}
-\title{
-  Structural Statistics of an Ecological Network
-}
-\description{
-  This function returns several network statistics that describe a
-  network.  
-}
+\title{structure.statistics --- calculates structural statistics
+INPUT = an adjacency matrix
+OUTPUT = list of structural statistics
+S. Borrett | July 2011
+------------------------------------
+structure.statistics --- calculates structural statistics INPUT = an
+adjacency matrix OUTPUT = list of structural statistics S. Borrett | July
+2011 ------------------------------------ structure.statistics ---
+calculates structural statistics INPUT = an adjacency matrix OUTPUT = list
+of structural statistics S. Borrett | July 2011
+------------------------------------ Structural Statistics of an Ecological
+Network}
 \usage{
 structure.statistics(A = "adjacency matrix")
 }
 \arguments{
-  \item{A}{An adjacency matrix.}
+\item{A}{An adjacency matrix.}
 }
-
 \value{
-  \item{n}{Number of nodes in A.}
-  \item{L}{Number of direct connections in A.}
-  \item{C}{Connectivity of A.}
-  \item{LD}{Link density.}
-  \item{lam1A}{First dominant eigenvalue of A.}
-  \item{mlam1A}{Multiplicity of the dominant eigenvalue.}
-  \item{lam2A}{Magnitude of the second largest eigenvalue.}
-  \item{rho}{Damping ratio (see Caswell 2001).}
-  \item{R}{Distance of lam1A from the bulk of the eigen spectrum.}
-  \item{d}{Difference between the dominant eigenvalue and the link density.}
-  \item{no.scc}{Number of strongly connected components.}
-  \item{no.scc.big}{Number of strongly connected components greater than 1.}
-  \item{pscc}{Precent of nodes participating in a strongly connected component.}
+\item{n}{Number of nodes in A.} \item{L}{Number of direct
+connections in A.} \item{C}{Connectivity of A.} \item{LD}{Link density.}
+\item{lam1A}{First dominant eigenvalue of A.} \item{mlam1A}{Multiplicity of
+the dominant eigenvalue.} \item{lam2A}{Magnitude of the second largest
+eigenvalue.} \item{rho}{Damping ratio (see Caswell 2001).} \item{R}{Distance
+of lam1A from the bulk of the eigen spectrum.} \item{d}{Difference between
+the dominant eigenvalue and the link density.} \item{no.scc}{Number of
+strongly connected components.} \item{no.scc.big}{Number of strongly
+connected components greater than 1.} \item{pscc}{Precent of nodes
+participating in a strongly connected component.}
 }
-\references{
-  Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network
-  Environ Analysis.  Environ. Model. Softw. 21, 375-405.
+\description{
+This function returns several network statistics that describe a network.
 }
 \author{
-  Matthew K. Lau (mkl48@nau.edu)
-  Stuart R. Borrett (borretts@uncw.edu)
+Matthew K. Lau Stuart R. Borrett
+}
+\references{
+Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network
+Environ Analysis.  Environ. Model. Softw. 21, 375-405.
 }
 \seealso{
-  \code{\link{enaStructure}},\code{\link{scc}}
+\code{\link{enaStructure}},\code{\link{scc}}
 }
-% \examples{
-% }
 
diff --git a/man/troModels.Rd b/man/troModels.Rd
index bb9e75c..274fc9a 100644
--- a/man/troModels.Rd
+++ b/man/troModels.Rd
@@ -1,19 +1,15 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/enaR-package.R
+\docType{data}
 \name{troModels}
 \alias{troModels}
-\docType{data}
-\title{
-  Trophic Models
-}
+\title{Trophic Models}
 \description{
 A set of 58 trophic models compiled by the SEE Lab at UNCW.
 }
-
 \references{
 Borrett, S. R., and M. K. Lau. In Prep. enaR: An R package for
 Ecological Network Analysis. Ecological Modeling and Software.
-
 }
-\usage{data(troModels)}
-
-
 \keyword{datasets}
+
diff --git a/man/unpack.Rd b/man/unpack.Rd
index 1bf6bb7..12edc0a 100644
--- a/man/unpack.Rd
+++ b/man/unpack.Rd
@@ -1,42 +1,55 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/unpack.R
 \name{unpack}
 \alias{unpack}
-\title{
-  "Unpacks" the Network Object into Separate Objects
-}
-\description{
-  Separates the components of a network object into separate components
-  within a list. This includes inputs, exports, respirations, outputs (exports +
-  respirations), storage, and internal flows.
-}
+\title{unpack --- extracts network object into
+a list
+INPUT = network object
+OUTPUT = list of network model components
+S. Borrett and M. Lau | July 2011
+------------------------------------
+unpack --- extracts network object into a list INPUT = network object OUTPUT
+= list of network model components S. Borrett and M. Lau | July 2011
+------------------------------------ unpack --- extracts network object into
+a list INPUT = network object OUTPUT = list of network model components S.
+Borrett and M. Lau | July 2011 ------------------------------------
+"Unpacks" the Network Object into Separate Objects}
 \usage{
 unpack(x = "network object")
 }
 \arguments{
-  \item{x}{A  network object.  This includes all weighted flows into and out of
-    each node.}
+\item{x}{A network object.  This includes all weighted flows into and out of
+each node.}
 }
-
 \value{
-  \item{F}{matrix of flows from each node to each node oreinted row to column.}
-  \item{z}{Node boundary inputs.}
-  \item{r}{Node boundary loss from respiration.}
-  \item{e}{Node boundary loss due to exportation}
-  \item{y}{Node boundary loss; summation of r and e}
-  \item{X}{Node storage or biomass}
-  \item{Living}{Logical vector indicating whether each node is living or not}
+\item{F}{matrix of flows from each node to each node oreinted row to
+column.} \item{z}{Node boundary inputs.} \item{r}{Node boundary loss from
+respiration.} \item{e}{Node boundary loss due to exportation} \item{y}{Node
+boundary loss; summation of r and e} \item{X}{Node storage or biomass}
+\item{living}{Logical vector indicating whether each node is living or not}
 }
-
-\author{
-  Matthew K. Lau (mkl48@nau.edu)
-  Stuart R. Borrett (borretts@uncw.edu)}
-\note{
-  Flows are oriented from row to column.
+\description{
+Separates the components of a network object into separate components within
+a list. This includes inputs, exports, respirations, outputs (exports +
+respirations), storage, and internal flows.
 }
-
-\seealso{
-  \code{\link{pack},\link{read.scor}}
+\note{
+Flows are oriented from row to column.
 }
 \examples{
+
+
+
 data(troModels)
 unpack(troModels[[6]])
+
+
+
 }
+\author{
+Matthew K. Lau Stuart R. Borrett
+}
+\seealso{
+\code{\link{pack},\link{read.scor}}
+}
+
diff --git a/man/write.EcoNet.Rd b/man/write.EcoNet.Rd
index ff847fe..29b13ce 100644
--- a/man/write.EcoNet.Rd
+++ b/man/write.EcoNet.Rd
@@ -1,37 +1,37 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/write.EcoNet.R
 \name{write.EcoNet}
 \alias{write.EcoNet}
-\title{
-  Write enaR models to an EcoNet formatted file.
-}
-\description{
-  Creates an EcoNet model from an enaR network object that can be used
-  with the online interface for EcoNet.  
-}
+\title{Write enaR models to an EcoNet formatted file.}
 \usage{
-write.EcoNet(x='model',file='file path',mn='ena_model')
+write.EcoNet(x = "model", file = "file path", mn = "ena_model",
+  zero.flows = FALSE)
 }
 \arguments{
-  \item{x}{
-    Network object.
-  }
-  \item{file}{
-    The file name or path. If a simple file name is given, this function
-    uses the current working directory by default.
-  }
-  \item{mn}{
-    The model name that EcoNet will use. The DEFAULT is 'ena_model'.
-  }
+\item{x}{Network object.}
+
+\item{file}{The file name or path. If a simple file name is given, this
+function uses the current working directory by default.}
+
+\item{mn}{The model name that EcoNet will use. The DEFAULT is 'ena_model'.}
+
+\item{zero.flows}{LOGICAL: should zero flow values be written?}
 }
 \value{
-  An EcoNet formatted text file is created from the model, which can be
-  input at http://eco.engr.uga.edu.
+An EcoNet formatted text file is created from the model, which can
+be input at http://eco.engr.uga.edu.
 }
-\references{
-  About EcoNet (http://eco.engr.uga.edu/DOC/econet1.html)
-  
-  Kazanci, C. 2009. Handbook of Ecological Modelling and Informatics, by WIT Press.
+\description{
+Creates an EcoNet model from an enaR network object that can be used with
+the online interface for EcoNet.
 }
 \author{
-  Matthew K. Lau (enaR.maintainer@gmail.com)
+Matthew K. Lau
+}
+\references{
+About EcoNet (http://eco.engr.uga.edu/DOC/econet1.html)
+
+Kazanci, C. 2009. Handbook of Ecological Modelling and Informatics, by WIT
+Press.
 }
 
diff --git a/man/write.nea.Rd b/man/write.nea.Rd
index b534ee3..aff74e6 100644
--- a/man/write.nea.Rd
+++ b/man/write.nea.Rd
@@ -1,40 +1,50 @@
+% Generated by roxygen2: do not edit by hand
+% Please edit documentation in R/write.nea.R
 \name{write.nea}
 \alias{write.nea}
-\title{
-  Write a Network Object to File Using the NEA Data Format
-}
-\description{
-  This function writes a network object to a NEA formatted
-  data file (Fath and Borrett 2006). 
-}
+\title{' write.nea.R
+INPUT = enaR network data object
+Ouput = CSV formatted file with data arranged as expected input for NEA.m}
 \usage{
-write.nea(x, file.name, sep=',')
+write.nea(x, file.name, sep = ",")
 }
 \arguments{
-  \item{x}{
-    Network object.
-  }
-  \item{file.name}{
-    The file name or path. If a simple file name is given, this function
-    uses the current working directory by default.
-  }
-  \item{sep}{
-    The separation character used to delimit data values.
-  }
+\item{x}{Network object.}
+
+\item{file.name}{The file name or path. If a simple file name is given, this
+function uses the current working directory by default.}
+
+\item{sep}{The separation character used to delimit data values.}
 }
 \value{
-  Writes a network object to a NEA formatted file and returns the output
-  composite matrix.
+Writes a network object to a NEA formatted file and returns the
+output composite matrix.
 }
-\references{
-  Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network
-  Environ Analysis.  Environ. Model. Softw. 21, 375-405.
+\description{
+Borrett | July 15, 2013
+----------------------------------------
+' write.nea.R INPUT = enaR network data object Ouput = CSV formatted file
+with data arranged as expected input for NEA.m
+}
+\details{
+Borrett | July 15, 2013 ---------------------------------------- '
+write.nea.R INPUT = enaR network data object Ouput = CSV formatted file with
+data arranged as expected input for NEA.m
+
+Borrett | July 15, 2013 ---------------------------------------- Write a
+Network Object to File Using the NEA Data Format
+
+This function writes a network object to a NEA formatted data file (Fath and
+Borrett 2006).
 }
 \author{
-  Stuart R. Borrett (borretts@uncw.edu)
+Stuart R. Borrett
+}
+\references{
+Fath, B. D., Borrett, S. R. 2006. A Matlab function for Network
+Environ Analysis.  Environ. Model. Softw. 21, 375-405.
 }
-
-
 \seealso{
-  \code{\link{read.nea}}
+\code{\link{read.nea}}
 }
+
diff --git a/vignettes/.DS_Store b/vignettes/.DS_Store
index 6c1d4b5..700d365 100644
Binary files a/vignettes/.DS_Store and b/vignettes/.DS_Store differ
