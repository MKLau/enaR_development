history()
env.103[[1]][[2]]
env.103[[1]][[2]]-env.now[[1]][[2]]
env.103[[1]][[3]]-env.now[[1]][[3]]
env.103[[2]][[3]]-env.now[[2]][[3]]
for (i in 1:length(env.103)){for (j in 1:length(env.103[[i]])){all((env.103[[i]][[j]]-env.now[[i]][[j]])==0)}}
for (i in 1:length(env.103)){for (j in 1:length(env.103[[i]])){print(all((env.103[[i]][[j]]-env.now[[i]][[j]])==0))}}
get.orient()
get.orient('rc')
set.orient('rc')
for (i in 1:length(env.103)){for (j in 1:length(env.103[[i]])){print(all((env.103[[i]][[j]]-env.now[[i]][[j]])==0))}}
get.orient()
set.orient('school')
for (i in 1:length(env.103)){for (j in 1:length(env.103[[i]])){print(all((env.103[[i]][[j]]-env.now[[i]][[j]])==0))}}
set.orient('rc')
env.now <- enaEnviron(oyster)
get.orient()
env.103 <- enaEnviron(oyster)
enaEnviron
get.orient()
for (i in 1:length(env.103)){for (j in 1:length(env.103[[i]])){print(all((env.103[[i]][[j]]-env.now[[i]][[j]])==0))}}
env.103[[1]][[2]]
env.now[[1]][[2]]
x
x <- oyster
input
input=TRUE
output=TRUE
type='unit'
err.tol=1e-10
balance.override=FALSE
oo
get.orient()
F
get.orient()
oo
set.orient('rc')
x <- oyster
oo
oo
oo
get.orient()
orient
ena103Environ(oyster)
toyster <- oyster
toyster%n%'flow' <- t(oyster%n%'flow')
env103.toys <- ena103Environ(toyster)
env201.oys <- ena103Environ(oyster)
env103.toys[[1]][[2]]
env103.toys[[1]][[2]]-env201.oys[[1]][[2]]
t(env103.toys[[1]][[2]])-env201.oys[[1]][[2]]
t(env103.toys[[2]][[2]])-env201.oys[[1]][[2]]
(env103.toys[[2]][[2]])-env201.oys[[1]][[2]]
env103.toys
env201.oys
env201.oys[[1]]
env201.oys[[1]][[1]]
env103.toys[[1]][[1]]
env201.oys[[1]][[1]]
env103.toys[[1]][[1]]
env201.oys[[1]][[1]]
env103.toys[[2]][[1]]
env201.oys[[1]][[1]]
ena103Environ(oyster)
ena103Environ(oyster)[[1]][[1]]
ena103Environ(oyster)[[1]][[1]]-ena201Environ(oyster)[[1]][[1]]
ena103Environ(oyster)[[1]][[1]]-ena201Environ(oyster)[[2]][[1]]
env201 <- ena201Environ(oyster)
env103 <- ena103Environ(oyster)
env201
env201[[1]][[1]]
env103[[1]][[1]]
get.orient
get.orient()
ena201Environ
env201[[1]][[1]]
env103[[1]][[1]]
env103t <- ena103Environ(toyster)
env103t[[1]][[1]]
env103t[[2]][[1]]
install.packages('enaR')
library(enaR)
enaEnviron
q()
n
ssCheck(m)
balance
ssCheck
T
x
x=m
x=m
pe
Tin+Tout
d
Tin
Tout
T
T[nrow(T),]
Tin
Tout
m
?unlink
y
y
y
y
y
y
y
y
y
y
yes
yes
y
y
y
y
y
y
c
Rscript ../checks/enaR_checks.R 
checks$balance AVG
checks$'balance AVG'
Tbal.avg
round(as.extended(balance(em.net,method='AVG')),3)
as.extended(em.net)
T
x=m
x=troModels[[19]]
x
T
n
Tin
Tin
Toit
Tout
Tin
Tout
d
pe
all(pe<tol)
tol=5
all(pe<tol)
ssCheck
q()
n
q()
n
